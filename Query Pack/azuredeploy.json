{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceName": {
            "defaultValue": "365DaysofKQL",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.OperationalInsights/querypacks",
            "apiVersion": "2019-09-01-preview",
            "name": "[parameters('resourceName')]",
            "tags": {},
            "location": "[resourceGroup().location]",
            "properties": {}
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/002c2404-73e1-4639-be6d-c4bcec969ab5')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize distinct inbound guests",
                "description": "Visualize distinct inbound guests (guest accounts accessing your tenant) per month",
                "body": "//Visualize distinct inbound guests (guest accounts accessing your tenant) per month\r\nSigninLogs\r\n| where TimeGenerated > ago(365d)\r\n| where UserType == \"Guest\"\r\n| where ResultType == 0\r\n//Find only inbound guests, i.e those guests accessing your tenant.\r\n| summarize Count=dcountif(UserPrincipalName, AADTenantId != HomeTenantId and HomeTenantId != ResourceTenantId) by startofmonth(TimeGenerated)\r\n| render columnchart with (title=\"Distinct guest accounts accessing your tenant per month\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/00b110b9-acc6-47b7-8997-ec64d93ea003')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Active Directory - Summarize RDP activity",
                "description": "Creates a list of computers that your users have connected to via RDP and the total count of distinct computers each user has connected to\n",
                "body": "//Creates a list of computers that your users have connected to via RDP and the total count of distinct computers each user has connected to\r\nSecurityEvent\r\n| where TimeGenerated > ago(7d)\r\n| where EventID == \"4624\"\r\n| where LogonType == 10\r\n//Extend new column that drops Account to lower case so users are correctly summarized, i.e User123 and user123 are combined\r\n| extend AccountName=tolower(Account)\r\n| summarize\r\n    ['Count of Computers']=dcount(Computer),\r\n    ['List of Computers']=make_set(Computer)\r\n    by AccountName\r\n| sort by ['Count of Computers'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Active Directory"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/01297aa5-d58c-4e3d-ab04-d3132178b2ad')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Visualize RDP clients",
                "description": "Visualize the different RDP clients, such as rMemoteNG or RoyalTS being used in your environment",
                "body": "//Microsoft Sentinel query\r\nDeviceNetworkEvents\r\n| where TimeGenerated > ago(7d)\r\n| where ActionType == \"ConnectionSuccess\"\r\n| where RemotePort == \"3389\"\r\n//Exclude Defender for Identity which uses RDP traffic to map your network\r\n| where InitiatingProcessFileName != \"Microsoft.Tri.Sensor.exe\"\r\n| summarize ['RDP Client Count']=count()by InitiatingProcessFileName\r\n| where isnotempty(InitiatingProcessFileName)\r\n| sort by ['RDP Client Count'] desc\r\n| render barchart  ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/01f321a5-8dee-4247-b502-7cc148b41426')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find service principals with single IP",
                "description": "Find Azure AD service principals that have only signed in from a single IP address in the last month. You should apply Conditional Access for workloads on them - https://docs.microsoft.com/en-us/azure/active-directory/conditional-access/workload-identity\n",
                "body": "//Find Azure AD service principals that have only signed in from a single IP address in the last month. You should apply Conditional Access for workloads on them - https://docs.microsoft.com/en-us/azure/active-directory/conditional-access/workload-identity\r\n//First create a distinct count of IP addresses for each AppId and return any AppId with only 1 distinct IP\r\nlet appid=\r\n    AADServicePrincipalSignInLogs\r\n    | where TimeGenerated > ago (30d)\r\n    | where ResultType == 0\r\n    | summarize dcount(IPAddress) by AppId\r\n    | where dcount_IPAddress == 1\r\n    | distinct AppId;\r\n//Query the same data for only those AppIds and summarize each IP by the AppId and friendly service principal names\r\nAADServicePrincipalSignInLogs\r\n| where TimeGenerated > ago (30d)\r\n| where ResultType == 0\r\n| where AppId in (appid)\r\n| summarize ['Application Ids']=make_set(AppId) by IPAddress, ServicePrincipalName",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/03204de0-33dd-4980-82b1-2f93374231e1')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Find users who downloaded malware",
                "description": "When Office 365 detects malware in OneDrive or SharePoint find any users that downloaded the same file",
                "body": "//When Office 365 detects malware in OneDrive or SharePoint find any users that downloaded the same file\r\nlet malware=\r\n    OfficeActivity\r\n    | where TimeGenerated > ago(1d)\r\n    | where Operation == \"FileMalwareDetected\"\r\n    | distinct OfficeObjectId;\r\nOfficeActivity\r\n| where TimeGenerated > ago (1d)\r\n| where Operation in (\"FileSyncDownloadedFull\", \"FileDownloaded\")\r\n| where OfficeObjectId in (malware)\r\n| summarize ['Users who Downloaded']=make_set(UserId) by ['File Name']=OfficeObjectId",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/043e1b25-2cbc-447c-8cb2-a3c8b64ab2b5')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Security Alert - Find new alert types",
                "description": "List any new alert types found by the Defender product suite in the last week compared to the previous year",
                "body": "//List any new alert types found by the Defender product suite in the last week compared to the previous year\r\n//First find all the existing alerts from the last year excluding the last week\r\nlet existingalerts=\r\n    SecurityAlert\r\n    | where TimeGenerated > ago(365d) and TimeGenerated < ago(7d)\r\n    // Exclude alerts from Sentinel itself\r\n    | where ProviderName != \"ASI Scheduled Alerts\"\r\n    | distinct AlertName;\r\n//Find new alerts triggered in the last week\r\nSecurityAlert\r\n| where TimeGenerated > ago(7d)\r\n// Exclude alerts from Sentinel itself\r\n| where ProviderName != \"ASI Scheduled Alerts\"\r\n| where AlertName !in (existingalerts)\r\n| distinct AlertName, ProviderName, ProductName",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Security Alert"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/04520e28-514a-4df7-b2ca-1ecdc4c9a6f8')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize roles activated in PIM",
                "description": "Summarize and visualize the roles being activated in Azure AD PIM",
                "body": "//Summarize and visualize the roles being activated in Azure AD PIM\r\nAuditLogs\r\n| where TimeGenerated > ago(30d)\r\n| where OperationName == \"Add member to role completed (PIM activation)\"\r\n| extend ['Azure AD Role Name'] = tostring(TargetResources[0].displayName)\r\n| summarize Count=count()by ['Azure AD Role Name']\r\n| sort by Count\r\n| render barchart with (title=\"Count of Azure AD PIM activations by role\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/0518c3b0-ad94-49f9-afb6-46acfff6e505')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect new domain added to tenant",
                "description": "Detect when an admin adds a new unverified or verified domain into your Azure AD tenant",
                "body": "//Detect when an admin adds a new unverified or verified domain into your Azure AD tenant\r\nAuditLogs\r\n| where OperationName in (\"Add verified domain\", \"Add unverified domain\")\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| extend ['Actor IP Address'] = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)\r\n| extend Domain = tostring(TargetResources[0].displayName)\r\n| project TimeGenerated, OperationName, Actor, ['Actor IP Address'], Domain",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/06a098bd-ba14-4deb-91a0-408df65857c1')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Find users who received or read malicious email",
                "description": "When a malicious email is received, list all the users who received it and all the users who read it",
                "body": "//When a malicious email is received, list all the users who received it and all the users who read it\r\n//First find all the users who received the email\r\nEmailEvents\r\n| where EmailDirection == \"Inbound\"\r\n//Add in your malicious subject or malicious sender address\r\n| where Subject == \"Malicious Subject Name\" or SenderFromAddress == \"malicioususer@domain.com\"\r\n| project RecipientEmailAddress, Subject, InternetMessageId, SenderFromAddress\r\n//Combine that data with the OfficeActivity table which tracks whether an email was accessed\r\n| join kind=inner (\r\n    OfficeActivity\r\n    | where Operation == \"MailItemsAccessed\"\r\n    | mv-expand todynamic(Folders)\r\n    | extend FolderItems = Folders.FolderItems\r\n    | mv-expand FolderItems\r\n    | extend InternetMessageId = tostring(FolderItems.InternetMessageId)\r\n    | project UserId, InternetMessageId\r\n    )\r\n    on InternetMessageId\r\n//Create summary of data listing the count and all the users who received the email vs the list and count of those that read it\r\n| summarize\r\n    ['Receipient Count']=dcount(RecipientEmailAddress),\r\n    ['Users Who Received Email']=make_set(RecipientEmailAddress),\r\n    ['Reader Count']=dcount(UserId),\r\n    ['Users Who Read Email']=make_set(UserId)\r\n    by SenderFromAddress, Subject, InternetMessageId",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/07de38e3-99fb-43cb-a18f-8463c2cde536')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Incidents - Visualize incidents by MITRE tactic",
                "description": "Visualize the incidents generated in Microsoft Sentinel by MITRE tactics",
                "body": "//Visualize the incidents generated in Microsoft Sentinel by MITRE ATT&CK tactics\r\nSecurityIncident\r\n| where TimeGenerated > ago(30d)\r\n| summarize arg_min(TimeGenerated, *) by IncidentNumber\r\n| extend Tactics = tostring(AdditionalData.tactics)\r\n| where Tactics != \"[]\"\r\n| mv-expand todynamic(Tactics)\r\n| summarize Count=count()by tostring(Tactics)\r\n| sort by Count\r\n| render barchart with (title=\"Microsoft Sentinel incidents by MITRE ATT&CK tactic\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Microsoft Sentinel Incidents"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/0808b885-a2ed-42a1-a7e3-f0e0b1eb267f')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "DCA - Summarize admin actions",
                "description": "Defender for Cloud Apps tracks administrative actions under the 'isAdminOperation' flag. This query will build a pivot table of all admin operations completed by your users\n",
                "body": "//Defender for Cloud Apps tracks administrative actions under the 'isAdminOperation' flag. This query will build a pivot table of all admin operations completed by your users\r\nCloudAppEvents\r\n| where IsAdminOperation == \"true\"\r\n| where AccountType == \"Regular\"\r\n| extend UserPrincipalName = tostring(RawEventData.UserId)\r\n| evaluate pivot(ActionType, count(), UserPrincipalName)",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Cloud Apps"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/0866d161-00b7-4f02-9bbb-193569356e1e')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Usage - Detect ingestion anomaly",
                "description": "Detect anomalies in the amount of data being ingested into your Sentinel workspace",
                "body": "//Detect anomalies in the amount of data being ingested into your Sentinel workspace\r\n//Sensitivity = the lower the number the more sensitive the anomaly detection is, i.e it will find more anomalies, default is 1.5\r\nlet sensitivity = 1.5;\r\n//Threshold = set a threshold to account for low volume anomailies, i.e moving from 1 GB of data to 2 GB. This example uses tables larger than 2 GB every 3 hours as a threshold\r\nlet threshold = 2;\r\n//First find the anomalies by creating a series of all the data ingestion and using series_decompose_anomalies\r\nlet outliers=\r\nUsage\r\n| where IsBillable = true\r\n| make-series TableSize=sum(Quantity / 1024) default=0 on TimeGenerated from ago(7d) to now() step 3h by DataType\r\n| extend outliers=series_decompose_anomalies(TableSize, sensitivity)\r\n| mv-expand TimeGenerated, TableSize, outliers\r\n| where outliers == 1 and TableSize > threshold\r\n//Optionally visualize the anomalies - remove everything below this line to just retrieve the data instead of visualizing\r\n| distinct DataType;\r\nUsage\r\n| where IsBillable = true\r\n| where DataType in (outliers)\r\n| make-series TableSize=sum(Quantity / 1024) default=0 on TimeGenerated from ago(7d) to now() step 3h by DataType\r\n| render timechart with (ytitle=\"Table Size\",title=\"Anomalous data ingestion\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Data Management"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/0993b0be-9d31-449f-ad76-4907f8f9aac4')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Detect user made owner of multiple Teams",
                "description": "Detect when a user is made an owner on multiple Teams in a short time frame.",
                "body": "//Detect when a user is made an owner on multiple Teams in a short time frame.\r\n//Define a time period to check and the threshold of how many Teams to alert on.\r\n//This example would find users added as an owner to 3 or more Teams within 30 minutes.\r\nlet timeframe=30m;\r\nlet threshold=3;\r\nOfficeActivity\r\n| where TimeGenerated > ago(1d)\r\n| where Operation == \"MemberRoleChanged\"\r\n| mv-expand Members\r\n| extend RoleAdded = tostring(Members.Role)\r\n| extend UserAdded = tostring(Members.UPN)\r\n| where RoleAdded == 2\r\n| project TimeGenerated, RoleAdded, UserAdded, TeamName\r\n| summarize\r\n    ['Number of Teams Made Owner']=dcount(TeamName), ['Team Names']=make_set(TeamName) by UserAdded, bin(TimeGenerated, timeframe)\r\n| where ['Number of Teams Made Owner'] >= threshold",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/09dd9ae8-16ff-47e4-80df-ab43cc373443')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDI - Detect password set to never expire",
                "description": "Alert when Defender for Identity detects an account being set to 'password never expires'",
                "body": "//Alert when Defender for Identity detects an account being set to 'password never expires'\r\nIdentityDirectoryEvents\r\n| where ActionType == \"Account Password Never Expires changed\"\r\n| extend ['Password never expires previous setting'] = tostring(AdditionalFields.[\"FROM Account Password Never Expires\"])\r\n| extend ['Password never expires current setting'] = tostring(AdditionalFields.[\"TO Account Password Never Expires\"])\r\n| project\r\n    TimeGenerated,\r\n    TargetAccountUpn,\r\n    ['Password never expires current setting'],\r\n    ['Password never expires previous setting']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Identity"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/0b5b6430-62b7-4b3d-a9ab-c2994be79227')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Visualize inbound email actions over time",
                "description": "Visualize inbound email actions (Delivered, Junked, Blocked) per day over time",
                "body": "//Visualize inbound email actions (Delivered, Junked, Blocked) per day over time\r\n//Microsoft Sentinel query\r\nEmailEvents\r\n| where TimeGenerated > ago (90d)\r\n| where EmailDirection == \"Inbound\"\r\n| summarize Count=count()by DeliveryAction, bin(TimeGenerated, 1d)\r\n| render columnchart with (kind=unstacked, title=\"Email delivery actions over time\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/0b5bad24-7883-4247-81fa-af22b5cc8723')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect first time Teamviewer usage",
                "description": "//Detects Teamviewer being used for the first time on a device",
                "body": "//Detects Teamviewer being used for the first time on a device\r\n//Build a list of known devices using Teamviewer over the last 60 days\r\nlet knowndevices=\r\nDeviceNetworkEvents\r\n| where TimeGenerated > ago(60d) and TimeGenerated < ago(1d)\r\n| project DeviceName, InitiatingProcessFileName, ActionType, LocalIPType, RemoteIPType\r\n| where InitiatingProcessFileName contains \"teamviewer.exe\"\r\n| where ActionType == \"ConnectionSuccess\"\r\n| where LocalIPType == \"Private\"\r\n| where RemoteIPType == \"Public\"\r\n| distinct DeviceName;\r\n//Find new devices in the last day not in the known list\r\n    DeviceNetworkEvents\r\n    | where TimeGenerated > ago(1d)\r\n    | where InitiatingProcessFileName contains \"teamviewer.exe\"\r\n    | where ActionType == \"ConnectionSuccess\"\r\n    | where LocalIPType == \"Private\"\r\n    | where RemoteIPType == \"Public\"\r\n    | where DeviceName !in (knowndevices)\r\n    | distinct DeviceName\r\n",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/0cf19f4d-123a-4f02-b296-0c4e322768bb')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Security Alert - Summarize high alert severity by product",
                "description": "Calculate the percentage of alerts that are high or critical per product",
                "body": "//Calculate the percentage of alerts that are high or critical per product\r\nSecurityAlert\r\n| where TimeGenerated > ago(30d)\r\n| summarize\r\n    ['Total Alert Count']=count(),\r\n    ['Total High or Critical Count']=countif(AlertSeverity in (\"Critical\", \"High\"))\r\n    by ProductName\r\n| extend Percentage=(todouble(['Total High or Critical Count']) * 100 / todouble(['Total Alert Count']))\r\n| project-reorder ProductName, ['Total Alert Count'], ['Total High or Critical Count'], Percentage\r\n| sort by Percentage desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Security Alert"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/0d1b39ad-999d-4100-8b4d-80b4a92460e8')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "DCA - Find app installed to Teams",
                "description": "Find when an app is installed into Teams using the Defender for Cloud App logs\n",
                "body": "//Find when an app is installed into Teams using the Defender for Cloud App logs\r\nCloudAppEvents\r\n| where Application == \"Microsoft Teams\"\r\n| where ActionType == \"AppInstalled\"\r\n| extend AppDistributionMode = tostring(RawEventData.AppDistributionMode)\r\n| extend AzureADAppId = tostring(RawEventData.AzureADAppId)\r\n| extend UserId = tostring(RawEventData.UserId)\r\n| extend AppName = tostring(RawEventData.AddOnName)\r\n| project TimeGenerated, AppName, AzureADAppId, UserId, AppDistributionMode",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Cloud Apps"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/0d798455-f798-4323-9573-28203098e8d9')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure Key Vault - Detect firewall set to allow",
                "description": "Detects when an Azure Key Vault firewall is set to allow all by default\n",
                "body": "// Detects when an Azure Key Vault firewall is set to allow all by default\r\nAzureDiagnostics\r\n| where ResourceType == \"VAULTS\"\r\n| where OperationName == \"VaultPatch\"\r\n| where ResultType == \"Success\"\r\n| project-rename ExistingACL=properties_networkAcls_defaultAction_s, VaultName=Resource\r\n| where isnotempty(ExistingACL)\r\n| where ExistingACL == \"Deny\"\r\n| sort by TimeGenerated desc  \r\n| project\r\n    TimeGenerated,\r\n    SubscriptionId,\r\n    VaultName,\r\n    ExistingACL\r\n| join kind=inner\r\n(\r\nAzureDiagnostics\r\n| project-rename NewACL=properties_networkAcls_defaultAction_s, VaultName=Resource\r\n| where ResourceType == \"VAULTS\"\r\n| where OperationName == \"VaultPatch\"\r\n| where ResultType == \"Success\"\r\n| summarize arg_max(TimeGenerated, *) by VaultName, NewACL\r\n) \r\non VaultName\r\n| where ExistingACL != NewACL and NewACL == \"Allow\"\r\n| project DetectionTime=TimeGenerated1, VaultName, ExistingACL, NewACL, SubscriptionId, IPAddressofActor=CallerIPAddress, Actor=identity_claim_http_schemas_xmlsoap_org_ws_2005_05_identity_claims_upn_s\r\n",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure Key Vault"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/0da3a66b-2c8c-45ad-989a-73dbda8de223')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect multiple CA failures over short time period",
                "body": "//Detect when a user is blocked by Conditional Access after failing 3 unique CA policies or 3 unique applications over a 2 hour period\r\nSigninLogs\r\n| where TimeGenerated > ago(1d)\r\n| where ResultType == \"53003\"\r\n| mv-expand ConditionalAccessPolicies\r\n| extend ['CA Policy Name'] = tostring(ConditionalAccessPolicies.displayName)\r\n| where ConditionalAccessPolicies.result == \"failure\"\r\n| summarize\r\n    ['Total count of logon failures']=count(),\r\n    ['Count of failed applications']=dcount(AppDisplayName),\r\n    ['List of failed applications']=make_set(AppDisplayName),\r\n    ['Count of failed policy names']=dcount(['CA Policy Name']),\r\n    ['List of failed policy names']=make_set(['CA Policy Name'])\r\n    by UserPrincipalName, bin(TimeGenerated, 2h)\r\n| where ['Count of failed applications'] >= 3 or ['Count of failed policy names'] >= 3",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/0e1a00d7-5457-4fbe-891d-9d1e2f7435a8')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect multiple MFA failures from privileged users",
                "description": "Detect when a user who holds an Azure AD privilege role fails MFA multiple times in a short time period. This example uses 2 failures within 20 minutes.",
                "body": "//Detect when a user who holds an Azure AD privilege role fails MFA multiple times in a short time period. This example uses 2 failures within 20 minutes.\r\nlet privusers=\r\n    IdentityInfo\r\n    | where TimeGenerated > ago(21d)\r\n    | summarize arg_max(TimeGenerated, *) by AccountUPN\r\n    | where isnotempty(AssignedRoles)\r\n    | where AssignedRoles != \"[]\"\r\n    | distinct AccountUPN;\r\nSigninLogs\r\n| where TimeGenerated > ago(1d)\r\n| where ResultType == \"500121\"\r\n| where UserPrincipalName in (privusers)\r\n| mv-expand todynamic(AuthenticationDetails)\r\n| extend ['MFA Failure Type'] = tostring(parse_json(AuthenticationDetails).authenticationStepResultDetail)\r\n| where ['MFA Failure Type'] startswith \"MFA denied\"\r\n| summarize\r\n    ['MFA Failure Count']=count(),\r\n    ['MFA Failure Reasons']=make_list(['MFA Failure Type'])\r\n    by UserPrincipalName, bin(TimeGenerated, 20m)\r\n| where ['MFA Failure Count'] >= 2",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/0e7d46fa-2024-4e24-a048-3f20ea7cb318')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Security Alert - Find recipients of potential phishing email",
                "description": "When a user reports an email as potential phishing find all other users who received that email",
                "body": "//When a user reports an email as potential phishing find all other users who received that email\nSecurityAlert\n| where TimeGenerated > ago(1dd)\n| where ProviderName == \"OATP\"\n| where AlertName has \"Email reported by user as malware or phish\"\n| mv-expand todynamic(Entities)\n| project Entities\n| extend SenderMailFromAddress = tostring(Entities.P1Sender)\n| extend Subject = tostring(Entities.Subject)\n| where isnotempty(SenderMailFromAddress) and isnotempty(Subject)\n| distinct SenderMailFromAddress, Subject\n| join kind=inner(\n    EmailEvents\n    | where TimeGenerated > ago(timerange)\n    | project RecipientEmailAddress, SenderMailFromAddress, Subject\n    )\n    on SenderMailFromAddress, Subject\n| summarize Recipients=make_set(RecipientEmailAddress) by Subject, SenderMailFromAddress\n",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365",
                        "Security Alert"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/0edd1d90-4611-47cf-a756-443f81d7aebf')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect privileged user MFA changes",
                "description": "Alert when any users who hold a privileged Azure AD role make MFA configuration changes or an admin changes MFA details on a privileged user",
                "body": "//Alert when any users who hold a privileged Azure AD role make MFA configuration changes or an admin changes MFA details on a privileged user\r\n//Lookup the IdentityInfo table for any users holding a privileged role\r\nlet privusers=\r\n    IdentityInfo\r\n    | where TimeGenerated > ago(21d)\r\n    | summarize arg_max(TimeGenerated, *) by AccountUPN\r\n    | where isnotempty(AssignedRoles)\r\n    | where AssignedRoles != \"[]\"\r\n    | distinct AccountUPN;\r\n//Lookup MFA configuration events for those privileged users\r\nAuditLogs\r\n| where TimeGenerated > ago(1d)\r\n| where OperationName in~ (\"Admin registered security info\", \"Admin updated security info\", \"Admin deleted security info\", \"User registered security info\", \"User changed default security info\", \"User deleted security info\")\r\n| extend UserPrincipalName = tostring(TargetResources[0].userPrincipalName)\r\n| where UserPrincipalName in~ (privusers)\r\n| project TimeGenerated, OperationName, UserPrincipalName",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/11713f1c-e4bc-42fd-bc86-1f941ce56162')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Security Alert - Find most phished users",
                "description": "Find the most phished users from the last 365 days",
                "body": "//Find the most phished users from the last 365 days\nSecurityAlert\n| where TimeGenerated > ago (365d)\n| where ProviderName == \"OATP\"\n| where AlertName in (\"Email messages containing malicious URL removed after delivery\", \"Email messages containing phish URLs removed after delivery\")\n| mv-expand todynamic(Entities)\n| project Entities\n| extend User = tostring(Entities.MailboxPrimaryAddress)\n| where isnotempty(User)\n| summarize ['Count of Phishing Attempts']=count()by User\n| order by ['Count of Phishing Attempts']\n",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Security Alert",
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/11df77c9-c490-48aa-9f37-5d318e992271')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Summarize downloads from untrusted devices",
                "description": "Find the top 20 users who are downloading files from your tenant from untrusted devices and calculate the percentage of downloads from those users vs all untrusted downloads. Useful to see if you have a few users responsible for most of the downloads in your tenant.\n",
                "body": "//Find the top 20 users who are downloading files from your tenant from untrusted devices and calculate the percentage of downloads from those users vs all untrusted downloads. Useful to see if you have a few users responsible for most of the downloads in your tenant.\r\nSigninLogs\r\n| where TimeGenerated > ago(30d)\r\n| where ResultType == 0\r\n| where UserType == \"Member\"\r\n| extend DeviceTrustType = tostring(DeviceDetail.trustType)\r\n| distinct UserPrincipalName, IPAddress, DeviceTrustType\r\n| join kind=inner(\r\n    OfficeActivity\r\n    | where TimeGenerated > ago(30d)\r\n    | where Operation in (\"FileSyncDownloadedFull\", \"FileDownloaded\")\r\n    )\r\n    on $left.UserPrincipalName == $right.UserId, $left.IPAddress == $right.ClientIP\r\n| where isempty(DeviceTrustType)\r\n| summarize Count=count() by UserPrincipalName\r\n| as T\r\n| extend Percentage = round(100.0 * Count / toscalar (T\r\n    | summarize sum(Count)), 2)\r\n| project-reorder UserPrincipalName, Count, Percentage\r\n| top 20 by Percentage desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365",
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/12050a78-af75-410c-a2aa-f3c9927728ba')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Detect Microsoft Form flagged as phishing",
                "description": "Alert when the phishing status of a Microsoft Form is changed, this could be a sign one of your accounts has been compromised and being used to host malicious Forms",
                "body": "//Alert when the phishing status of a Microsoft Form is changed, this could be a sign one of your accounts has been compromised and being used to host malicious Forms\r\nCloudAppEvents\r\n| where TimeGenerated > ago (7d)\r\n| extend Operation = tostring(RawEventData.Operation)\r\n| where Operation == \"UpdatePhishingStatus\"\r\n| extend UserId = tostring(RawEventData.UserId)\r\n| extend Workload = tostring(RawEventData.Workload)\r\n| extend FormStatus = tostring(parse_json(tostring(RawEventData.ActivityParameters)).FormPhishingStatus)\r\n| extend FormId = tostring(RawEventData.FormId)\r\n| extend FormName = tostring(RawEventData.FormName)\r\n| where FormStatus == \"Auto Blocked\"\r\n| project TimeGenerated, Operation, UserId, FormStatus, FormName, FormId",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/12302c0d-74ae-4ce7-a8ae-29317d897de5')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Active Directory - Visualize users created, disabled and deleted",
                "description": "Visualize Active Directory accounts created, disabled and deleted per day",
                "body": "//Visualize Active Directory accounts created, disabled and deleted per day over the timerange\nSecurityEvent\n| where TimeGenerated > ago(30d)\n| where AccountType == \"User\"\n| project TimeGenerated, Account, EventID, TargetAccount\n| where EventID in (\"4720\", \"4725\", \"4726\")\n| where TargetAccount !endswith \"$\"\n| summarize\n    ['Accounts Created']=countif(EventID == \"4720\"),\n    ['Accounts Deleted']=countif(EventID == \"4726\"),\n    ['Accounts Disabled']=countif(EventID == \"4725\")\n    by startofday(TimeGenerated)\n| render columnchart\n    with (\n    kind=unstacked,\n    xtitle=\"Day\",\n    ytitle=\"Count\",\n    title=\"Active Directory User Accounts Created, Disabled and Deleted per day\")\n",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Active Directory"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/12d6f18d-d887-4f4b-b0cf-e92746e0c9e1')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize legacy auth allowed vs blocked",
                "description": "Visualize distinct users allowed to connect via legacy auth vs blocked by conditional access",
                "body": "//Visualize distinct users allowed to connect via legacy auth vs blocked by conditional access\r\nSigninLogs\r\n| where TimeGenerated > ago(180d)\r\n| where ResultType in (\"0\", \"53003\")\r\n| where ClientAppUsed in (\"Exchange ActiveSync\", \"Exchange Web Services\", \"AutoDiscover\", \"Unknown\", \"POP3\", \"IMAP4\", \"Other clients\", \"Authenticated SMTP\", \"MAPI Over HTTP\", \"Offline Address Book\")\r\n| summarize\r\n    ['Legacy Auth Users Allowed']=dcountif(UserPrincipalName, ResultType == 0),\r\n    ['Legacy Auth Users Blocked']=dcountif(UserPrincipalName, ResultType == 53003)\r\n    by bin(TimeGenerated, 1d)\r\n| render timechart with (title=\"Legacy auth distinct users allowed vs blocked by Conditional Access\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/12f8ac75-d8f3-4edf-949f-75b4e8855ad6')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Visualize post delivery email events",
                "description": "Visualize any post delivery actions such as email being quarantined or deleted by admins",
                "body": "//Visualize any post delivery actions such as email being quarantined or deleted by admins\r\nEmailPostDeliveryEvents\r\n| where TimeGenerated > ago (90d)\r\n| where Action !in (\"None\", \"Unknown\")\r\n| make-series Count=count() on TimeGenerated from ago(45d) to now() step 1d by Action\r\n| render timechart with (title=\"Email post delivery actions over time\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/13bc9c79-6df4-4831-9aaa-c7fc496666f5')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Summarize guest domain download percentage",
                "description": "Calculate the percentage that each guest domain is contributing to total downloads from your Office 365 tenant",
                "body": "//Calculate the percentage that each guest domain is contributing to total downloads from your Office 365 tenant\r\nOfficeActivity\r\n| where TimeGenerated > ago(30d)\r\n| where Operation in (\"FileSyncDownloadedFull\", \"FileDownloaded\")\r\n| where UserId contains \"#EXT#\"\r\n| extend ['Guest UserPrincipalName'] = tostring(split(UserId, \"#\")[0])\r\n| extend ['Guest Domain'] = tostring(split(['Guest UserPrincipalName'], \"_\")[-1])\r\n| summarize Count=count() by ['Guest Domain']\r\n| as T\r\n| extend Percentage = round(100.0 * Count / toscalar (T\r\n    | summarize sum(Count)), 2)\r\n| project-reorder ['Guest Domain'], Count, Percentage\r\n| sort by Percentage desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/14012dd2-b43f-4eea-8585-e325bba6f2ea')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Detect file downloads from guests recently added to Teams",
                "description": "Detects guests who begin to download files immediately after being added to a Team.",
                "body": "// Finds guest accounts who were added to a Team and then downloaded documents straight away. \r\n// Startime = Amount of time to look back on, i.e last 7 days.\r\n// Timeframe = looks for downloads for this period after being added to the Team, i.e 2 hours after being added.\r\nlet starttime = 7d;\r\nlet timeframe = 2h;\r\nlet operations = dynamic([\"FileSyncDownloadedFull\", \"FileDownloaded\"]);\r\nOfficeActivity\r\n| where TimeGenerated > ago(starttime)\r\n| where Operation == \"MemberAdded\"\r\n| mv-expand Members\r\n| extend UserAdded = tostring(Members.UPN)\r\n| where UserAdded contains \"#EXT#\"\r\n| where CommunicationType == \"Team\"\r\n| project TimeAdded=TimeGenerated, UserId=tolower(UserAdded)\r\n| join kind=inner\r\n    (\r\n    OfficeActivity\r\n    | where TimeGenerated > ago(starttime)\r\n    | where Operation in (['operations'])\r\n    )\r\n    on UserId\r\n| project DownloadTime=TimeGenerated, TimeAdded, FileName=SourceFileName, UserId\r\n| where (DownloadTime - TimeAdded) between (0min .. timeframe)\r\n//Optionally summarize the data into the activity by each guest\r\n| summarize\r\n    ['Count of Files Downloaded']=count(),\r\n    ['List of Files Downloaded']=make_set(FileName)\r\n    by UserId\r\n| sort by ['Count of Files Downloaded'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/1592d1af-a66f-4035-973c-794c6f2284e9')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect PIM activation outside of working hours",
                "description": "Detect Azure AD PIM activiations outside of working hours",
                "body": "//Detect Azure AD PIM activiations outside of working hours\r\nlet timerange=30d;\r\nAuditLogs\r\n// extend LocalTime to your time zone\r\n| extend LocalTime=TimeGenerated + 5h\r\n| where LocalTime > ago(timerange)\r\n// Change hours of the day to suit your company, i.e this would find activations between 6pm and 6am\r\n| where hourofday(LocalTime) !between (6 .. 18)\r\n| where OperationName == \"Add member to role completed (PIM activation)\"\r\n| extend User = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| extend ['Azure AD Role Name'] = tostring(TargetResources[0].displayName)\r\n| project LocalTime, User, ['Azure AD Role Name'], ['Activation Reason']=ResultReason",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/1654cdc9-ea6d-4d90-8c0b-dfa22bd1dc61')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect link opened from ISO file",
                "description": "Detect when a user mounts an ISO file and then within 20 minutes launches a browser. These events could be unrelated because a BrowserLaunchedToOpenUrl event doesn't confirm if the lnk file was in the ISO file.",
                "body": "//Detect when a user mounts an ISO file and then within 20 minutes launches a browser. These events could be unrelated because a BrowserLaunchedToOpenUrl event doesn't confirm if the lnk file was in the ISO file. \r\n//The detection is just based on time between mounting an ISO file and then launching a URL.\r\n//Find events where an ISO file is mounted by detecting the creation of a .iso.lnk file\r\nDeviceFileEvents\r\n| where TimeGenerated > ago(1d)\r\n| where ActionType == \"FileCreated\"\r\n//This may create some false positives with files named iso.lnk at the end like summary-ciso.lnk\r\n| where FileName endswith \"iso.lnk\"\r\n| project\r\n    ISOMountTime=TimeGenerated,\r\n    DeviceName,\r\n    FileName,\r\n    FolderPath,\r\n    InitiatingProcessAccountName\r\n//Join to our DeviceEvents where a browser is opened to launch a URL\r\n| join kind=inner(\r\n    DeviceEvents\r\n    | where TimeGenerated > ago(1d)\r\n    | where ActionType == \"BrowserLaunchedToOpenUrl\"\r\n    //Find only RemoteURLs that are web sites\r\n    | where RemoteUrl startswith \"http\"\r\n    | project\r\n        URLOpenTime=TimeGenerated,\r\n        DeviceName,\r\n        InitiatingProcessAccountName,\r\n        RemoteIP,\r\n        RemoteUrl,\r\n        RemotePort\r\n    )\r\n    on DeviceName, InitiatingProcessAccountName\r\n//Find browser opened to URL events that happened within 20 minutes of the ISO file being mounted\r\n| where URLOpenTime between ((ISOMountTime - timespan(0min)) .. (ISOMountTime + timespan(20min)))\r\n| extend ['ISO FileName'] = trim(@\".lnk\", FileName)\r\n| project\r\n    ISOMountTime,\r\n    URLOpenTime,\r\n    ['ISO FileName'],\r\n    DeviceName,\r\n    InitiatingProcessAccountName,\r\n    RemoteUrl,\r\n    RemoteIP,\r\n    RemotePort",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/165ee8d4-7f99-41c6-b4c7-59f3dcb0f471')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect malicious IP and summarize impact",
                "description": "When Azure AD Identity Protection flags an IP Address as malicious, find any successful or failed logon events in your tenant from that IP",
                "body": "//When Azure AD Identity Protection flags an IP Address as malicious, find any successful or failed logon events in your tenant from that IP\r\n//First create a list of success and erorr codes in Azure AD\r\nlet failureCodes = dynamic([50053, 50126, 50055]);\r\nlet successCodes = dynamic([0, 50055, 50057, 50155, 50105, 50133, 50005, 50076, 50079, 50173, 50158, 50072, 50074, 53003, 53000, 53001, 50129]);\r\n//Find the suspicious IP information from the SecurityAlert table, this example looks back 7 days as this is an offline detection\r\nlet suspiciousip=\r\n    SecurityAlert\r\n    | where TimeGenerated > ago (7d)\r\n    | where AlertName == \"Malicious IP address\"\r\n    | extend IPAddress = tostring(parse_json(ExtendedProperties).[\"Client IP Address\"])\r\n    | distinct IPAddress;\r\n//Look back 21 days for any other sign in data from that IP address\r\nSigninLogs\r\n| where TimeGenerated > ago(14d)\r\n| where IPAddress in (suspiciousip)\r\n| where ResultType in(successCodes) or ResultType in(failureCodes)\r\n//Create a summary showing successful and failed logons from that IP address and which users are affected\r\n| summarize\r\n    ['Count of distinct successful sign ins'] = dcountif(UserPrincipalName, (ResultType in(successCodes))),\r\n    ['List of successful users']=make_set_if(UserPrincipalName, (ResultType in(successCodes))),\r\n    ['Successful result codes'] = make_set_if(ResultType, (ResultType in(successCodes))),\r\n    ['Count of distinct failed sign ins'] = dcountif(UserPrincipalName, (ResultType in(failureCodes))),\r\n    ['List of failed users'] = make_set_if(UserPrincipalName, (ResultType in(failureCodes))),\r\n    ['Failed result codes'] = make_set_if(ResultType, (ResultType in(failureCodes)))\r\n    by IPAddress",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Security Alert",
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/174e361a-f4f8-463c-b80d-bbd7eee4f736')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "DCA - Detect admin granting themselves mailbox access",
                "description": "Detect when one of your Exchange admins grants themselves access to another users mailbox",
                "body": "//Detect when one of your Exchange admins grants themselves access to another users mailbox\r\nCloudAppEvents\r\n| extend Operation= tostring(RawEventData.Operation)\r\n| where Operation == \"Add-MailboxPermission\"\r\n| extend TargetMailbox = tostring(parse_json(tostring(RawEventData.Parameters))[2].Value)\r\n| extend UserAdded = tostring(parse_json(tostring(RawEventData.Parameters))[3].Value)\r\n| extend AccessGranted = tostring(parse_json(tostring(RawEventData.Parameters))[4].Value)\r\n| extend Actor = tostring(RawEventData.UserId)\r\n| where Actor =~ UserAdded \r\n| project TimeGenerated, Actor, TargetMailbox, UserAdded, AccessGranted",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Cloud Apps"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/17ec48d7-9c19-46d2-b23b-7dd323e526da')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Detect when emails are read by admin staff",
                "description": "Finds users who hold either Global Admin or Exchange admin privilege using the IdentityInfo table and then finds any events where those admins read the email of other users. This could be expected or a sign of insider threat activity.",
                "body": "//Detects users with global or exchange administrator roles who have accessed email items from mailboxes other than their own\r\nlet timeframe=30d;\r\nlet adminusers=\r\nIdentityInfo\r\n| where TimeGenerated > ago(21d)\r\n| where AssignedRoles has_any (\"Exchange Administrator\", \"Global Administrator\")\r\n| summarize arg_max(TimeGenerated, *) by AccountUPN\r\n| project UserId=AccountUPN;\r\nOfficeActivity\r\n| where TimeGenerated > ago(timeframe)\r\n| where OfficeWorkload == \"Exchange\"\r\n| where Operation == \"MailItemsAccessed\"\r\n| where UserId in (adminusers)\r\n| where UserId != MailboxOwnerUPN\r\n| project AccessTime=TimeGenerated, UserId, MailboxOwnerUPN, Folders\r\n",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/1801cd36-63a8-4980-bda6-cd6809a9e5d7')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Find latest logon to device after Defender for Endpoint alert triggered",
                "description": "When a Defender for Endpoint alert is triggered, search for the most recent interactive logon to the device prior to the alert. Also returns if that user is a local admin on the device.",
                "body": "//When a Defender for Endpoint alert is triggered, search for the most recent interactive logon to the device prior to the alert.\r\n//Also returns if that user is a local admin on the device.\r\nlet timeframe = 48h;\r\nSecurityAlert\r\n| where TimeGenerated > ago(timeframe)\r\n| where ProviderName == \"MDATP\"\r\n| project AlertTime=TimeGenerated, DeviceName=CompromisedEntity, AlertName\r\n| join kind=inner (\r\n    DeviceLogonEvents\r\n    | project\r\n        TimeGenerated,\r\n        LogonType,\r\n        ActionType,\r\n        InitiatingProcessCommandLine,\r\n        IsLocalAdmin,\r\n        AccountName,\r\n        DeviceName\r\n    | where LogonType in (\"Interactive\", \"RemoteInteractive\")\r\n    | where ActionType == \"LogonSuccess\"\r\n    | where InitiatingProcessCommandLine == \"lsass.exe\"\r\n    )\r\n    on DeviceName\r\n| where (AlertTime - TimeGenerated) between (0min .. timeframe)\r\n| summarize arg_max(TimeGenerated, *) by DeviceName\r\n| project\r\n    LogonTime=TimeGenerated,\r\n    AlertTime,\r\n    AlertName,\r\n    DeviceName,\r\n    AccountName,\r\n    IsLocalAdmin",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/187bc828-f405-4d78-93ad-b53c80837dff')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "DCA - Detect risky sign in followed by service principal creation",
                "description": "Detect when a user flags a risky sign in within 8 hours of installing a service principal, could be a sign of OAuth consent phishing. This example uses 8 hours between events.",
                "body": "//Detect when a user flags a risky sign in within 8 hours of installing a service principal, could be a sign of OAuth consent phishing. This example uses 8 hours between events.\r\nlet threshold=8;\r\nCloudAppEvents\r\n| where ActionType == \"Add service principal.\"\r\n| where AccountType == \"Regular\"\r\n| extend UserId = tostring(RawEventData.UserId)\r\n| project\r\n    ['Service Principal Install Time']=TimeGenerated,\r\n    UserId,\r\n    ['Service Principal Name']=ObjectName\r\n| join kind=inner (\r\n    AADUserRiskEvents\r\n    | where DetectionTimingType == \"realtime\"\r\n    | where RiskDetail !in (\"aiConfirmedSigninSafe\", \"userPerformedSecuredPasswordReset\")\r\n    | project\r\n        ['Risk Event Time']=TimeGenerated,\r\n        UserId=UserPrincipalName,\r\n        ['Risk Event IP']=IpAddress\r\n    )\r\n    on UserId\r\n| extend ['Minutes Between Events']=datetime_diff(\"hour\", ['Service Principal Install Time'], ['Risk Event Time'])\r\n| where ['Minutes Between Events'] < threshold\r\n| project\r\n    UserId,\r\n    ['Risk Event Time'],\r\n    ['Service Principal Install Time'],\r\n    ['Minutes Between Events'],\r\n    ['Risk Event IP'],\r\n    ['Service Principal Name']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Cloud Apps"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/1a56acd7-ad8a-46e7-b429-77172e4b8edf')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize MFA coverage by application",
                "description": "Calculate the percentage of signins to each of your Azure AD applications that used MFA",
                "body": "//Calculate the percentage of signins to each of your Azure AD applications that used MFA\r\nSigninLogs\r\n| where TimeGenerated > ago(30d)\r\n| where ResultType == 0\r\n| summarize\r\n    ['Total Signin Count']=count(),\r\n    ['Total MFA Count']=countif(AuthenticationRequirement == \"multiFactorAuthentication\"),\r\n    ['Total non MFA Count']=countif(AuthenticationRequirement == \"singleFactorAuthentication\")\r\n    by AppDisplayName\r\n| project\r\n    AppDisplayName,\r\n    ['Total Signin Count'],\r\n    ['Total MFA Count'],\r\n    ['Total non MFA Count'],\r\n    MFAPercentage=(todouble(['Total MFA Count']) * 100 / todouble(['Total Signin Count']))\r\n| sort by ['Total Signin Count'] desc, MFAPercentage asc  ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/1dbcdc81-da2f-4fe8-8db9-714a6916962b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect successful MFA method from new location",
                "description": "Detect when a user successfully completes MFA with a new MFA method (i.e push, text message) and a new location compared to the last 180 days",
                "body": "let mfahistory = materialize  (\n    SigninLogs\n    | where TimeGenerated > ago (180d) and TimeGenerated < ago(1d)\n    | where ResultType == 0\n    | where AuthenticationRequirement == \"multiFactorAuthentication\"\n    | extend AuthMethod = tostring(MfaDetail.authMethod)\n    | where isnotempty(AuthMethod)\n    | distinct UserPrincipalName, AuthMethod, Location);\nmfahistory\n| join kind=rightanti  (\n    SigninLogs\n    | where TimeGenerated > ago (1d)\n    | where ResultType == 0\n    | where AuthenticationRequirement == \"multiFactorAuthentication\"\n    | extend AuthMethod = tostring(MfaDetail.authMethod)\n    | where isnotempty(AuthMethod)\n    | project\n        TimeGenerated,\n        UserPrincipalName,\n        AuthMethod,\n        AppDisplayName,\n        Location,\n        IPAddress)\n    on UserPrincipalName, Location",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/1f088dc9-7ecb-4e52-b076-a801762f6a40')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Usage - Summarize percentage per table",
                "description": "Calculate the percentage that each table in your Sentinel workspace is contributing to total ingestion for billable data",
                "body": "//Calculate the percentage that each table in your Sentinel workspace is contributing to total ingestion for billable data\r\nUsage\r\n| where TimeGenerated > ago(30d)\r\n| where IsBillable = true\r\n| summarize ['Table size in GB']=sum(Quantity / 1024) by DataType\r\n| as T\r\n| extend Percentage = round(100.0 * ['Table size in GB'] / toscalar (T\r\n    | summarize sum(['Table size in GB'])), 2)\r\n| project-reorder DataType, ['Table size in GB'], Percentage\r\n| sort by Percentage desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Data Management"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/1f3b3eea-df13-4965-a707-0066f006ccc6')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find your users signing into other tenants as guests",
                "description": "Find sign ins where your users signed into other Azure AD tenants as outbound guests",
                "body": "//Find sign ins where your users signed into other Azure AD tenants as outbound guests\r\nSigninLogs\r\n| where AADTenantId == HomeTenantId\r\n| where ResourceTenantId != AADTenantId\r\n| where UserType == \"Guest\"\r\n| project\r\n    TimeGenerated,\r\n    AppDisplayName,\r\n    UserPrincipalName,\r\n    ResultType,\r\n    Location,\r\n    IPAddress,\r\n    ['Guest Tenant Id']=ResourceTenantId",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/1fda8ecb-0468-4a94-9f4c-df5167af50f3')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize CA failure percentage",
                "description": "Calculate the percentage of signins failing against each of your Conditional Access policies. If the percentage is high it may be worth evaulating the policy if it is fit for purpose.\n",
                "body": "//Calculate the percentage of signins failing against each of your Conditional Access policies. If the percentage is high it may be worth evaulating the policy if it is fit for purpose.\r\nSigninLogs\r\n| where TimeGenerated > ago(30d)\r\n| project ConditionalAccessPolicies\r\n| extend CA = parse_json(ConditionalAccessPolicies)\r\n| mv-expand bagexpansion=array CA\r\n| extend ['CA Policy Name'] = tostring(CA.displayName)\r\n| extend  ['CA Outcome'] = tostring(CA.result)\r\n| summarize\r\n    ['Total Signin Count']=count(),\r\n    ['Total Failed Count']=countif(['CA Outcome'] == \"failure\")\r\n    by ['CA Policy Name']\r\n| extend ['Failed Percentage'] = todouble(['Total Failed Count']) * 100 / todouble(['Total Signin Count'])\r\n| project-reorder\r\n    ['CA Policy Name'],\r\n    ['Total Signin Count'],\r\n    ['Total Failed Count'],\r\n    ['Failed Percentage']\r\n| order by ['Failed Percentage']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/221e6065-9287-4bdc-9d89-61b1be59c5ac')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Find and parse URL events",
                "description": "Use the inbuilt KQL parse_url function to return the various components of a URL\n",
                "body": "//Use the inbuilt KQL parse_url function to return the various components of a URL\r\nDeviceEvents\r\n| where ActionType == \"BrowserLaunchedToOpenUrl\"\r\n| extend Url = parse_url(RemoteUrl)\r\n| extend Hostname = tostring(Url.Host)\r\n| extend Fragment = tostring(Url.Fragment)\r\n| extend Password = tostring(Url.Password)\r\n| extend Path = tostring(Url.Path)\r\n| extend Port = tostring(Url.Port)\r\n| extend Query = tostring(Url.Query)\r\n| extend Schema = tostring(Url.Scheme)\r\n| extend Username = tostring(Url.Username)\r\n| where isnotempty(Hostname)\r\n| project\r\n    TimeGenerated,\r\n    DeviceName,\r\n    RemoteUrl,\r\n    Schema,\r\n    Port,\r\n    Hostname,\r\n    Path,\r\n    Query,\r\n    Username,\r\n    Password,\r\n    Fragment",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/23802762-1ff5-4363-9a94-9a896ffb8d14')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find inactive managed identities",
                "description": "Find Managed Identity service principals that have not successfully signed in in the last 30 days, for each Managed Identity list the Azure resources it has accessed",
                "body": "//Find Managed Identity service principals that have not successfully signed in in the last 30 days, for each Managed Identity list the Azure resources it has accessed\r\n//Hopefully it means the resource has already been decommissioned, if not, check to see if it still requires the access it has been granted\r\n//First find any Managed Identities that haven't successfully signed on for 30 days\r\nAADManagedIdentitySignInLogs\r\n| where TimeGenerated > ago(365d)\r\n| where ResultType == \"0\"\r\n| summarize arg_max(TimeGenerated, *) by AppId\r\n| extend ['Days Since Last Signin'] = datetime_diff(\"day\", now(), TimeGenerated)\r\n| project\r\n    ['Last Sign in Time']=TimeGenerated,\r\n    ServicePrincipalName,\r\n    ServicePrincipalId,\r\n    ['Days Since Last Signin'],\r\n    AppId\r\n| where ['Days Since Last Signin'] > 30\r\n//Join that list of Managed Identities back to the sign in data and retrieve the Azure resources (such as Key Vault or Storage) it has accessed\r\n| join kind=inner (\r\n    AADManagedIdentitySignInLogs\r\n    | where TimeGenerated > ago(365d)\r\n    | where ResultType == \"0\"\r\n    | summarize ['Resources Accessed']=make_set(ResourceDisplayName) by AppId)\r\n    on AppId\r\n| project-reorder\r\n    ['Last Sign in Time'],\r\n    ['Days Since Last Signin'],\r\n    ServicePrincipalName,\r\n    ServicePrincipalId,\r\n    AppId,\r\n    ['Resources Accessed']\r\n| order by ['Days Since Last Signin'] desc",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/23dda63a-c6ca-4791-a4af-86dc74ebad37')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize conditional access failures",
                "description": "Create a summary showing which of your Azure AD conditional access policies are preventing the most signins and for what reasons",
                "body": "//Create a summary showing which of your Azure AD conditional access policies are preventing the most signins and for what reasons\r\nSigninLogs\r\n| where TimeGenerated > ago (7d)\r\n| project TimeGenerated, ConditionalAccessPolicies, ResultType, ResultDescription\r\n| mv-expand ConditionalAccessPolicies\r\n| extend CAResult = tostring(ConditionalAccessPolicies.result)\r\n| extend ['Conditional Access Policy Name'] = tostring(ConditionalAccessPolicies.displayName)\r\n| where CAResult == \"failure\"\r\n| summarize ['Count of Failures']=count()by ['Conditional Access Policy Name'], ResultType, ResultDescription\r\n| sort by ['Count of Failures'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/240d8628-daa0-4a8a-9aef-6c5d3eaf6ad6')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize conditional access outcomes",
                "description": "Create a pivot table showing all conditional access policy outcomes over the last 30 days",
                "body": "//Create a pivot table showing all conditional access policy outcomes over the last 30 days\r\nSigninLogs\r\n| where TimeGenerated > ago(30d)\r\n| extend CA = parse_json(ConditionalAccessPolicies)\r\n| mv-expand bagexpansion=array CA\r\n| evaluate bag_unpack(CA)\r\n| extend\r\n    ['CA Outcome']=tostring(column_ifexists('result', \"\")),\r\n    ['CA Policy Name'] = column_ifexists('displayName', \"\")\r\n| evaluate pivot(['CA Outcome'], count(), ['CA Policy Name'])",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/25170b50-6468-44b9-9bb4-0060845fdd4b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Heartbeat - Find computers that haven't sent a heartbeat in 30 days",
                "description": "Finds computers that haven't sent a heartbeat in the last 30 days",
                "body": "Heartbeat\r\n| where TimeGenerated > ago(365d)\r\n| summarize arg_max(TimeGenerated, *) by Computer\r\n| project\r\n    Computer,\r\n    ['Last Heartbeat']=TimeGenerated,\r\n    ['Days Since Last Heartbeat']=datetime_diff(\"day\", now(), TimeGenerated)\r\n| where ['Days Since Last Heartbeat'] > 30\r\n| sort by ['Days Since Last Heartbeat'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Agent Health"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/267b5a01-ef92-4be1-80d3-0c1b8a7dcbe4')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect users attempting to access applications",
                "description": "Detect users trying to access multiple applications they haven't been granted access to over a short period of time\n",
                "body": "//Detect users trying to access multiple applications they haven't been granted access to over a short period of time\r\n//In this example alert when a user attempts to access 2 or more unique applications in 30 minutes\r\nSigninLogs\r\n| where ResultType == \"50105\"\r\n| summarize\r\n    ['Denied Application List']=make_set(AppDisplayName),\r\n    ['Count of Applications']=dcount(AppDisplayName)\r\n    by UserPrincipalName, bin(TimeGenerated, 30m)\r\n| where ['Count of Applications'] >= 2",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/27107571-89c3-4f57-81eb-6267301ca4cc')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find third party MFA failures",
                "description": "Retrieve sign in failures due to third party MFA (Okta/Duo etc)",
                "body": "//Retrieve sign in failures due to third party MFA (Okta/Duo etc). Azure AD handles third party MFA different to native MS MFA. A user is sent to the third party MFA service and generates code 50158.\r\n//If successful the user then generates a success code 0. When third party MFA fails Azure AD logs the 50158 result code but no corresponding 0 result code.\r\n//Microsoft Sentinel query\r\nSigninLogs\r\n//Create a list of all result codes within a single sign in to Azure AD\r\n| summarize MFA=make_list(ResultType) by CorrelationId\r\n//Find correlation ids where the user was sent to third party MFA (ResultType 50158) but there is no subsequent success (ResultType 0)\r\n| where MFA has \"50158\" and MFA !has \"0\"\r\n//Join back to SigninLogs table to find the sign in details\r\n| join kind=inner (SigninLogs) on CorrelationId\r\n| project\r\n    TimeGenerated,\r\n    UserPrincipalName,\r\n    UserType,\r\n    AppDisplayName,\r\n    IPAddress,\r\n    Location,\r\n    UserAgent,\r\n    ResultType",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/295efbb4-5a5a-4b00-bf2b-ae6dc5f7b145')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize guest tenants conditional access",
                "description": "Summarize which conditional access policies your inbound guests have logged any successes or failures against.",
                "body": "//Summarize which conditional access policies your inbound guests have logged any successes or failures against.\r\nSigninLogs\r\n| where TimeGenerated > ago (90d)\r\n| where UserType == \"Guest\"\r\n| where AADTenantId != HomeTenantId and HomeTenantId != ResourceTenantId\r\n| project ConditionalAccessPolicies, UserPrincipalName, HomeTenantId\r\n| project-rename GuestTenantId=HomeTenantId\r\n| mv-expand ConditionalAccessPolicies\r\n| extend CAResult = tostring(ConditionalAccessPolicies.result)\r\n| extend CAName = tostring(ConditionalAccessPolicies.displayName)\r\n| where CAResult has_any (\"success\", \"failure\")\r\n| extend ['Conditional Access Result']=strcat(CAName, \" || \", CAResult)\r\n| summarize\r\n    ['Conditional Access Outcomes']=make_set(['Conditional Access Result'])\r\n    by\r\n    GuestTenantId\r\n| order by GuestTenantId asc",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/297cc9fd-74eb-4356-8ca2-92a2a14c441e')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Security Alert - Find risk events for anomalous token",
                "description": "When an anomalous token alert is flagged, find the specific risk events that flagged the alert\n",
                "body": "//When an anomalous token alert is flagged, find the specific risk events that flagged the alert\nlet alerts=\n    SecurityAlert\n    | where TimeGenerated > ago(1d)\n    | where AlertName == \"Anomalous Token\"\n    | mv-expand todynamic(Entities)\n    | project Entities\n    | extend RequestId = tostring(Entities.SessionId)\n    | distinct RequestId;\n//Detections can be offline so retrieve a weeks worth of risk data\nAADUserRiskEvents\n| where TimeGenerated > ago(7d)\n| where RequestId in (alerts)\n| project TimeGenerated, UserPrincipalName, RiskEventType, RiskLevel, DetectionTimingType, IpAddress, Location",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins",
                        "Security Alert"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/2997f6d2-469a-4231-bab3-6cf20cb6b334')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "DCA - Detect and summarize infrequent country activity",
                "description": "When Defender for Cloud Apps detects activity from an infrequent country, summarize the impact to your users",
                "body": "//When Defender for Cloud Apps detects activity from an infrequent country, summarize the impact to your users\r\nlet failureCodes = dynamic([50053, 50126, 50055]);\r\nlet successCodes = dynamic([0, 50055, 50057, 50155, 50105, 50133, 50005, 50076, 50079, 50173, 50158, 50072, 50074, 53003, 53000, 53001, 50129]);\r\n//Microsoft Sentinel query\r\n//Using the Security Alert table find any locations detected. This query looks back 7 days to find alerts as this can be an offline detection, but you can adjust.\r\nlet suspiciouslocation=\r\n    SecurityAlert\r\n    | where TimeGenerated > ago(7d)\r\n    | where AlertName == \"Activity from infrequent country\"\r\n    | mv-expand todynamic(Entities)\r\n    | project Entities\r\n    | extend Location = tostring(parse_json(tostring(Entities.Location)).CountryCode)\r\n    | where isnotempty(Location)\r\n    | distinct Location;\r\n//Take that location and send back through the sign in logs to find the blast radius\r\nSigninLogs\r\n| where TimeGenerated > ago(7d)\r\n| where Location in (suspiciouslocation)\r\n| summarize\r\n    ['Count of distinct successful sign ins'] = dcountif(UserPrincipalName, (ResultType in(successCodes))),\r\n    ['List of successful users']=make_set_if(UserPrincipalName, (ResultType in(successCodes))),\r\n    ['Successful result codes'] = make_set_if(ResultType, (ResultType in(successCodes))),\r\n    ['Count of distinct failed sign ins'] = dcountif(UserPrincipalName, (ResultType in(failureCodes))),\r\n    ['List of failed users'] = make_set_if(UserPrincipalName, (ResultType in(failureCodes))),\r\n    ['Failed result codes'] = make_set_if(ResultType, (ResultType in(failureCodes)))\r\n    by Location",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins",
                        "Defender for Cloud Apps",
                        "Security Alert"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/2a44a4fe-daef-4e29-924a-7cfd4ea8db83')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Detect multiple files shared to guests",
                "description": "Detect when a user shares multiple files to Azure AD guests over a short time frame.",
                "body": "//Detect when a user shares multiple files to Azure AD guests over a short time frame.\r\n//Define a time period to check and the threshold of how many files to alert on.\r\n//In this example it would detect when a user shares 10 or more files to a guest within 30 minutes\r\nlet timeframe=30m;\r\nlet threshold=10;\r\nOfficeActivity\r\n| where TimeGenerated > ago(1d)\r\n| where Operation in (\"SecureLinkCreated\", \"AddedToSecureLink\")\r\n| where TargetUserOrGroupType == \"Guest\" or TargetUserOrGroupName contains \"#EXT#\"\r\n| summarize\r\n    ['File Share Count']=dcount(OfficeObjectId),\r\n    ['List of Files']=make_set(OfficeObjectId)\r\n    by UserId, bin(TimeGenerated, timeframe)\r\n| where ['File Share Count'] >= threshold",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/2ad69fd4-1fce-4c19-9420-b4590ac5d6d2')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect SSH traffic non standard port",
                "description": "Detect SSH traffic that isn't on port 22 connecting to public IP addresses",
                "body": "//Detect SSH traffic that isn't on port 22 connecting to public IP addresses\r\n//Microsft Sentinel query\r\nDeviceNetworkEvents\r\n| where ActionType == \"NetworkSignatureInspected\"\r\n| extend AF = parse_json(AdditionalFields)\r\n| extend NetworkSignature = AF.SignatureName\r\n//Search for network signatures that are SSH but not on port 22\r\n| where NetworkSignature == \"SSH\" and RemotePort != 22\r\n//Exclude traffic where the remote IP is a private/local IP address, you can remove this if also interested in that traffic\r\n| where not(ipv4_is_private(RemoteIP))\r\n| project\r\n    TimeGenerated,\r\n    DeviceName,\r\n    NetworkSignature,\r\n    LocalIP,\r\n    LocalPort,\r\n    RemoteIP,\r\n    RemotePort,\r\n    RemoteUrl",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/2b22c64b-1d93-4b27-b1e3-c006ea611e7c')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure - Detect virtual machine disk URL generated",
                "description": "Detect when a download URL is generated for an Azure virtual machine disk",
                "body": "//Detect when a download URL is generated for an Azure virtual machine disk\r\nAzureActivity\r\n| where OperationNameValue == \"MICROSOFT.COMPUTE/DISKS/BEGINGETACCESS/ACTION\"\r\n| where ActivityStatusValue == \"Success\"\r\n| extend DiskName = tostring(Properties_d.resource)\r\n| project\r\n    TimeGenerated,\r\n    Actor=Caller,\r\n    ['Actor IP Address']=CallerIpAddress,\r\n    ['Azure Subscription Id']=SubscriptionId,\r\n    ['Azure Resource Group']=ResourceGroup,\r\n    DiskName",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure Resources"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/2d1a5ee6-65d6-484f-ac6b-ae6d52d1dad2')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Detect when a new app is installed to Teams",
                "description": "Detect when an app is installed into Teams for the first time compared to the previous timerange",
                "body": "//Detect when an app is installed into Teams for the first time compared to the previous timerange\r\nlet knownapps=\r\n    OfficeActivity\r\n    | where TimeGenerated > ago(180d) and TimeGenerated < ago(7d)\r\n    | where OfficeWorkload == \"MicrosoftTeams\"\r\n    | where Operation == \"AppInstalled\"\r\n    | distinct AzureADAppId;\r\nOfficeActivity\r\n| where TimeGenerated > ago (7d)\r\n| where OfficeWorkload == \"MicrosoftTeams\"\r\n| where Operation == \"AppInstalled\"\r\n| where AzureADAppId !in (knownapps)\r\n| project TimeGenerated, UserId, AddonName, AzureADAppId",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/2d3337cd-3f94-4ae1-998f-914e709cfd1b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "DCA - Find user submitted genuine spam",
                "description": "Find emails that have been reported by your users as spam/phishing that have been rescanned and found to be genuine spam or phishing",
                "body": "//Find emails that have been reported by your users as spam/phishing that have been rescanned and found to be genuine spam or phishing\r\nCloudAppEvents\r\n| where ActionType == \"UserSubmission\"\r\n| extend UserId = tostring(RawEventData.UserId)\r\n| extend RescanVerdict = tostring(parse_json(tostring(RawEventData.RescanResult)).RescanVerdict)\r\n| extend RescanTimeTimestamp = tostring(parse_json(tostring(RawEventData.RescanResult)).Timestamp)\r\n| extend Subject = tostring(RawEventData.Subject)\r\n| extend P1Sender = tostring(RawEventData.P1Sender)\r\n| extend P2Sender = tostring(RawEventData.P2Sender)\r\n| where RescanVerdict != \"NotSpam\"\r\n| project\r\n    TimeGenerated,\r\n    UserId,\r\n    P1Sender,\r\n    P2Sender,\r\n    Subject,\r\n    RescanVerdict,\r\n    RescanTimeTimestamp",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Cloud Apps"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/2ef8f127-47a4-4d8f-8a61-38d4a91105e5')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect Windows credential manager backup",
                "description": "Detect when a backup is taken from Windows Credential manager",
                "body": "//Detect when a backup is taken from Windows Credential manager\r\n//Microsoft Sentinel query\r\nDeviceEvents\r\n| where ActionType == \"CredentialsBackup\"\r\n| project\r\n    TimeGenerated,\r\n    DeviceName,\r\n    InitiatingProcessAccountName,\r\n    InitiatingProcessCommandLine,\r\n    InitiatingProcessFileName,\r\n    InitiatingProcessFolderPath",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/2f46be3f-f491-494f-9800-c98428c2f732')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect user added to active PIM assignment",
                "description": "Alert when a user is assigned to a permanent active Azure AD role",
                "body": "//Alert when a user is assigned to a permanent active Azure AD role\r\nAuditLogs\r\n| where OperationName in (\"Add member to role in PIM completed (permanent)\",\"Add member to role in PIM completed (timebound)\")\r\n| where TargetResources[2].type == \"User\"\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| extend User = tostring(TargetResources[2].userPrincipalName)\r\n| extend ['Azure AD Role Name'] = tostring(TargetResources[0].displayName)\r\n| project TimeGenerated, Actor, User, ['Azure AD Role Name']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/317825fe-c1aa-4a2a-b790-d76d541448da')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect entitlement management package created",
                "description": "Detect when an Azure AD Entitlement Package is created. You may want to review to see what resources and roles have been included in the package.",
                "body": "//Detect when an Azure AD Entitlement Package is created. You may want to review to see what resources and roles have been included in the package.\r\nAuditLogs\r\n| where TimeGenerated > ago(1d)\r\n| where OperationName == \"Create access package\"\r\n| where TargetResources[0].type == \"AccessPackage\"\r\n| extend AccessPackageName = tostring(TargetResources[0].displayName)\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| project TimeGenerated, OperationName, AccessPackageName, Actor",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/31a63e94-cf76-49f7-8af0-7f24a4821323')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect MFA registration followed by SSPR",
                "description": "Detects when a user registers MFA details on their account and then completes self service password reset with a short timeframe\n",
                "body": "//Detects when a user registers MFA details on their account and then completes self service password reset with a short timeframe\r\nlet timeframe=4h;\r\nAuditLogs\r\n| where TimeGenerated > ago(1d)\r\n| where OperationName in (\"User changed default security info\", \"User registered all required security info\", \"User registered security info\")\r\n| extend User = tostring(TargetResources[0].userPrincipalName)\r\n| project SecurityInfoTime=TimeGenerated, User, OperationName\r\n| join kind=inner (\r\n    AuditLogs\r\n    | where TimeGenerated > ago(1d)\r\n    | where OperationName in (\"Reset password (self-service)\", \"Change password (self-service)\")\r\n    | where Result == \"success\"\r\n    | extend User = tostring(TargetResources[0].userPrincipalName)\r\n    | project PasswordResetTime=TimeGenerated, OperationName, User)\r\n    on User\r\n| where (PasswordResetTime - SecurityInfoTime) between (0min .. timeframe)",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/33340093-0e87-4463-8594-ecf481e0cdcd')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find single factor apps accessed by privileged users",
                "description": "Find the applications that have the most privileged users accessing them using only single factor authentication",
                "body": "//Find the applications that have the most privileged users accessing them using only single factor authentication\r\nlet privusers=\r\n    IdentityInfo\r\n    | where TimeGenerated > ago(21d)\r\n    | summarize arg_max(TimeGenerated, *) by AccountUPN\r\n    | where isnotempty(AssignedRoles)\r\n    | where AssignedRoles != \"[]\"\r\n    | distinct AccountUPN;\r\nSigninLogs\r\n| where TimeGenerated > ago(30d)\r\n| where UserPrincipalName in (privusers)\r\n| where ResultType == 0\r\n| where AuthenticationRequirement == \"singleFactorAuthentication\"\r\n| summarize\r\n    ['List of Users']=make_set(UserPrincipalName),\r\n    ['Count of Users']=dcount(UserPrincipalName)\r\n    by AppDisplayName\r\n| sort by ['Count of Users'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/338957f5-6c4e-496b-9076-8a235eab4da4')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDI - Detect golden ticket usage",
                "description": "When Defender for Identity detects suspected golden ticket usage, parse the relevant user accounts and host names",
                "body": "//When Defender for Identity detects suspected golden ticket usage, parse the relevant user accounts and host names\nSecurityAlert\n| where AlertName startswith \"Suspected Golden Ticket usage\"\n| mv-expand todynamic(Entities)\n| extend AccountName = tostring(Entities.Name)\n| extend HostName = tostring(Entities.HostName)\n| summarize\n    Accounts=make_list_if(AccountName, isnotempty(AccountName)),\n    Hosts=make_list_if(HostName, isnotempty(HostName))\n    by VendorOriginalId\n",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Security Alert",
                        "Defender for Identity"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/362dcc51-f191-491b-b82f-3058343c2409')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Summarize Teams creations and deletions",
                "description": "Create a weekly summary of Teams created and deleted in your Office 365 tenant",
                "body": "//Create a weekly summary of Teams created and deleted in your Office 365 tenant\r\nOfficeActivity\r\n| where TimeGenerated > ago(30d)\r\n| where Operation in (\"TeamCreated\", \"TeamDeleted\")\r\n| summarize\r\n    ['Count of Teams Created']=dcountif(TeamName, Operation == \"TeamCreated\"),\r\n    ['List of Teams Created']=make_set_if(TeamName, Operation == \"TeamCreated\"),\r\n    ['Count of Teams Deleted']=dcountif(TeamName, Operation == \"TeamDeleted\"),\r\n    ['List of Teams Deleted']=make_set_if(TeamName, Operation == \"TeamDeleted\")\r\n    by Week=startofweek(TimeGenerated)\r\n| sort by Week desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/3630c45d-2433-4a5b-9a24-c416be691c3e')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Active Directory - Detect account sensitivity change",
                "description": "Detect when the 'account is sensitive and cannot be delegated' flag on an account is changed\n",
                "body": "SecurityEvent\n| project TimeGenerated, EventID, TargetAccount, SubjectAccount, UserAccountControl\n| where EventID == \"4738\"\n| where UserAccountControl has_any(\"2094\", \"2062\")\n| extend Activity = case\n    (UserAccountControl contains \"2094\", strcat(\"Account Sensitivity Enabled\"),\n    UserAccountControl contains \"2062\", strcat(\"Account Sensitivity Disabled\"),\n    \"Unknown\")\n| project TimeGenerated, Target=TargetAccount, Actor=SubjectAccount, Activity\n",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Active Directory"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/36811995-9b2f-49e0-a06f-426deac961c7')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Security Alert - Find email from suspicious sender",
                "description": "When a user is flagged for suspicious email sending patterns retrieve all the email they have sent around the time of the alert",
                "body": "//When a user is flagged for suspicious email sending patterns retrieve all the email they have sent around the time of the alert\nSecurityAlert\n| where TimeGenerated > ago (7d)\n| where ProviderName == \"OATP\"\n| where AlertName == \"Suspicious email sending patterns detected\"\n| mv-expand todynamic(Entities)\n| extend SenderFromAddress = tolower(tostring(Entities.MailboxPrimaryAddress))\n| project AlertTime=TimeGenerated, SenderFromAddress\n| join kind=inner (\n    EmailEvents\n    )\n    on SenderFromAddress\n| where EmailDirection == \"Outbound\"\n| where TimeGenerated between ((AlertTime - timespan(1h)) .. (AlertTime + timespan(1h)))\n| project TimeGenerated, Subject, AttachmentCount, RecipientEmailAddress",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365",
                        "Security Alert"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/3744aa87-afdb-485c-9e03-534aaa1f7bc3')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize total vs distinct signins to app",
                "description": "Visualize the difference been total and distinct user sign ins to an app per day\n",
                "body": "//Visualize the difference been total and distinct user sign ins to an app per day\r\nSigninLogs\r\n| where TimeGenerated > ago(90d)\r\n//Change to whichever app you are interested in\r\n| where AppDisplayName == \"Office 365 Exchange Online\"\r\n| where ResultType == 0\r\n| summarize ['Total Signins']=count(), ['Distinct user signins']=dcount(UserPrincipalName) by bin(TimeGenerated, 1d)\r\n| render timechart\r\n    with (\r\n    title=\"Total vs Distinct signins to Exchange Online\",\r\n    xtitle=\"Day\",\r\n    ytitle=\"Count\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/37495adc-2bf1-4994-8b0d-f631ef672add')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Detect possible phishing via DNS",
                "description": "When Defender for Cloud detects a possible DNS lookup to a phishing domain attempt to find if the URL was part of an email phishing attack",
                "body": "//When Defender for Cloud detects a possible DNS lookup to a phishing domain attempt to find if the URL was part of an email phishing attack\r\nlet suspiciousdomains=\r\n    SecurityAlert\r\n    | where AlertName startswith \"Communication with possible phishing domain\"\r\n    | mv-expand todynamic(Entities)\r\n    | extend DomainName = tostring(Entities.DomainName)\r\n    | where isnotempty(DomainName)\r\n    | distinct DomainName;\r\nEmailEvents\r\n| where EmailDirection == \"Inbound\"\r\n| project\r\n    TimeGenerated,\r\n    SenderMailFromAddress,\r\n    RecipientEmailAddress,\r\n    EmailDirection,\r\n    NetworkMessageId\r\n| join kind=inner (EmailUrlInfo) on NetworkMessageId\r\n| project\r\n    TimeGenerated,\r\n    SenderMailFromAddress,\r\n    RecipientEmailAddress,\r\n    EmailDirection,\r\n    Url,\r\n    UrlDomain\r\n| where UrlDomain in~ (suspiciousdomains)",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "DNS",
                        "Office 365",
                        "Security Alert"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/38daf971-db91-4435-902c-9754843d7acc')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDI - Summarize Defender for Identity alert",
                "description": "Parse all the relevant entities - hosts, accounts, IP addresses, files, groups, resources and times from Defender for Identity alerts",
                "body": "//Parse all the relevant entities - hosts, accounts, IP addresses, files, groups, resources and times from Defender for Identity alerts\r\nSecurityAlert\r\n| where ProviderName == \"Azure Advanced Threat Protection\"\r\n| summarize arg_max(TimeGenerated, *) by VendorOriginalId\r\n| mv-expand todynamic(Entities)\r\n| extend x = parse_json(Entities)\r\n| extend Host = x.HostName\r\n| extend Account = x.Name\r\n| extend IP = x.Address\r\n| extend File = x.File\r\n| extend Group = x.Group\r\n| extend ResourceId = x.ResourceName\r\n| extend Time= x.Time\r\n| summarize\r\n    HostNames=make_set(Host),\r\n    AccountNames=make_set(Account),\r\n    IPAddresses=make_set(IP),\r\n    Files=make_set(File),\r\n    SecurityGroups=make_set(Group),\r\n    Resources=make_set(ResourceId),\r\n    TimeAccessed=make_set(Time)\r\n    by TimeGenerated, SystemAlertId, AlertName, Description",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Identity",
                        "Security Alert"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/3b4a8386-6149-4753-a9df-a9048e053b3b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize legacy auth",
                "description": "Summarize legacy auth authentications by type (such as ActiveSync, IMAP etc) and which accounts are using those protocols",
                "body": "//Microsoft Sentinel query\r\n//Union both interactive and non interactive sign in logs. If you only use Signin logs then just replace with SigninLogs\r\nunion SigninLogs, AADNonInteractiveUserSignInLogs\r\n//\r\n| where TimeGenerated > ago(30d)\r\n| where ResultType == 0\r\n| where ClientAppUsed in (\"Exchange ActiveSync\", \"Exchange Web Services\", \"AutoDiscover\", \"Unknown\", \"POP3\", \"IMAP4\", \"Other clients\", \"Authenticated SMTP\", \"MAPI Over HTTP\", \"Offline Address Book\")\r\n| summarize ['Count of legacy auth attempts'] = count()by ClientAppUsed, UserPrincipalName\r\n| sort by ClientAppUsed asc, ['Count of legacy auth attempts'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/3b6454b5-1a83-4d91-9bf9-ffa0f8ac2e71')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect internal to public RDP",
                "description": "Detect allowed RDP connections from private to public networks",
                "body": "//Detect allowed RDP connections from private to public networks\r\nDeviceNetworkEvents\r\n| where ActionType == \"ConnectionSuccess\"\r\n| where RemotePort == \"3389\"\r\n| where LocalIPType == \"Private\" and RemoteIPType == \"Public\"\r\n| project\r\n    TimeGenerated,\r\n    DeviceName,\r\n    InitiatingProcessAccountName,\r\n    InitiatingProcessCommandLine,\r\n    LocalIP,\r\n    RemoteIP,\r\n    RemoteUrl",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/3d62f3e2-3726-4454-99fb-342efa8ac4ac')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect anomalous RDP connections",
                "description": "Visualizes potentially anomalous RDP connections from your devices",
                "body": "//Visualizes potentially anomalous RDP connections from your devices.\r\n//Starttime and timeframe = how many days of data to look at to build your data set and in what grouping, i.e 30 days of data over 2 hour periods.\r\n//Threshold = the amount of total RDP connections required to be included in anomaly calculations. Reduces noise from low level anomalies, e.g going from 1 connection to 2.\r\n//Sensitivity = adjust to make the query more or less sensitive, the higher the value, the greater the anomaly required to be detected.\r\nlet starttime = 30d;\r\nlet timeframe = 2h;\r\nlet sensitivity = 3;\r\nlet threshold = 5;\r\nlet outlierdevices=\r\n    DeviceNetworkEvents\r\n    | where TimeGenerated > ago(starttime)\r\n    | where LocalIPType == \"Private\"\r\n    | where RemotePort == \"3389\"\r\n    // Exclude Defender for Identity which uses RDP to map your network\r\n    | where InitiatingProcessFileName <> \"Microsoft.Tri.Sensor.exe\"\r\n    | project TimeGenerated, DeviceName\r\n    | order by TimeGenerated\r\n    | summarize RDPEvents=count()by DeviceName, bin(TimeGenerated, timeframe)\r\n    | where RDPEvents > threshold\r\n    | summarize EventCount=make_list(RDPEvents), TimeGenerated=make_list(TimeGenerated) by DeviceName\r\n    | extend outliers=series_decompose_anomalies(EventCount, sensitivity)\r\n    | mv-expand TimeGenerated, EventCount, outliers\r\n    | where outliers == 1\r\n//Optionally visualize the anomalies, remove everything below this line to just retrieve the data\r\n    | distinct DeviceName;\r\nDeviceNetworkEvents\r\n| where TimeGenerated > ago(starttime)\r\n| where DeviceName in (outlierdevices)\r\n| where LocalIPType == \"Private\"\r\n| where RemotePort == \"3389\"\r\n| where InitiatingProcessFileName <> \"Microsoft.Tri.Sensor.exe\"\r\n| summarize RDPCount=count() by DeviceName, bin(TimeGenerated, timeframe)\r\n| render timechart",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/3d81a465-c29f-4629-b339-8461c1c62144')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect guest denied access to multiple apps",
                "description": "Alert when Azure AD guest accounts are denied access (either by Conditional Access or because they aren't granted specific access) to multiple applications in a short time period",
                "body": "//Alert when Azure AD guest accounts are denied access (either by Conditional Access or because they aren't granted specific access) to multiple applications in a short time period\r\n//This query uses 3 or more applications within an hour\r\nSigninLogs\r\n| where TimeGenerated > ago (7d)\r\n| where UserType == \"Guest\"\r\n| where ResultType in (\"53003\", \"50105\")\r\n| summarize\r\n    ['Application Count']=dcount(AppDisplayName),\r\n    ['Application List']=make_set(AppDisplayName)\r\n    by UserPrincipalName, bin(TimeGenerated, 1h)\r\n| where ['Application Count'] >= 3",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/3ff998c2-452d-4609-b369-19fe56bfb552')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Security Alert - Visualize total vs distinct entity alerts",
                "description": "Visualize your total alerts vs distinct entity alerts per week. Will let you see if you have lots of entities being attacked, or a few being attacked often.",
                "body": "//Visualize your total alerts vs distinct entity alerts per week\r\nSecurityAlert\r\n| where TimeGenerated > ago(180d)\r\n//Exclude alerts generated by Microsoft Sentinel itself if you don't wish to double count them\r\n| where ProductName != \"ASI Scheduled Alerts\"\r\n| where Status == \"New\"\r\n| summarize\r\n    ['Total Security Alerts']=count(),\r\n    ['Unique Entity Alerts']=dcountif(CompromisedEntity, isnotempty(CompromisedEntity))\r\n    by bin(TimeGenerated, 7d)\r\n| render timechart with (title=\"Total Security Alerts vs Unique Entity Alerts\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Security Alert"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/410a5a98-540f-44be-afe2-032daebc1ed8')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find inactive privileged accounts",
                "description": "Find users who hold a privileged Azure AD role but haven't completed any activities in Azure AD for 45 days",
                "body": "//Find users who hold a privileged Azure AD role but haven't completed any activities in Azure AD for 45 days\r\n//Lookup the IdentityInfo table for any users holding a privileged role\r\nIdentityInfo\r\n| where TimeGenerated > ago(21d)\r\n| summarize arg_max(TimeGenerated, *) by AccountUPN\r\n| where isnotempty(AssignedRoles)\r\n| where AssignedRoles != \"[]\"\r\n| project UserPrincipalName=AccountUPN, AssignedRoles\r\n| join kind=leftanti (\r\n    AuditLogs\r\n    | where TimeGenerated > ago(45d)\r\n    | extend UserPrincipalName = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    | where isnotempty(UserPrincipalName)\r\n    | distinct UserPrincipalName\r\n    )\r\n    on UserPrincipalName",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/421abeef-9ad3-45cf-9b4a-951d3033956d')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Find top 20 random stats",
                "description": "Find the top 20 of a collection of varied data sets, no real detections in here just interesting data that is captured",
                "body": "//Find the top 20 of a collection of varied data sets, no real detections in here just interesting data that is captured\r\n//Top 20 USB models plugged in\r\nDeviceEvents\r\n| where ActionType == \"UsbDriveMounted\"\r\n| extend Manufacturer = tostring(AdditionalFields.Manufacturer)\r\n| extend ProductName = tostring(AdditionalFields.ProductName)\r\n| where isnotempty(Manufacturer) or isnotempty(Manufacturer)\r\n| extend ['USB Drive Model']= strcat(Manufacturer, \"-\", ProductName)\r\n| summarize Count=count()by ['USB Drive Model']\r\n| top 20 by Count\r\n\r\n//Top 20 users taking screenshots\r\nDeviceEvents\r\n| where ActionType == \"ScreenshotTaken\"\r\n| where InitiatingProcessAccountName != \"system\"\r\n| summarize Count=count() by InitiatingProcessAccountName\r\n| top 20 by Count\r\n\r\n//Top 20 models of monitor being plugged in\r\nDeviceEvents\r\n| where ActionType == \"PnpDeviceConnected\"\r\n| extend ClassName = tostring(AdditionalFields.ClassName)\r\n| where ClassName == \"Monitor\"\r\n| extend ['Monitor Type'] = tostring(AdditionalFields.DeviceDescription)\r\n| summarize Count=count()by ['Monitor Type']\r\n| top 20 by Count\r\n\r\n//Top 20 web shortcuts opened\r\nDeviceEvents\r\n| where ActionType == \"BrowserLaunchedToOpenUrl\"\r\n| summarize Count=count()by RemoteUrl\r\n| where RemoteUrl startswith \"http\"\r\n| top 20 by Count\r\n\r\n\r\n//Advanced Hunting queries\r\n\r\n//Data connector required for this query - Advanced Hunting license\r\n\r\n//Top 20 USB models plugged in\r\nDeviceEvents\r\n| where ActionType == \"UsbDriveMounted\"\r\n| extend AF = parse_json(AdditionalFields)\r\n| extend Manufacturer = tostring(AF.Manufacturer)\r\n| extend ProductName = tostring(AF.ProductName)\r\n| where isnotempty(Manufacturer) or isnotempty(Manufacturer)\r\n| extend ['USB Drive Model']= strcat(Manufacturer, \"-\", ProductName)\r\n| summarize Count=count()by ['USB Drive Model']\r\n| top 20 by Count\r\n\r\n//Top 20 users taking screenshots\r\nDeviceEvents\r\n| where ActionType == \"ScreenshotTaken\"\r\n| where InitiatingProcessAccountName != \"system\"\r\n| summarize Count=count() by InitiatingProcessAccountName\r\n| top 20 by Count\r\n\r\n//Top 20 models of monitor being plugged in\r\nDeviceEvents\r\n| where ActionType == \"PnpDeviceConnected\"\r\n| extend AF = parse_json(AdditionalFields)\r\n| extend ClassName = tostring(AF.ClassName)\r\n| where ClassName == \"Monitor\"\r\n| extend ['Monitor Type'] = tostring(AF.DeviceDescription)\r\n| summarize Count=count()by ['Monitor Type']\r\n| top 20 by Count\r\n\r\n//Top 20 web shortcuts opened\r\nDeviceEvents\r\n| where ActionType == \"BrowserLaunchedToOpenUrl\"\r\n| summarize Count=count()by RemoteUrl\r\n| where RemoteUrl startswith \"http\"\r\n| top 20 by Count",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/4428a46d-a6e1-493f-b21f-88e94a776033')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Visualize alert severity",
                "description": "Visualize the severity of your MDE alerts (Informational, Low, Medium, High) per day",
                "body": "//Visualize the severity of your MDE alerts (Informational, Low, Medium, High) per day\r\nSecurityAlert\r\n| where TimeGenerated > ago (14d)\r\n| where ProviderName == \"MDATP\"\r\n| summarize Count=count()by AlertSeverity, startofday(TimeGenerated)\r\n| render columnchart with (kind=unstacked, ytitle=\"Alert Count\", xtitle=\"Day\", title=\"Defender for Endpoint alert severity per day\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Security Alert",
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/44f70392-a290-4de1-bbdc-24430b641a97')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect first time credential addition",
                "description": "Detects users who have added a credential to an Azure AD App for the first time in 90 days, adjust timeframe as needed.\n",
                "body": "//Detects users who have added a credential to an Azure AD App for the first time in 90 days, adjust timeframe as needed.\r\nlet timeframe = startofday(ago(90d));\r\nAuditLogs\r\n| where TimeGenerated > timeframe and TimeGenerated < startofday(now())\r\n| where OperationName has \"Update application – Certificates and secrets management\"\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| project Actor\r\n| join kind=rightanti\r\n    (\r\n    AuditLogs\r\n    | where TimeGenerated > startofday(now())\r\n    | where OperationName has \"Update application – Certificates and secrets management\"\r\n    | extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    | extend AppId = tostring(AdditionalDetails[1].value)\r\n    | project TimeGenerated, Actor, AppId\r\n    )\r\n    on Actor\r\n| project TimeGenerated, Actor, AppId",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/45106851-4b12-4616-902e-5f5b97b8284b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Find accounts with most local admin privilege",
                "description": "Find which of your accounts have logged onto the most devices with local admin credentials. These accounts are potential targets for lateral movement and privilege escalation\n",
                "body": "//Find which of your accounts have logged onto the most devices with local admin credentials. These accounts are potential targets for lateral movement and privilege escalation\r\nDeviceLogonEvents\r\n| where TimeGenerated > ago(30d)\r\n| project DeviceName, ActionType, LogonType, AdditionalFields, InitiatingProcessCommandLine, AccountName, IsLocalAdmin\r\n| where ActionType == \"LogonSuccess\"\r\n| where LogonType == \"Interactive\"\r\n| where AdditionalFields.IsLocalLogon == true\r\n| where InitiatingProcessCommandLine == \"lsass.exe\"\r\n| summarize\r\n    ['Local Admin Count']=dcountif(DeviceName,IsLocalAdmin == \"true\"),\r\n    ['Local Admins']=make_set_if(DeviceName, IsLocalAdmin == \"true\")\r\n    by AccountName\r\n| sort by ['Local Admin Count'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/47637995-b3f7-48fb-a7a5-f4ea16b52fed')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find top 20 apps with no CA",
                "description": "Find the top 20 most popular applications in your tenant that have had no Conditional Access policies (success or failure) applied",
                "body": "//Find the top 20 most popular applications in your tenant that have had no Conditional Access policies (success or failure) applied\r\nlet apps=\r\n    SigninLogs\r\n    | where TimeGenerated > ago (30d)\r\n    | project TimeGenerated, ConditionalAccessPolicies, AppDisplayName\r\n//Exclude native Microsoft apps that you can't enforce policy on or that are covered natively in Office 365\r\n    | where AppDisplayName !in (\"Microsoft Office Web Apps Service\", \"Microsoft App Access Panel\", \"Office Online Core SSO\", \"Microsoft Authentication Broker\", \"Microsoft Account Controls V2\", \"Microsoft 365 Support Service\",\"Office Online Maker SSO\",\"My Apps\",\"My Profile\")\r\n    | mv-expand ConditionalAccessPolicies\r\n    | extend CAResult = tostring(ConditionalAccessPolicies.result)\r\n    | summarize ResultSet=make_set(CAResult) by AppDisplayName\r\n    | where ResultSet !has \"success\" or ResultSet !has \"failure\"\r\n    | project AppDisplayName;\r\nSigninLogs\r\n| where TimeGenerated > ago(30d)\r\n| where ResultType == 0\r\n| where AppDisplayName in (apps)\r\n| summarize Count=count()by AppDisplayName\r\n| top 20 by Count",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/47b2118f-e9a3-418f-80fa-00f957044c6c')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect encoded PowerShell",
                "description": "Detects encoded PowerShell commands and then decodes the encoded string",
                "body": "//Finds encoded PowerShell commands and then decodes the encoded string\r\n//Query modified from this post - https://techcommunity.microsoft.com/t5/microsoft-sentinel/finding-base64-encoded-commands/m-p/1891876\r\nDeviceProcessEvents\r\n| where ProcessCommandLine contains \"powershell\" or InitiatingProcessCommandLine contains \"powershell\"\r\n| where ProcessCommandLine contains \"-enc\"\r\n    or ProcessCommandLine contains \"-encodedcommand\"\r\n    or InitiatingProcessCommandLine contains \"-enc\"\r\n    or InitiatingProcessCommandLine contains \"-encodedcommand\"\r\n//Extract encoded command using regex\r\n//This query will only return results when the command can be matched via regex and decoded, if you run only the above lines it will return all encoded commands without attempting to match and decode\r\n| extend EncodedCommand = extract(@'\\s+([A-Za-z0-9+/]{20}\\S+$)', 1, ProcessCommandLine)\r\n| where EncodedCommand != \"\"\r\n| extend DecodedCommand = base64_decode_tostring(EncodedCommand)\r\n| where DecodedCommand != \"\"\r\n| project\r\n    TimeGenerated,\r\n    DeviceName,\r\n    InitiatingProcessAccountName,\r\n    InitiatingProcessCommandLine,\r\n    ProcessCommandLine,\r\n    EncodedCommand,\r\n    DecodedCommand",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/47d9da9e-3b21-4c9a-b974-a6854703bc6c')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure - Summarize Bastion usage",
                "description": "Summarize your Bastion usage by which users are connecting to which devices via which protocl (RDP or SSH)",
                "body": "//Summarize your Bastion usage by which users are connecting to which devices via which protocl (RDP or SSH)\r\nMicrosoftAzureBastionAuditLogs \r\n| where TimeGenerated > ago (30d)\r\n| where Message == \"Successfully Connected.\"\r\n| summarize\r\n    ['Count of RDP Devices']=dcountif(TargetVMIPAddress, Protocol == \"rdp\"),\r\n    ['List of RDP Devices']=make_set_if(TargetVMIPAddress, Protocol == \"rdp\"),\r\n    ['Count of SSH Devices']=dcountif(TargetVMIPAddress, Protocol == \"ssh\"),\r\n    ['List of SSH Devices']=make_set_if(TargetVMIPAddress, Protocol == \"ssh\")\r\n    by UserName\r\n| sort by ['Count of RDP Devices'] desc",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure Resources"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/48c87e2e-6bda-46ee-b8ee-8bbf983097e8')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Intune - Find non compliant devices",
                "description": "When Azure AD flags a device as non compliant, retrieve the details about the devices from Intune",
                "body": "//When Azure AD flags a device as non compliant, retrieve the details about the devices from Intune\r\n//First find the device name from the 'device no longer compliant' action\r\nlet devices=\r\n    AuditLogs\r\n    | where TimeGenerated > ago (1d)\r\n    | where OperationName == \"Device no longer compliant\"\r\n    | extend DeviceName = tostring(TargetResources[0].displayName)\r\n    | distinct DeviceName;\r\n//Lookup those devices in the IntuneDevices table, and retrieve the latest record\r\nIntuneDevices\r\n| where TimeGenerated > ago (7d)\r\n| summarize arg_max(TimeGenerated, *) by DeviceName\r\n| where DeviceName in (devices)",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Intune"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/492824da-0c27-4e41-98af-ac51fba51fbc')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect Azure AD role added and removed quickly",
                "description": "Detect when a user is added and removed from an Azure AD role within a short time frame",
                "body": "//Detect when a user is added and removed from an Azure AD role within a short time frame\r\n//Timerange = the amount of data to look back on, timeframe = the time between the role being added and removed\r\nlet timerange=7d;\r\nlet timeframe=4h;\r\nAuditLogs\r\n| where TimeGenerated > ago (timerange)\r\n| where OperationName == \"Add member to role\"\r\n| where Result == \"success\"\r\n//Exclude role additions from Azure AD PIM\r\n| where Identity <> \"MS-PIM\"\r\n| extend User = tostring(TargetResources[0].userPrincipalName)\r\n| extend Role = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].newValue)))\r\n| extend UserWhoAdded = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| project TimeAdded=TimeGenerated, User, Role, UserWhoAdded\r\n| join kind=inner (\r\n    AuditLogs\r\n    | where TimeGenerated > ago (timerange)\r\n    | where OperationName == \"Remove member from role\"\r\n    //Exclude role removals from Azure AD PIM\r\n    | where Result == \"success\"\r\n    | where Identity <> \"MS-PIM\"\r\n    | extend User = tostring(TargetResources[0].userPrincipalName)\r\n    | extend Role = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].oldValue)))\r\n    | extend UserWhoRemoved = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    | project TimeRemoved=TimeGenerated, User, Role, UserWhoRemoved\r\n    )\r\n    on User, Role\r\n| extend ['Time User Held Role'] = TimeRemoved - TimeAdded\r\n| where ['Time User Held Role'] < ['timeframe']\r\n| project\r\n    TimeAdded,\r\n    TimeRemoved,\r\n    ['Time User Held Role'],\r\n    User,\r\n    Role,\r\n    UserWhoAdded,\r\n    UserWhoRemoved",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/4948ae52-f9eb-4beb-9f0e-492ef6dd58b9')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find apps with most unknown location signins",
                "description": "Find the applications with the most signins coming from unknown locations (not defined in Conditional Access) and only requiring single factor authentication",
                "body": "//Find the applications with the most signins coming from unknown locations (not defined in Conditional Access) and only requiring single factor authentication\r\nSigninLogs\r\n| where TimeGenerated > ago(30d)\r\n| where ResultType == 0\r\n| where NetworkLocationDetails == '[]'\r\n| where AuthenticationRequirement == \"singleFactorAuthentication\"\r\n| summarize ['Count of signins']=count(), ['Distinct user count']=dcount(UserPrincipalName) by AppDisplayName\r\n| sort by ['Distinct user count'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/4a3fe481-14de-42d9-94ac-a2a1e150980c')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect guest added to PIM",
                "description": "Detect when an Azure AD guest account is assigned to an Azure AD PIM role",
                "body": "//Detect when an Azure AD guest account is assigned to an Azure AD PIM role\r\nAuditLogs\r\n| where TimeGenerated > ago (1d)\r\n| where OperationName in (\"Add eligible member to role in PIM completed (permanent)\", \"Add eligible member to role in PIM completed (timebound)\", \"Add member to role in PIM completed (permanent)\", \"Add member to role in PIM completed (timebound)\")\r\n| extend ['Azure AD Role Name'] = tostring(TargetResources[0].displayName)\r\n| extend Target = tostring(TargetResources[2].userPrincipalName)\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| where Target contains \"#ext#\"\r\n| project TimeGenerated, OperationName, Actor, Target, ['Azure AD Role Name']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/4c5192a0-8c66-4c4e-b98d-503883855628')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect SSPR at suspicious times",
                "description": "Detect successful self service password resets at suspicious times",
                "body": "//Detect successful self service password resets at suspicious times\r\nAuditLogs\r\n// extend LocalTime to your time zone\r\n| extend LocalTime=TimeGenerated + 5h\r\n| where LocalTime > ago(7d)\r\n| where OperationName == \"Reset password (self-service)\"\r\n| where ResultDescription == \"Successfully completed reset.\"\r\n// Change hours of the day to suit your company, i.e this would find self service password reset events between 11pm and 4am\r\n| where hourofday(LocalTime) !between (4 .. 23)\r\n| extend User = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| extend ['IP Address of User'] = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)\r\n| project LocalTime, OperationName, ResultDescription, User, ['IP Address of User']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/4df45ea7-cfd3-4f8f-aaa5-99e0d5899339')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize current service principal permissions",
                "description": "Summarize your Azure AD service principals by what permissions they currently hold\n",
                "body": "//Summarize your Azure AD apps by what permissions they currently hold\r\n//Find applications that have been deleted\r\nlet deletedapps=\r\nAuditLogs\r\n| where OperationName == \"Remove service principal\"\r\n| extend ServicePrincipalId = tostring(TargetResources[0].id)\r\n| project ServicePrincipalId;\r\nlet delegatedaccess=\r\n    AuditLogs\r\n    | where TimeGenerated > ago(365d)\r\n    | where OperationName has \"Add delegated permission grant\"\r\n    | extend x = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].newValue)))\r\n    | extend ['Permissions granted'] = split(x, ' ')\r\n    | extend ServicePrincipalId = tostring(TargetResources[1].id)\r\n    | extend ['Permission type'] = strcat(\"Delegated\")\r\n    | summarize arg_max(TimeGenerated, *) by ServicePrincipalId\r\n//Exclude deleted applications\r\n    | where ServicePrincipalId !in (deletedapps)\r\n    | project\r\n        TimeGenerated,\r\n        ['Permission type'],\r\n        ['Permissions granted'],\r\n        ServicePrincipalId;\r\nlet appaccess=\r\n    AuditLogs\r\n    | where TimeGenerated > ago(365d)\r\n    | where OperationName has \"Add app role assignment to service principal\"\r\n    | extend x = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].newValue)))\r\n    | extend ['Permissions granted'] = split(x, ' ')\r\n    | extend ['Permission type'] = strcat(\"Application\")\r\n    | extend ServicePrincipalId = tostring(TargetResources[1].id)\r\n    | summarize arg_max(TimeGenerated, *) by ServicePrincipalId\r\n//Exclude deleted applications\r\n    | where ServicePrincipalId !in (deletedapps)\r\n    | project\r\n        TimeGenerated,\r\n        ServicePrincipalId,\r\n        ['Permission type'],\r\n        ['Permissions granted'];\r\nunion delegatedaccess, appaccess\r\n| mv-expand ['Permissions granted']\r\n| where isnotempty( ['Permissions granted'])\r\n//Extend new permission field\r\n| summarize ['Permission List']=make_set(['Permissions granted']) by ['Permission type'], ServicePrincipalId\r\n| extend ['Number of Permissions']=array_length(['Permission List']) \r\n| sort by ServicePrincipalId desc, ['Permission type'] asc",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/4e3816f3-4829-4852-927a-ba900d5d7890')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect first time CA changes",
                "description": "Detects users who add, delete or update a Azure AD Conditional Access policy for the first time.",
                "body": "//Detects users who add, delete or update a Azure AD Conditional Access policy for the first time.\r\n//First find users who have previously made CA policy changes, this example looks back 90 days\r\nlet knownusers=\r\n    AuditLogs\r\n    | where TimeGenerated > ago(90d) and TimeGenerated < ago(1d)\r\n    | where OperationName in (\"Update conditional access policy\", \"Add conditional access policy\", \"Delete conditional access policy\")\r\n    | extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    | distinct Actor;\r\n//Find new events from users not in the known user list\r\nAuditLogs\r\n| where TimeGenerated > ago(1d)\r\n| where OperationName in (\"Update conditional access policy\", \"Add conditional access policy\", \"Delete conditional access policy\")\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| extend ['Policy Name'] = tostring(TargetResources[0].displayName)\r\n| extend ['Policy Id'] = tostring(TargetResources[0].id)\r\n| where Actor !in (knownusers)\r\n| project TimeGenerated, Actor, ['Policy Name'], ['Policy Id']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/4ef076bc-1a04-40c2-93e9-fc51b27d804b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure - Detect when a resource lock added or removed",
                "description": "Detect when a resource lock is added or removed from an Azure resource",
                "body": "AzureActivity\r\n| where OperationNameValue in (\"MICROSOFT.AUTHORIZATION/LOCKS/WRITE\", \"MICROSOFT.AUTHORIZATION/LOCKS/DELETE\")\r\n| where ActivityStatusValue == \"Success\"\r\n| extend Activity = case(OperationNameValue == \"MICROSOFT.AUTHORIZATION/LOCKS/WRITE\", strcat(\"Resource Lock Added\"),\r\n    OperationNameValue == \"MICROSOFT.AUTHORIZATION/LOCKS/DELETE\", strcat(\"Resource Lock Removed\"),\r\n    \"unknown\")\r\n| extend ResourceGroup = tostring(parse_json(Properties).resourceGroup)\r\n| extend AzureResource = tostring(parse_json(Properties).resourceProviderValue)\r\n| extend x = tostring(parse_json(Properties).resource)\r\n| parse x with ResourceName \"/\" *\r\n| parse x with * \"microsoft.authorization/\" LockName\r\n| project\r\n    TimeGenerated,\r\n    Activity,\r\n    ResourceName,\r\n    ['Azure Resource']=AzureResource,\r\n    ['Azure Subscription Id']=SubscriptionId,\r\n    ['Azure Resource Group']=ResourceGroup,\r\n    LockName",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure Resources"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/4fb9ebdc-584a-4120-85df-e637d5ad1711')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize MFA methods over time",
                "description": "Visualize the MFA types used by your users - phone sign in, mobile passcode, push or text message, over time",
                "body": "//Visualize the MFA types used by your users - phone sign in, mobile passcode, push or text message, over time\r\nSigninLogs\r\n| where TimeGenerated > ago (180d)\r\n| where AuthenticationRequirement == \"multiFactorAuthentication\"\r\n| project TimeGenerated, AuthenticationDetails\r\n| extend ['MFA Method'] = tostring(parse_json(AuthenticationDetails)[1].authenticationMethod)\r\n| summarize Count=count()by ['MFA Method'], bin(TimeGenerated, 7d)\r\n| where ['MFA Method'] != \"Previously satisfied\" and isnotempty(['MFA Method']) \r\n| render timechart with (ytitle=\"Count\", xtitle=\"Day\", title=\"MFA methods per week over time\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/502ba37f-c059-4364-96af-c23de0005e14')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize permissions granted to service principals",
                "description": "Summarize the permissions granted to your Azure AD apps over the last year",
                "body": "//Summarize the permissions granted to your Azure AD apps over the last year\r\n//Find applications that have been deleted\r\nlet deletedapps=\r\nAuditLogs\r\n| where OperationName == \"Remove service principal\"\r\n| extend ServicePrincipalId = tostring(TargetResources[0].id)\r\n| project ServicePrincipalId;\r\nlet delegatedaccess=\r\n    AuditLogs\r\n    | where TimeGenerated > ago(365d)\r\n    | where OperationName has \"Add delegated permission grant\"\r\n    | extend x = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].newValue)))\r\n    | extend ['Permissions granted'] = split(x, ' ')\r\n    | extend ServicePrincipalId = tostring(TargetResources[1].id)\r\n    | extend ['Permission type'] = strcat(\"Delegated\")\r\n    | summarize arg_max(TimeGenerated, *) by ServicePrincipalId\r\n//Exclude deleted applications\r\n    | where ServicePrincipalId !in (deletedapps)\r\n    | project\r\n        TimeGenerated,\r\n        ['Permission type'],\r\n        ['Permissions granted'],\r\n        ServicePrincipalId;\r\nlet appaccess=\r\n    AuditLogs\r\n    | where TimeGenerated > ago(365d)\r\n    | where OperationName has \"Add app role assignment to service principal\"\r\n    | extend x = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].newValue)))\r\n    | extend ['Permissions granted'] = split(x, ' ')\r\n    | extend ['Permission type'] = strcat(\"Application\")\r\n    | extend ServicePrincipalId = tostring(TargetResources[1].id)\r\n    | summarize arg_max(TimeGenerated, *) by ServicePrincipalId\r\n//Exclude deleted applications\r\n    | where ServicePrincipalId !in (deletedapps)\r\n    | project\r\n        TimeGenerated,\r\n        ServicePrincipalId,\r\n        ['Permission type'],\r\n        ['Permissions granted'];\r\nunion delegatedaccess, appaccess\r\n| mv-expand ['Permissions granted']\r\n| where isnotempty( ['Permissions granted'])\r\n//Extend new permission field\r\n| extend Permission = strcat(['Permission type'],\" - \",['Permissions granted'])\r\n| summarize PermissionCount=count()by Permission\r\n| sort by PermissionCount desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/510a456b-d43c-49e0-8ebb-12cf43803d0f')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "DCA - Detect paid trial started",
                "description": "Detect when a user starts a paid trial of a M365 product",
                "body": "//Alert when a user starts a paid trial of a M365 product\r\nCloudAppEvents\r\n| extend Operation = tostring(RawEventData.Operation)\r\n| where Operation == \"StartAPaidTrial\"\r\n| extend UserId = tostring(RawEventData.UserId)\r\n| extend LicenseDisplayName = tostring(RawEventData.LicenseDisplayName)\r\n| extend Workload = tostring(RawEventData.Workload)\r\n| project TimeGenerated, Operation, UserId, LicenseDisplayName, Workload",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Cloud Apps"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/511b77a1-bcc7-4f50-bfe4-f80b2bda5069')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Security Alert - Visualize alerts by product",
                "description": "Visualize the number of alerts generated per day by each Defender product",
                "body": "//Visualize the number of alerts generated per day by each Defender product\r\nSecurityAlert\r\n| where TimeGenerated > ago(14d)\r\n| summarize Count=count() by ProductName, bin(TimeGenerated, 1d)\r\n| where ProductName != \"Azure Sentinel\"\r\n| render columnchart with (kind=unstacked, title=\"Alerts by Defender product per day\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Security Alert"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/525811ee-2d6a-4398-8bde-597a804f8597')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize risk event types per month",
                "description": "Visualize the different risk types (e.g password spray, unlikely travel) per month",
                "body": "//Visualize the different risk types (e.g password spray, unlikely travel) per month\r\nAADUserRiskEvents\r\n| where TimeGenerated > ago (180d)\r\n| where isnotempty(RiskEventType)\r\n| summarize Count=count()by RiskEventType, startofmonth(TimeGenerated)\r\n| render columnchart with (kind=unstacked, title=\"Risk event types per month\", xtitle=\"Month\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/53842eab-7adb-4e84-8a93-e02534d93f5b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find most Conditional Access failures",
                "description": "Find which users are failing the most Conditional Access policies",
                "body": "//Find which users are failing the most Conditional Access policies, retrieve the total failure count, distinct policy count and the names of the failed policies\r\nSigninLogs\r\n| where TimeGenerated > ago (30d)\r\n| project TimeGenerated, ConditionalAccessPolicies, UserPrincipalName\r\n| mv-expand ConditionalAccessPolicies\r\n| extend CAResult = tostring(ConditionalAccessPolicies.result)\r\n| extend CAPolicyName = tostring(ConditionalAccessPolicies.displayName)\r\n| where CAResult == \"failure\"\r\n| summarize\r\n    ['Total Conditional Access Failures']=count(),\r\n    ['Distinct Policy Failure Count']=dcount(CAPolicyName),\r\n    ['Policy Names']=make_set(CAPolicyName)\r\n    by UserPrincipalName\r\n| sort by ['Distinct Policy Failure Count'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/551ae78f-9f60-41dd-ba2c-4a52abf1b430')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize legacy auth methods by app",
                "description": "Visualize legacy auth method (i.e Activesync, IMAP etc) by distinct user count over time",
                "body": "//Visualize legacy auth method (i.e Activesync, IMAP etc) by distinct user count over time\r\nSigninLogs\r\n| where TimeGenerated > ago(90d)\r\n| where ResultType == 0\r\n| where ClientAppUsed in (\"Exchange ActiveSync\", \"Exchange Web Services\", \"AutoDiscover\", \"Unknown\", \"POP3\", \"IMAP4\", \"Other clients\", \"Authenticated SMTP\", \"MAPI Over HTTP\", \"Offline Address Book\")\r\n| summarize Count=dcount(UserPrincipalName) by ClientAppUsed, bin (TimeGenerated, 1d)\r\n| render timechart with (title=\"Legacy auth methods by distinct user over time\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/5546c8a4-9d29-4763-b1fd-77ca8ba62878')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize weekly PIM activations",
                "description": "Create a summary of PIM activations for all your users per week",
                "body": "//Create a summary of PIM activations for all your users per week\r\nAuditLogs\r\n| where TimeGenerated > ago (30d)\r\n| where OperationName == \"Add member to role completed (PIM activation)\"\r\n| extend User = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| extend Role = tostring(TargetResources[0].displayName)\r\n| where isnotempty(User)\r\n| summarize\r\n    ['Roles Activated']=make_list(Role),\r\n    ['Times Activated']=make_list(TimeGenerated)\r\n    by User, ['Week Starting']=startofweek(TimeGenerated)\r\n| sort by User asc, ['Week Starting'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/557ef3fc-91aa-4763-8f1e-ffd8de96e881')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect first time service principal creation",
                "description": "Detects users who add a service principal to Azure AD for the first time.",
                "body": "//Detects users who add a service principal to Azure AD for the first time.\r\nlet knownusers=\r\n    AuditLogs\r\n    | where TimeGenerated > ago(90d) and TimeGenerated < ago(1d)\r\n    | where OperationName == \"Add service principal\"\r\n    | extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    | where isnotempty(Actor)\r\n    | distinct Actor;\r\nAuditLogs\r\n| where TimeGenerated > ago(1d)\r\n| where OperationName == \"Add service principal\"\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| where isnotempty(Actor)\r\n| where Actor !in (knownusers)\r\n| extend AppId = tostring(AdditionalDetails[1].value)\r\n| project TimeGenerated, Actor, AppId",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/55926c36-2356-4755-9c21-8e368ace84e4')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure - Detect first time storage key retrieval",
                "description": "Detect when a user retrieves keys for Azure storage for the first time compared to the previous time range\n",
                "body": "//Detect when a user retrieves keys for Azure storage for the first time compared to the previous time range\r\nlet knownusers=\r\n    AzureActivity\r\n    | where TimeGenerated > ago(90d) and TimeGenerated < ago(1d)\r\n    | where OperationName == \"List Storage Account Keys\"\r\n    | where ActivityStatus == \"Succeeded\"\r\n    | project-rename Actor=Caller\r\n    | distinct Actor;\r\nAzureActivity\r\n| where TimeGenerated > ago(1d)\r\n| where OperationName == \"List Storage Account Keys\"\r\n| where ActivityStatus == \"Succeeded\"\r\n| project-rename Actor=Caller\r\n| where Actor !in (knownusers)\r\n| project\r\n    TimeGenerated,\r\n    Actor,\r\n    ['Actor IP Address']=CallerIpAddress,\r\n    ['Storage Account Name']=Resource,\r\n    ['Azure Subscription Id']=SubscriptionId,\r\n    ['Azure Resource Group']=ResourceGroup ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure Resources"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/572df7b2-f9fc-4793-80e5-41798047dbf4')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect actions by risky privileged users",
                "description": "When a user holding a privileged role triggers an Azure AD risk event, retrieve the operations completed by that user",
                "body": "//When a user holding a privileged role triggers an Azure AD risk event, retrieve the operations completed by that user\r\n//Lookup the IdentityInfo table for any users holding a privileged role\r\nlet privusers=\r\n    IdentityInfo\r\n    | where TimeGenerated > ago(21d)\r\n    | summarize arg_max(TimeGenerated, *) by AccountUPN\r\n    | where isnotempty(AssignedRoles)\r\n    | where AssignedRoles != \"[]\"\r\n    | distinct AccountUPN;\r\nAADUserRiskEvents\r\n| where TimeGenerated > ago (7d)\r\n| where UserPrincipalName in (privusers)\r\n| where RiskDetail != \"aiConfirmedSigninSafe\"\r\n| project RiskTime=TimeGenerated, UserPrincipalName\r\n| join kind=inner\r\n    (\r\n    AuditLogs\r\n    | where TimeGenerated > ago(7d)\r\n    | extend UserPrincipalName = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    )\r\n    on UserPrincipalName\r\n| project-rename OperationTime=TimeGenerated\r\n| project\r\n    RiskTime,\r\n    OperationTime,\r\n    ['Time Between Events']=datetime_diff(\"minute\", OperationTime, RiskTime),\r\n    OperationName,\r\n    Category,\r\n    CorrelationId",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/5826cf50-d282-4741-b507-4a7f9a666c63')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "DNS - Find stale domains",
                "description": "Find DNS domains that have not been queried in the last 30 days. These are potentially stale and should be removed.",
                "body": "//Find DNS domains that have not been queried in the last 30 days. These are potentially stale and should be removed.\r\nlet domain=\"yourdomain.com\";\r\nDnsEvents\r\n| where TimeGenerated > ago(180d)\r\n| where SubType == \"LookupQuery\"\r\n| where QueryType == \"A\"\r\n| where Name endswith domain\r\n| summarize LookupCount=count()by Name\r\n//Set a threshold for total lookups to be included, to account for typos and low volume queries\r\n| where LookupCount > 50\r\n| join kind=leftanti \r\n    (\r\n    DnsEvents\r\n    | where TimeGenerated > ago(30d)\r\n    | where SubType == \"LookupQuery\"\r\n    | where QueryType == \"A\"\r\n    | where Name endswith domain\r\n    | summarize arg_max(TimeGenerated, Name) by Name\r\n    | project TimeGenerated, Name)\r\n    on Name",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "DNS"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/59598c37-cd25-4c35-aef2-8691f8b60788')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize MFA challenge vs previously satisfied",
                "description": "Visualize when your users are actively challenged for MFA vs when it was previously satisfied",
                "body": "//Visualize when your users are actively challenged for MFA vs when it was previously satisfied\r\nSigninLogs\r\n| where TimeGenerated > ago(90d)\r\n| where AuthenticationRequirement == \"multiFactorAuthentication\"\r\n| mv-expand todynamic(AuthenticationDetails)\r\n| project TimeGenerated, AuthenticationDetails\r\n| extend MFAResultStep = tostring(AuthenticationDetails.authenticationStepResultDetail)\r\n| summarize\r\n    MFARequired=countif(MFAResultStep == \"MFA completed in Azure AD\"),\r\n    PreviouslySatisfied=countif(MFAResultStep == \"MFA requirement satisfied by claim in the token\")\r\n    by bin(TimeGenerated, 1d)\r\n| render timechart\r\n    with (\r\n    xtitle=\"Day\",\r\n    ytitle=\"Count\",\r\n    title=\"MFA challenges vs MFA previously satisfied over time\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/59aeb6f9-f33e-47d9-80e0-c62a10802503')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize known vs unknown location signins",
                "description": "Visualize sign in attempts to your Azure AD tenant by known or unknown network locations",
                "body": "//Visualize sign in attempts to your Azure AD tenant by known or unknown network locations\r\nSigninLogs\r\n| where TimeGenerated > ago(30d)\r\n//If a location it will be populated by its name, i.e 'Corporate Internet', if known the NetworkLocationDetails array is empty so we can find it by searching on '[]'\r\n| summarize\r\n    ['Known Location']=countif(NetworkLocationDetails != '[]'),\r\n    ['Unknown Location']=countif(NetworkLocationDetails == '[]')\r\n    by bin (TimeGenerated, 1d)\r\n| render timechart with (title=\"Known vs Unknown signins to Azure AD\", ytitle=\"Count\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/59fc3a91-1d6b-404a-977c-0d713b13149b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect first time whoami command",
                "description": "Detect when a 'whoami' command is sent for the first time from a device & account combination not seen before",
                "body": "//Detect when a 'whoami' command is sent for the first time from a device & account combination not seen before\r\nDeviceProcessEvents\r\n| where TimeGenerated > ago (30d) and TimeGenerated < ago(1d)\r\n| project DeviceName, InitiatingProcessAccountName, InitiatingProcessCommandLine\r\n| where InitiatingProcessCommandLine contains \"whoami\"\r\n| distinct DeviceName, InitiatingProcessAccountName\r\n| join kind=rightanti (\r\n    DeviceProcessEvents\r\n    | where TimeGenerated > ago(1d)\r\n    | project\r\n        TimeGenerated,\r\n        DeviceName,\r\n        InitiatingProcessAccountName,\r\n        InitiatingProcessCommandLine\r\n    | where InitiatingProcessCommandLine contains \"whoami\"\r\n    )\r\n    on DeviceName, InitiatingProcessAccountName",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/5aac0b48-0768-41f0-a246-c8c4bd66fe7c')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize SSPR and account unlocks",
                "description": "Visualize successful self service password resets and account unlocks over time",
                "body": "//Visualize successful self service password resets and account unlocks over time\r\nAuditLogs\r\n| where TimeGenerated > ago (180d)\r\n| where OperationName in (\"Reset password (self-service)\", \"Unlock user account (self-service)\")\r\n| summarize\r\n    ['Password Reset']=countif(OperationName == \"Reset password (self-service)\" and ResultDescription == \"Successfully completed reset.\"),\r\n    ['Account Unlock']=countif(OperationName == \"Unlock user account (self-service)\" and ResultDescription == \"Success\")\r\n    by startofweek(TimeGenerated)\r\n| render timechart\r\n    with (\r\n    ytitle=\"Count\",\r\n    xtitle=\"Day\",\r\n    title=\"Self Service Password Resets and Account Unlocks over time\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/5bebed89-44d1-4fa4-9396-954c5d22c8a4')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize legacy auth pivot table",
                "description": "Create a pivot table showing all your users who have signed in with legacy auth, which applications they are using (such as IMAP or ActiveSync) and the count of each",
                "body": "//Create a pivot table showing all your users who have signed in with legacy auth, which applications they are using (such as IMAP or ActiveSync) and the count of each\r\nSigninLogs\r\n| where TimeGenerated > ago(30d)\r\n| where ResultType == 0\r\n| where ClientAppUsed !in (\"Mobile Apps and Desktop clients\", \"Browser\")\r\n| where isnotempty(ClientAppUsed)\r\n| evaluate pivot(ClientAppUsed, count(), UserPrincipalName)",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/5cd331fc-9b3c-45e1-95f3-50e6a9fed61b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect label downgrade then copy to USB",
                "description": "Detects when a user downgrades a label on a file and that file is then copied to USB\n",
                "body": "// Detects when a user downgrades a label on a file and that file is then copied to USB\r\n// Timeframe = the time between the label downgrade and file copy event\r\nlet timeframe=4h;\r\nInformationProtectionEvents\r\n| where Time > ago(1d)\r\n| where Activity == \"DowngradeLabel\"\r\n| project LabelChangeTime=Time, User, FileDowngraded=ItemName\r\n| join kind=inner (\r\n    DeviceEvents\r\n    | where TimeGenerated > ago(1d)\r\n    | where ActionType == \"UsbDriveMounted\"\r\n    | extend DriveLetter = tostring(todynamic(AdditionalFields).DriveLetter)\r\n    | join kind=inner (DeviceFileEvents\r\n        | where TimeGenerated > ago(1d)\r\n        | project TimeGenerated, ActionType, FileName, FolderPath, DeviceId, DeviceName\r\n        | extend FileCopyTime = TimeGenerated\r\n        | where ActionType == \"FileCreated\"\r\n        | extend FileCopyName = FileName\r\n        | parse FolderPath with DriveLetter '\\\\' *\r\n        | extend DriveLetter = tostring(DriveLetter)\r\n        )\r\n        on DeviceId, DriveLetter) \r\n    on $left.FileDowngraded == $right.FileCopyName\r\n| project LabelChangeTime, FileCopyTime, FileDowngraded, DeviceName, AccountName\r\n| where (FileCopyTime - LabelChangeTime) between (0min .. timeframe)",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint",
                        "Information Protection"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/5d0b58dd-b769-4762-bd67-2f36c6359ac1')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find service principals failing to sign in",
                "description": "Finds service principals failing to sign in and adds an easy to read error message to why",
                "body": "AADServicePrincipalSignInLogs\r\n| where ResultType != \"0\"\r\n| extend ErrorDescription = case (\r\n    ResultType == \"7000215\", strcat(\"Invalid client secret is provided\"),\r\n    ResultType == \"7000222\", strcat(\"The provided client secret keys are expired\"),\r\n    ResultType == \"700027\", strcat(\"Client assertion failed signature validation\"),\r\n    ResultType == \"700024\", strcat(\"Client assertion is not within its valid time range\"),\r\n    ResultType == \"70021\", strcat(\"No matching federated identity record found for presented assertion\"),\r\n    ResultType == \"500011\", strcat(\"The resource principal named {name} was not found in the tenant named {tenant}\"),\r\n    ResultType == \"700082\", strcat(\"The refresh token has expired due to inactivity\"),\r\n    ResultType == \"90025\", strcat(\"Request processing has exceeded gateway allowance\"),\r\n    ResultType == \"500341\", strcat(\"The user account {identifier} has been deleted from the {tenant} directory\"),\r\n    ResultType == \"100007\", strcat(\"AAD Regional ONLY supports auth either for MSIs OR for requests from MSAL using SN+I for 1P apps or 3P apps in Microsoft infrastructure tenants\"),\r\n    ResultType == \"1100000\", strcat(\"Non-retryable error has occurred\"),\r\n    ResultType == \"90033\", strcat(\"A transient error has occurred. Please try again\"),\r\n    ResultType == \"53003\", strcat(\"Access has been blocked by Conditional Access policies. The access policy does not allow token issuance.\"),\r\n    \"Unknown\"\r\n    )\r\n| project\r\n    TimeGenerated,\r\n    ServicePrincipalName,\r\n    ServicePrincipalId,\r\n    ErrorDescription,\r\n    ResultType,\r\n    IPAddress",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/5db95b56-2365-460c-88c4-2ce607e90bfb')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Detect anomlous guest downloads",
                "description": "Detect anomalies in the amount of downloads from your Office 365 tenant by guest accounts and optionally visualize",
                "body": "//Detect anomalies in the amount of downloads from your Office 365 tenant by guest accounts.\r\n//Starttime and endtime = which period of data to look at, i.e from 21 days ago until today.\r\nlet startdate=21d;\r\nlet enddate=1d;\r\n//Timeframe = time period to break the data up into, i.e 1 hour blocks.\r\nlet timeframe=1h;\r\n//Sensitivity = the lower the number the more sensitive the anomaly detection is, i.e it will find more anomalies, default is 1.5\r\nlet sensitivity=2;\r\n//Threshold = set this to tune out low count anomalies, i.e when total downloads are only over 300 per hour\r\nlet threshold=300;\r\nlet outlierusers=\r\nOfficeActivity\r\n| where TimeGenerated between (startofday(ago(startdate))..startofday(ago(enddate)))\r\n| where Operation in (\"FileSyncDownloadedFull\",\"FileDownloaded\")\r\n| where UserId contains \"#EXT#\"\r\n| make-series GuestDownloads=count() on TimeGenerated from startofday(ago(startdate)) to startofday(ago(enddate)) step timeframe by UserId\r\n| extend outliers=series_decompose_anomalies(GuestDownloads, sensitivity)\r\n| mv-expand TimeGenerated, GuestDownloads, outliers\r\n| where outliers == 1 and GuestDownloads > threshold\r\n//Optionally visualize the anomalies - remove everything below this line to just retrieve the data instead of visualizing\r\n| distinct UserId;\r\nOfficeActivity\r\n| where TimeGenerated between (startofday(ago(startdate))..startofday(ago(enddate)))\r\n| where Operation in (\"FileSyncDownloadedFull\",\"FileDownloaded\")\r\n| where UserId contains \"#EXT#\"\r\n| where UserId in (outlierusers)\r\n| make-series GuestDownloads=count() default=0 on TimeGenerated from startofday(ago(startdate)) to startofday(ago(enddate)) step timeframe by UserId \r\n| render timechart with (ytitle=\"Download Count\",title=\"Anomalous Guest Downloads from Office 365\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/5e112e98-db48-4fcb-a588-8beac80b85b9')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Active Directory - Detect kerberos preauth changes",
                "description": "Detect when Kerberos preauthentication is enabled or disabled for a user",
                "body": "//Detect when Kerberos preauthentication is enabled or disabled for a user\r\nSecurityEvent\r\n| where EventID == 4738\r\n| where AccountType == \"User\"\r\n| where UserAccountControl has_any (\"2064\", \"2096\")\r\n| extend Action = case(UserAccountControl has \"2096\", strcat(\"Kerberos preauthentication disabled\"),\r\n    UserAccountControl has \"2064\", strcat(\"Kerberos preauthentication enabled\"),\r\n    \"unknown\")\r\n| project TimeGenerated, Actor=SubjectAccount, User=TargetAccount, Action",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Active Directory"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/5e21c3e0-7d79-43b0-b779-1acb7e2304ee')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Incidents - Visualize playbook interactions on Sentinel incidents",
                "description": "Visualize which playbooks are interacting with security incidents ",
                "body": "//Visualize which playbooks are interacting with security incidents\nlet timeframe=45d;\nSecurityIncident\n| where TimeGenerated > ago (timeframe)\n| where ModifiedBy startswith \"Playbook\"\n| summarize Count=count() by ModifiedBy\n| sort by Count desc \n| render barchart\n    with (\n    title=\"Count of playbooks interacting with Microsoft Sentinel incidents\",\n    ytitle=\"Playbook Name\")  ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Microsoft Sentinel Incidents"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/5e5f5ba2-2ff7-48d3-bb2d-d3429c27eb7d')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Intune - Visualize device last contact",
                "description": "Visualize when your devices last contacted Intune",
                "body": "//Visualize when your devices last contacted Intune\r\nIntuneDevices\r\n| where TimeGenerated > ago(90d)\r\n| where isnotempty(LastContact)\r\n//Retrieve latest record for each DeviceId\r\n| summarize arg_max(TimeGenerated, *) by DeviceId\r\n//Convert string to datetime format\r\n| extend LastContactTime = todatetime(LastContact)\r\n| project DeviceId, LastContactTime\r\n//Exclude devices reporting as 0001-01-01\r\n| where LastContactTime <> todatetime('0001-01-01T00:00:00Z')\r\n//Group by month and render chart\r\n| summarize ['Device Count']=count()by startofmonth(LastContactTime)\r\n| render columnchart with (title=\"Intune devices by last contact time\", xtitle=\"Month\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/5eae56a1-e49a-4a69-bb5c-836439586a11')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect cross-tenant setting added",
                "description": "Detect when another Azure AD tenant is added to cross-tenant settings and for each tenant added, retrieve any domain names from your sign in data.\n",
                "body": "//Detect when another Azure AD tenant is added to cross-tenant settings and for each tenant added, retrieve any domain names from your sign in data.\r\n//First retrieve the event where a cross-tenant setting was added\r\n| where TimeGenerated > ago(1d)\r\n| where OperationName == \"Add a partner to cross-tenant access setting\"\r\n| where Result == \"success\"\r\n| extend GuestTenantId = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].newValue)))\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| project TimeGenerated, OperationName, Actor, GuestTenantId\r\n//join back to Azure AD sign in logs for the last 30 days to retrieve inbound guest activity\r\n| join kind=inner (\r\n    SigninLogs\r\n    | where TimeGenerated > ago (180d)\r\n    | where UserType == \"Guest\"\r\n    | where ResultType == 0\r\n    | where AADTenantId != HomeTenantId and HomeTenantId != ResourceTenantId\r\n    //Split all the domains belonging to inbound guest domains and summarize the list per TenantId\r\n    | extend ['Guest Domains'] = split(UserPrincipalName, '@')[-1]\r\n    | summarize ['Guest Domain Names']=make_set(['Guest Domains']) by HomeTenantId)\r\n    //Join back to the audit even where the TenantId from the added setting matches the sign in data\r\n    on $left.GuestTenantId == $right.HomeTenantId\r\n| project-away HomeTenantId",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit",
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/5eb8eae0-547a-47fb-bbb7-1ecec2a74ce1')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find inactive privileged users",
                "description": "Find users who hold privileged Azure AD roles but haven't signed onto Azure for 30 days",
                "body": "//Find users who hold privileged Azure AD roles but haven't signed onto Azure for 30 days\r\nlet applications = dynamic([\"Azure Active Directory PowerShell\", \"Microsoft Azure PowerShell\", \"Graph Explorer\", \"ACOM Azure Website\", \"Azure Portal\", \"Azure Advanced Threat Protection\"]);\r\nIdentityInfo\r\n| where TimeGenerated > ago(21d)\r\n| where isnotempty(AssignedRoles)\r\n| project-rename UserPrincipalName=AccountUPN\r\n| where AssignedRoles != \"[]\"\r\n| summarize arg_max(TimeGenerated, *) by UserPrincipalName\r\n| join kind=leftanti (\r\n    SigninLogs\r\n    | where TimeGenerated > ago(30d)\r\n    | where AppDisplayName in (applications)\r\n    | where ResultType == \"0\"\r\n    )\r\n    on UserPrincipalName\r\n| project UserPrincipalName, AssignedRoles",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/5ed18257-780c-499a-9a05-3cb85158374e')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Summarize ASR audit hits",
                "description": "Summarize attack surface reduction audit hits for each device",
                "body": "//Summarize attack surface reduction audit hits for each device\r\nDeviceEvents\r\n| where TimeGenerated > ago (1d)\r\n| where ActionType startswith \"Asr\"\r\n| extend isAudit = tostring(AdditionalFields.IsAudit)\r\n| where isAudit = true\r\n| project\r\n    TimeGenerated,\r\n    ActionType,\r\n    DeviceName,\r\n    FileName,\r\n    InitiatingProcessAccountDomain,\r\n    InitiatingProcessAccountName,\r\n    InitiatingProcessCommandLine,\r\n    InitiatingProcessParentFileName,\r\n    ProcessTokenElevation\r\n| summarize\r\n    ['Total ASR audit hits']=count(),\r\n    ['Distinct ASR audit rule hits']=dcount(ActionType),\r\n    ['List of processes']=make_set(InitiatingProcessCommandLine)\r\n    by DeviceName\r\n| sort by ['Total ASR audit hits'] desc  ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/5ef90e7c-8a1e-4e62-aefd-10dc3d452816')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect application URI changes",
                "description": "Alert when the redirect URI list is changed for a service principal\n",
                "body": "//Alert when the redirect URI list is changed for a service principal\r\nAuditLogs\r\n| where OperationName == \"Update service principal\"\r\n| mv-expand TargetResources\r\n| extend modifiedProperties = parse_json(TargetResources).modifiedProperties\r\n| mv-expand modifiedProperties \r\n| where modifiedProperties.displayName == \"AppAddress\" \r\n| extend newValue = tostring(parse_json(modifiedProperties).newValue)\r\n| mv-expand todynamic(newValue)\r\n| extend RedirectURI = tostring(newValue.Address)\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| extend ['Service Principal Name'] = tostring(TargetResources.displayName)\r\n| summarize ['List of Redirect URIs']=make_list(RedirectURI) by Actor, ['Service Principal Name']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/5f216f79-516b-4eff-9e5d-59ca651e9b2b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Log Analytics - Visualize queries run against the Log Analytics workspace",
                "description": "Visualizes queries against your log analytics workspace categorized by users and service principals (such as playbooks or other automation)",
                "body": "//Visualizes queries against your log analytics workspace categorized by users and service principals\r\nlet timeframe=45d;\r\nLAQueryLogs\r\n| where TimeGenerated > ago (timeframe)\r\n| summarize Users=countif(isnotempty(AADEmail)), Playbooks=countif(isempty(AADEmail)) by bin(TimeGenerated, 1d)\r\n| render columnchart with (kind=unstacked, ytitle=\"Queries Run\", title=\"Queries Run - Users vs Playbooks\") ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Log Analytics"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/5f7a9964-04f1-47db-8420-616d47542571')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect when Bitlocker key read",
                "description": "//Detects when a BitLocker key is read in Azure AD and retrieves the device and key ids",
                "body": "//Detects when a BitLocker key is read in Azure AD and retrieves the device and key ids\r\nAuditLogs\r\n| where OperationName == \"Read BitLocker key\"\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| extend s = tostring(AdditionalDetails[0].value)\r\n| parse s with * \"ID: '\" KeyId \"'\" *\r\n| parse s with * \"device: '\" DeviceId \"'\"\r\n| project TimeGenerated, OperationName, Actor, KeyId, DeviceId",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/60553dbf-f25c-4790-8e5c-0a059b05f623')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect security log cleared",
                "description": "Detect when a user clears the security event log on one of your devices",
                "body": "//Detect when a user clears the security event log on one of your devices\r\nDeviceEvents\r\n| where ActionType == \"SecurityLogCleared\"\r\n| project\r\n    TimeGenerated,\r\n    DeviceName,\r\n    InitiatingProcessAccountDomain,\r\n    InitiatingProcessAccountName",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/61cf68f5-ea1f-4f55-8413-fa2650fea70f')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Summarize Smartscreen phishing domains",
                "description": "Summarize the domains that Smartscreen is blocking as phishing attempts",
                "body": "//Summarize the domains that Smartscreen is blocking as phishing attempts\r\nDeviceEvents\r\n| where TimeGenerated > ago (30d)\r\n| where ActionType startswith \"SmartScreen\"\r\n| extend SmartScreenExperience = tostring(AdditionalFields.Experience)\r\n| where AdditionalFields.Experience == \"Phishing\"\r\n| parse-where RemoteUrl with * '://' RemoteDomain '/' *\r\n| summarize Count=count()by RemoteDomain\r\n| sort by Count",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/62861bc1-21fa-40be-bacb-5405e7f04545')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Visualize guests added vs removed in Teams",
                "description": "Visualize guests added vs removed from Teams per day over the last 30 days",
                "body": "//Visualize guests added vs removed from Teams per day over the last 30 days\r\nOfficeActivity\r\n| where TimeGenerated > ago(30d)\r\n| where UserType == \"Regular\"\r\n| where CommunicationType == \"Team\"\r\n| where OfficeWorkload == \"MicrosoftTeams\" \r\n| where Operation in (\"MemberAdded\", \"MemberRemoved\")\r\n| mv-expand Members\r\n| extend User = tostring(Members.UPN)\r\n| where User contains \"#EXT#\"\r\n| project TimeGenerated, Operation, User\r\n| summarize\r\n    ['Guests Added']=countif(Operation == \"MemberAdded\"),\r\n    ['Guests Removed']=countif(Operation == \"MemberRemoved\")\r\n    by startofday(TimeGenerated)\r\n| render columnchart\r\n    with (\r\n    kind=unstacked,\r\n    xtitle=\"Count\",\r\n    ytitle=\"Day\",\r\n    title=\"Guests Added vs Removed from Teams\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit",
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/62a04f0a-13f4-465d-a65f-4b90e7e7f12e')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect first time PIM activation outside working hours",
                "description": "Detects when a user activates a PIM role for the first time on weekends or after working hours",
                "body": "//Detects when a user activates a PIM role for the first time on weekends or after working hours\r\nlet Saturday = time(6.00:00:00);\r\nlet Sunday = time(0.00:00:00);\r\nlet timeframe = 90d;\r\n//Find users who have previously activated PIM roles outside of business hours or on weekends in the last 90 days\r\n//In this example business hours are 6am to 6pm\r\nlet knownusers=\r\n    AuditLogs\r\n    | where TimeGenerated > ago(timeframe) and TimeGenerated < ago(7d)\r\n    // extend LocalTime to your time zone\r\n    | extend LocalTime=TimeGenerated + 5h\r\n    // Change hours of the day to suit your company, i.e this would find activations between 6pm and 6am\r\n    | where dayofweek(LocalTime) in (Saturday, Sunday) or hourofday(LocalTime) !between (6 .. 18)\r\n    | where OperationName == \"Add member to role completed (PIM activation)\"\r\n    | extend User = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    | distinct User;\r\n//Find users who activate a PIM role outside of business hours or on weekends for the first time in the last week\r\nAuditLogs\r\n| where TimeGenerated > ago(7d)\r\n| extend LocalTime=TimeGenerated + 5h\r\n| where dayofweek(LocalTime) in (Saturday, Sunday) or hourofday(LocalTime) !between (6 .. 18)\r\n| where OperationName == \"Add member to role completed (PIM activation)\"\r\n| extend ['Azure AD Role Name'] = tostring(TargetResources[0].displayName)\r\n| extend User = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| where User !in (knownusers)\r\n| project LocalTime, User, ['Azure AD Role Name'], ['Activation Reason']=ResultReason",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/63c70eb5-8477-44a1-baea-df6f572d9e17')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize guests vs external guests",
                "description": "Visualize signins from External Azure AD guests (those that belong to another Azure AD tenant) vs External Guests (such as Gmail) to your tenant",
                "body": "//Visualize signins from External Azure AD guests (those that belong to another Azure AD tenant) vs External Guests (such as Gmail) to your tenant\r\nSigninLogs\r\n| where TimeGenerated > ago (45d)\r\n| where UserType == \"Guest\"\r\n| summarize\r\n    ['External Guests']=countif(ResourceTenantId == HomeTenantId),\r\n    ['External Azure AD Guests']=countif(ResourceTenantId != HomeTenantId)\r\n    by bin(TimeGenerated, 1d)\r\n| render timechart with (title=\"External Azure AD Guests vs External Guests\", ytitle=\"Count\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/64033af2-66d1-4350-acff-92afa77e4e22')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Find devices no longer sending events",
                "description": "Find devices that have stopped sending network events over the last 30 days, retrieve last event time and calculate the days since last event",
                "body": "DeviceNetworkEvents\r\n| project TimeGenerated, DeviceName\r\n| where TimeGenerated > ago(365d)\r\n| summarize arg_max(TimeGenerated, DeviceName) by DeviceName\r\n| project DeviceName, ['Days Since Last Event'] = datetime_diff('day', now(), TimeGenerated), ['Last Event Time']=TimeGenerated\r\n| where ['Days Since Last Event'] > 30\r\n| sort by ['Days Since Last Event'] desc   ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint",
                        "Agent Health"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/648032d1-5113-4b41-a7ec-46f68ce43d35')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize inbound guest activity",
                "description": "Summarize the domain names, the count of users and list of users for each guest tenant connecting to your Azure AD tenant",
                "body": "\r\n//Summarize the domain names, the count of users and list of users for each guest tenant connecting to your Azure AD tenant\r\nSigninLogs\r\n| where TimeGenerated > ago (30d)\r\n| project\r\n    TimeGenerated,\r\n    UserPrincipalName,\r\n    HomeTenantId,\r\n    AADTenantId,\r\n    Id,\r\n    ResourceTenantId,\r\n    ResourceIdentity,\r\n    UserId\r\n| where UserId != \"00000000-0000-0000-0000-000000000000\"\r\n| where ResourceIdentity != ''\r\n| where HomeTenantId != ''\r\n| where HomeTenantId != AADTenantId\r\n| extend GuestDomain = split(UserPrincipalName, '@')[-1]\r\n| summarize\r\n    ['Guest Domain Names']=make_set(GuestDomain),\r\n    ['Distinct User Count']=dcount(UserPrincipalName),\r\n    ['List of Guest Users']=make_set(UserPrincipalName)\r\n    by HomeTenantId\r\n| sort by ['Distinct User Count'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/64fb616d-4d9c-4995-a0af-b58ff959b723')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Find potenital suspicious ports opened",
                "description": "Use the DeviceNetworkEvents to find what listening ports are being opened on a device and then query that list",
                "body": "//Use the DeviceNetworkEvents to find what listening ports are being opened on a device and then query that list\r\n//You can look for SSH, DNS etc being run from your end user devices\r\n//Microsoft Sentinel query\r\nDeviceNetworkEvents\r\n| where TimeGenerated > ago(7d)\r\n| where ActionType == \"ListeningConnectionCreated\"\r\n//Exclude high ports\r\n| where LocalPort < 1025\r\n| summarize ['Ports Opened']=make_set(LocalPort), ['Count of Ports Opened']=dcount(LocalPort) by DeviceName\r\n//Look for machines running services such as FTP, SSH, DNS etc\r\n| where ['Ports Opened'] has_any (\"21\",\"22\",\"53\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/672ad6b0-9c10-4962-ac96-71832e37e4bf')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Sec Events - Find lateral movement risky users",
                "description": "Use your Windows security log to find the users most at risk for lateral movement by finding those that have connected remotely to the most devices\n",
                "body": "//Use your Windows security log to find the users most at risk for lateral movement by finding those that have connected remotely to the most devices\r\nSecurityEvent\r\n| where TimeGenerated > ago (30d)\r\n| where EventID == \"4624\"\r\n| where LogonType == 10\r\n| where SubjectDomainName == TargetDomainName\r\n//Summarize total logins, distinct devices and then list all the devices each account has logged onto\r\n//Account is dropped to lower case to make sure each account is only listed once, i.e Reprise99 and reprise99 are combined\r\n| summarize\r\n    ['Total logon count']=count(),\r\n    ['Distinct device logon count']=dcount(Computer),\r\n    ['List of devices']=make_set(Computer)\r\n    by tolower(Account)\r\n| sort by ['Distinct device logon count'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Windows Security Events"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/67389da5-3da2-406b-93de-8e3303e8b89e')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize daily group additions",
                "description": "Create a daily summary of Azure Active Directory group additions",
                "body": "let timerange=7d;\r\nAuditLogs\r\n| where TimeGenerated > ago (timerange)\r\n| where OperationName == \"Add member to group\"\r\n| extend Type = tostring(TargetResources[0].type)\r\n| where Type == \"User\"\r\n| extend ['Group Name'] = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].newValue)))\r\n| extend UserAdded = tostring(TargetResources[0].userPrincipalName)\r\n| where isnotempty(UserAdded)\r\n| summarize ['Users Added']=make_set(UserAdded) by ['Group Name'], startofday(TimeGenerated)\r\n| sort by ['Group Name'] asc, TimeGenerated desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/6832b986-bc17-457f-a9cb-2dbb90f0e57d')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find guests accessing new apps",
                "description": "Find when inbound Azure AD guests access applications for the first time",
                "body": "//Find when inbound Azure AD guests access applications for the first time\r\n//First find applications that have previously had Azure AD guest signins\r\nlet knownapps=\r\n    SigninLogs\r\n    | where TimeGenerated > ago (90d) and TimeGenerated < ago(7d)\r\n    | where ResultType == 0\r\n    | where UserType == \"Guest\"\r\n//Include only inbound guests (guests accessing your tenant)\r\n    | where AADTenantId != HomeTenantId and HomeTenantId != ResourceTenantId\r\n    | distinct AppDisplayName;\r\n//Lookup signins from the last week and find guest sign ins to applications not on the known list\r\nSigninLogs\r\n| where TimeGenerated > ago (7d)\r\n| where ResultType == 0\r\n| where UserType == \"Guest\"\r\n| where AADTenantId != HomeTenantId and HomeTenantId != ResourceTenantId\r\n| where AppDisplayName !in (knownapps)\r\n//Summarize the access to those applications by time first seen and who is accessing each application\r\n| summarize\r\n    ['First Logon Time']=min(TimeGenerated),\r\n    ['Total Guest Signins']=count(),\r\n    ['Distinct Guest Signins']=dcount(UserPrincipalName),\r\n    ['List of Guest Users']=make_set(UserPrincipalName)\r\n    by AppDisplayName",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/68bfe1e6-c8bc-4976-bea4-a6878caa869e')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Security Alert - Visualize most popular phishing domains",
                "description": "Visualize the most popular weaponized domains in the phishing emails your users receive\n",
                "body": "//Visualize the most popular weaponized domains in the phishing emails your users receive\nSecurityAlert\n| where TimeGenerated > ago(365d)\n| where ProviderName == \"OATP\"\n| where AlertName in (\"Email messages containing malicious URL removed after delivery​\",\"Email messages containing phish URLs removed after delivery\")\n| mv-expand todynamic(Entities)\n| extend MaliciousURL = tostring(Entities.Url)\n| project MaliciousURL\n| parse-where MaliciousURL with * \"//\" ['Malicious Domain'] \"/\" *\n| summarize Count=count() by ['Malicious Domain']\n| sort by Count desc \n| render barchart  \n",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Security Alert"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/694b7cbb-b2b6-4df4-b849-8aa106f7d824')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect potential RDP brute force",
                "description": "Detect when the same IP attempts to brute force a remote connection or attempts to connect to multiple devices and fails over a short time period",
                "body": "//Detect when the same IP attempts to brute force a remote connection or attempts to connect to multiple devices and fails over a short time period\r\nDeviceLogonEvents\r\n| where TimeGenerated > ago (1d)\r\n| where LogonType == \"RemoteInteractive\"\r\n| where ActionType == \"LogonFailed\"\r\n| summarize\r\n    ['Count of logon attempts']=count(),\r\n    ['Count of distinct devices']=dcount(DeviceName),\r\n    ['List of devices']=make_set(DeviceName)\r\n    by RemoteIP, bin(TimeGenerated, 1h)\r\n| where ['Count of distinct devices'] >= 3 or ['Count of logon attempts'] >= 10",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/696b2d5d-2e3b-4f4e-808b-cb9d6cdd3390')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize risky sign in by percentage",
                "description": "Calculate the percentage of signins to all your Azure AD apps considered risky. Those requiring single factor authentication, coming from an unknown location and from an unknown device",
                "body": "//Calculate the percentage of signins to all your Azure AD apps considered risky. Those requiring single factor authentication, coming from an unknown location and from an unknown device\r\nSigninLogs\r\n| where TimeGenerated > ago (30d)\r\n| where ResultType == 0\r\n| extend DeviceTrustType = tostring(DeviceDetail.trustType)\r\n| summarize\r\n    ['Total Signins']=count(),\r\n    ['At Risk Signins']=countif(NetworkLocationDetails == '[]' and isempty(DeviceTrustType) and AuthenticationRequirement == \"singleFactorAuthentication\")\r\n    by AppDisplayName\r\n| extend ['At Risk Percentage']=(todouble(['At Risk Signins']) * 100 / todouble(['Total Signins']))",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/69dd9c36-199e-406d-9cd7-ed9b37433b04')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Sec Events - Find devices no longer sending logs",
                "description": "Find computers that have not sent any security events for over an hour",
                "body": "//Find computers that have not sent any security events for over an hour\r\nSecurityEvent\r\n| where TimeGenerated > ago (7d)\r\n| summarize ['Last Record Received']  = datetime_diff(\"minute\", now(), max(TimeGenerated)) by Computer\r\n| project Computer, ['Last Record Received']\r\n| where ['Last Record Received'] >= 60\r\n| order by ['Last Record Received'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Windows Security Events"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/6a8ca382-cc25-4fdd-8f7d-041b657b6364')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect SSPR initiated via Microsoft Graph",
                "description": "Detects when a successful self service password reset was triggered from Microsoft Graph. This could be evidence of abuse of Microsoft Graph to reset on premises Active Directory credentials.",
                "body": "//Detects when a self service password reset has been initiated via MS Graph and is successful\r\nAuditLogs\r\n| where OperationName == \"POST UserAuthMethod.ResetPasswordOnPasswordMethods\"\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| project TimeGenerated, OperationName, Actor, CorrelationId\r\n| join kind=inner\r\n    (AuditLogs\r\n    | where OperationName == \"Reset password (by admin)\"\r\n    | extend Target = tostring(TargetResources[0].userPrincipalName)\r\n    | where Result == \"success\"\r\n    )\r\n    on CorrelationId\r\n| project GraphPostTime=TimeGenerated, PasswordResetTime=TimeGenerated1, Actor, Target",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/6ac5087c-e6dd-4910-892f-d406a707a0f0')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "DCA - Detect mailbox forward created",
                "description": "Use the Defender for Cloud Apps logs to detect when a mail forward is created on a mailbox (not an individual mailbox rule). Retrieve the address the mail was forwarded to and whether is both stored and forwarded\n",
                "body": "//Use the Defender for Cloud Apps logs to detect when a mail forward is created on a mailbox (not an individual mailbox rule). Retrieve the address the mail was forwarded to and whether is both stored and forwarded\r\nCloudAppEvents\r\n| where ActionType == \"Set-Mailbox\"\r\n| extend UserId = tostring(RawEventData.UserId)\r\n| extend ForwardingSetting = tostring(parse_json(tostring(RawEventData.Parameters))[1].Name)\r\n| extend ForwardingAddress = tostring(parse_json(tostring(RawEventData.Parameters))[1].Value)\r\n| extend StoreandForward = tostring(parse_json(tostring(RawEventData.Parameters))[2].Name)\r\n| extend ['Email Stored and Forwarded'] = tostring(parse_json(tostring(RawEventData.Parameters))[2].Value)\r\n| where ForwardingSetting == \"ForwardingSmtpAddress\" and isnotempty(ForwardingAddress)\r\n| extend ['Forwarding Email Address']=split(ForwardingAddress, \":\")[-1]\r\n| project-away ForwardingSetting, StoreandForward\r\n| project\r\n    TimeGenerated,\r\n    UserId,\r\n    IPAddress, \r\n    ['Forwarding Email Address'], \r\n    ['Email Stored and Forwarded']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Cloud Apps"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/6ae21373-4dd7-4478-bdc8-d2471e26601b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find service principals with only expired secrets",
                "description": "Find any Azure AD Service Principals with only incorrect or expired secrets being used and no successful signins. These apps may no longer be in use and can be removed.\n",
                "body": "//Find any Azure AD Service Principals with only incorrect or expired secrets being used and no successful signins. These apps may no longer be in use and can be removed.\r\nAADServicePrincipalSignInLogs\r\n| where TimeGenerated > ago(14d)\r\n| summarize\r\n    ['All Error Codes']=make_set(ResultType)\r\n    by ServicePrincipalId, ServicePrincipalName\r\n| where ['All Error Codes'] !has \"0\" and ['All Error Codes'] has_any (\"7000222\", \"7000215\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/6b10f96e-3aa7-461f-b2fe-2a382a913058')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find any Azure AD bulk activities",
                "description": "List the bulk activities attempted by your privileged Azure AD users and parse the results\n",
                "body": "AuditLogs\r\n| where OperationName has_all (\"(bulk)\", \"finished\")\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| project TimeGenerated, Actor, ResultDescription, OperationName\r\n| parse ResultDescription with * \"Total activities count:\" ['Total Activity Count'] \";\" *\r\n| parse ResultDescription with * \"succeeded activities count\" ['Total Succeeded'] \";\" *\r\n| parse ResultDescription with * \"failed activities count\" ['Total Failed']\r\n| project\r\n    TimeGenerated,\r\n    Actor,\r\n    OperationName,\r\n    ['Total Activity Count'],\r\n    ['Total Succeeded'],\r\n    ['Total Failed'] ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/6b23ed01-e950-421f-9df2-a8cc26b1b5fb')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Summarize Office 365 downloads by Azure AD guests",
                "description": "Summarize the total count and the list of files downloaded by guests in your Office 365 tenant",
                "body": "//Summarize the total count and the list of files downloaded by guests in your Office 365 tenant\r\nlet timeframe=7d;\r\nOfficeActivity\r\n| where TimeGenerated > ago(timeframe)\r\n| where Operation in (\"FileSyncDownloadedFull\", \"FileDownloaded\")\r\n| where UserId contains \"#EXT#\"\r\n| summarize\r\n    ['Count of Downloads']=count(),\r\n    ['List of Files Downloaded']=make_set(OfficeObjectId)\r\n    by UserId\r\n| sort by ['Count of Downloads'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/6bd18d30-8b31-423b-baf3-508f30412ba1')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect admin changing authentication phone details",
                "description": "Detects when an admin changes the authentication phone details for another user",
                "body": "//Detects when an admin changes the authentication phone details for another user\r\nAuditLogs\r\n| where OperationName == \"Admin updated security info\"\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| extend Target = tostring(TargetResources[0].userPrincipalName)\r\n| extend ['New Phone Number'] = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[2].newValue)))\r\n| extend ['Old Phone Number'] = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[2].oldValue)))\r\n| project TimeGenerated, Actor, Target, ['New Phone Number'], ['Old Phone Number']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/6ca1b5fe-97bf-422e-bb15-677d9e50218f')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Active Directory - Detect when account set to not require password",
                "description": "Detect when an Active Directory account is set to password not required",
                "body": "SecurityEvent\r\n| project TimeGenerated, EventID, TargetAccount, SubjectAccount, UserAccountControl\r\n| where EventID == \"4738\"\r\n| where UserAccountControl has (\"2082\")\r\n| extend Activity = strcat(\"Account set to password not required\")\r\n| project TimeGenerated, Target=TargetAccount, Actor=SubjectAccount, Activity",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Active Directory"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/6e13c738-5570-4662-9803-46c87114604f')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Detect potential business email compromise",
                "description": "Find senders that are potentially spamming your users for the first time. Useful at detecting business email compromise from partner companies.",
                "body": "//Find senders that are potentially spamming your users for the first time. Useful at detecting business email compromise from partner companies.\r\n//Set a threshold of the same email being received within a 10 minute period\r\n//Microsoft Sentinel query\r\nlet threshold = 500;\r\n//First create a list of sender addresses that have previously sent you bulk email, hopefully this will let us exclude corporate communications and newsletters etc\r\nlet knownbulkemail=\r\n    EmailEvents\r\n    | where TimeGenerated > ago(30d) and TimeGenerated < ago (1d)\r\n    | project TimeGenerated, EmailDirection, DeliveryAction, RecipientEmailAddress, SenderFromAddress, Subject\r\n    | where EmailDirection == \"Inbound\"\r\n    | where DeliveryAction == \"Delivered\"\r\n    | summarize RecipientCount=dcount(RecipientEmailAddress) by SenderFromAddress, Subject, bin(TimeGenerated, 10m)\r\n    | where RecipientCount > threshold\r\n    | distinct SenderFromAddress;\r\n//Look in the last hour for any new senders that have sent over the threshold in a 10 minute period\r\nEmailEvents\r\n| where TimeGenerated > ago(1d)\r\n| project TimeGenerated, EmailDirection, DeliveryAction, RecipientEmailAddress, SenderFromAddress, Subject\r\n| where EmailDirection == \"Inbound\"\r\n| where DeliveryAction == \"Delivered\"\r\n| summarize RecipientCount=dcount(RecipientEmailAddress) by SenderFromAddress, Subject, bin(TimeGenerated, 10m)\r\n| where SenderFromAddress !in (knownbulkemail) and RecipientCount > threshold",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/6f68a08b-fe12-44af-888f-abcff52397e3')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Summarize ASR activity",
                "description": "Provides a summary of Attack Surface Reduction rules, which ASR rules are being hit and by which processes",
                "body": "//Provides a summary of Attack Surface Reduction rules, which ASR rules are being hit and by which processes\r\nDeviceEvents\r\n| where TimeGenerated > ago(30d)\r\n| where ActionType startswith \"Asr\"\r\n| where isnotempty(InitiatingProcessCommandLine)\r\n| summarize ['ASR Hit Count']=count()by ActionType, InitiatingProcessCommandLine\r\n| sort by ['ASR Hit Count'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/6fcd5cdd-eff4-472e-959f-6e632a2440f0')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Intune - Detect remote wipe",
                "description": "When an Intune admin initiates a remote wipe of a managed device, retrieve all the relevant information about the device",
                "body": "//When an Intune admin initiates a remote wipe of a managed device, retrieve all the relevant information about the device\r\nIntuneAuditLogs\r\n| where TimeGenerated > ago (1d)\r\n| where OperationName == \"wipe ManagedDevice\"\r\n| extend DeviceId = tostring(parse_json(tostring(parse_json(Properties).TargetObjectIds))[0])\r\n| project TimeGenerated, Actor=Identity, DeviceId\r\n| join kind=inner(\r\n    IntuneDevices\r\n//Go back 7 days to make sure we have information on the device and retrieve the lastest record\r\n    | where TimeGenerated > ago(7d)\r\n    | summarize arg_max(TimeGenerated, *) by DeviceId\r\n    )\r\n    on DeviceId\r\n| project\r\n    TimeGenerated,\r\n    Actor,\r\n    DeviceId,\r\n    Model,\r\n    SerialNumber,\r\n    OS,\r\n    PrimaryUser=UserEmail,\r\n    Ownership,\r\n    ManagedBy,\r\n    LastContact",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Intune"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/70696f95-977e-4ff1-91dd-6a5ca9ec6807')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find inactive service principals with privilege",
                "description": "Find any Azure AD service principals that have been granted any .All access in the last year that haven't signed in for 30 days. May include already deleted service principals.\n",
                "body": "//Find any Azure AD service principals that have been granted any .All access in the last year that haven't signed in for 30 days. May include already deleted service principals.\r\nlet delegatedaccess=\r\n    AuditLogs\r\n    | where TimeGenerated > ago(365d)\r\n    | where OperationName has \"Add delegated permission grant\"\r\n    | extend x = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].newValue)))\r\n    | extend ['Permissions granted'] = split(x, ' ')\r\n    | extend ServicePrincipalId = tostring(TargetResources[1].id)\r\n    | extend ['Permission type'] = strcat(\"Delegated\")\r\n    | summarize arg_max(TimeGenerated, *) by ServicePrincipalId\r\n    | project\r\n        TimeGenerated,\r\n        ['Permission type'],\r\n        ['Permissions granted'],\r\n        ServicePrincipalId;\r\nlet appaccess=\r\n    AuditLogs\r\n    | where TimeGenerated > ago(365d)\r\n    | where OperationName has \"Add app role assignment to service principal\"\r\n    | extend x = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].newValue)))\r\n    | extend ['Permissions granted'] = split(x, ' ')\r\n    | extend ['Permission type'] = strcat(\"Application\")\r\n    | extend ServicePrincipalId = tostring(TargetResources[1].id)\r\n    | summarize arg_max(TimeGenerated, *) by ServicePrincipalId\r\n    | project\r\n        TimeGenerated,\r\n        ServicePrincipalId,\r\n        ['Permission type'],\r\n        ['Permissions granted'];\r\nunion delegatedaccess, appaccess\r\n| where ['Permissions granted'] contains \".All\"\r\n| distinct ServicePrincipalId\r\n| join kind=leftanti (\r\n    AADServicePrincipalSignInLogs\r\n    | where TimeGenerated > ago (30d)\r\n    | where ResultType == \"0\"\r\n    | distinct ServicePrincipalName, ServicePrincipalId)\r\n    on ServicePrincipalId\r\n",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/70887a96-e126-4938-9aa2-52726e3f0a71')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize signs by device trust type",
                "description": "Visualize sign in attempts to your Azure AD tenant by device trust type",
                "body": "//Visualize sign in attempts to your Azure AD tenant by device trust type\r\nSigninLogs\r\n| where TimeGenerated > ago(30d)\r\n| extend DeviceTrustType = tostring(DeviceDetail.trustType)\r\n| extend ['Trust Type']=case(isnotempty(DeviceTrustType), strcat=DeviceTrustType,\r\n    isempty(DeviceTrustType), strcat=\"Untrusted\",\r\n    \"unknown\")\r\n| summarize Count=count()by ['Trust Type'], bin(TimeGenerated, 1d)\r\n| render timechart with (title=\"Signins to Azure AD by trust type\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/7092d8e1-2da0-4f6b-b0e3-7ec8caaf8c13')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect when access is granted to a service principal",
                "description": "Detect when either application or delegated access is granted to a service principal in Azure AD",
                "body": "//Detect when either application or delegated access is granted to a service principal in Azure AD\r\nlet delegatedaccess=\r\n    AuditLogs\r\n    | where OperationName has \"Add delegated permission grant\"\r\n    | extend x = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].newValue)))\r\n    | extend ['Permissions granted'] = split(x, ' ')\r\n    | extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    | extend ['Service Principal ObjectId'] = tostring(TargetResources[1].id)\r\n    | extend Activity = strcat(\"Delegated access added to application\")\r\n    | project\r\n        TimeGenerated,\r\n        Activity,\r\n        ['Permissions granted'],\r\n        ['Service Principal ObjectId'],\r\n        Actor;\r\nlet appaccess=\r\n    AuditLogs\r\n    | where OperationName has \"Add app role assignment to service principal\"\r\n    | extend x = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].newValue)))\r\n    | extend ['Permissions granted'] = split(x, ' ')\r\n    | extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    | extend Activity = strcat(\"Application access added to application\")\r\n    | extend ['Service Principal ObjectId'] = tostring(TargetResources[1].id)\r\n    | project\r\n        TimeGenerated,\r\n        Activity,\r\n        ['Permissions granted'],\r\n        ['Service Principal ObjectId'],\r\n        Actor;\r\nunion delegatedaccess, appaccess",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/73193761-072a-4808-97c0-71bbb506996c')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect RDP recon",
                "description": "Search for devices connecting to multiple IP addresses via RDP witin a time window and alert when over a particular threshold\n",
                "body": "//Search for devices connecting to multiple IP addresses via RDP witin a time window and alert when over a particular threshold\r\nlet timerange=1d;\r\nlet window=20m;\r\nlet threshold=5;\r\nDeviceNetworkEvents\r\n| where TimeGenerated > ago(timerange)\r\n| where ActionType == \"ConnectionSuccess\"\r\n| where RemotePort == \"3389\"\r\n// Exclude Defender for Identity which uses RDP to map your network\r\n| where InitiatingProcessFileName <> \"Microsoft.Tri.Sensor.exe\"\r\n| summarize ['Target Device List']=make_set(RemoteIP), ['Count of Devices']=dcount(RemoteIP) by bin(TimeGenerated, window), DeviceName\r\n| where ['Count of Devices'] > threshold\r\n| sort by ['Count of Devices'] desc",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/731c0a32-7e61-4c14-802f-f917e1a2a1ce')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize MFA failure reasons",
                "description": "Summarize the count of the various types of MFA failures (such as user not responding, invalid codes, user declining the authentication)",
                "body": "//Summarize the count of the various types of MFA failures (such as user not responding, invalid codes, user declining the authentication)\r\nSigninLogs\r\n| where TimeGenerated > ago (90d)\r\n| where ResultType == \"500121\"\r\n| mv-expand todynamic(AuthenticationDetails)\r\n| project AuthenticationDetails, ResultType\r\n| extend ['MFA Failure Type'] = tostring(parse_json(AuthenticationDetails).authenticationStepResultDetail)\r\n| where ['MFA Failure Type'] startswith \"MFA denied\"\r\n| summarize Count=count()by ['MFA Failure Type']\r\n| sort by Count",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/750b743d-4e89-4569-a56f-1ba55e9dd5d0')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Incidents - Visualize incident severity per month",
                "description": "Visualize the severity of your Microsoft Sentinel incidents per month",
                "body": "//Visualize the severity of your Microsoft Sentinel incidents per month\r\nSecurityIncident\r\n| where TimeGenerated > ago(365d)\r\n| summarize Count=dcount(IncidentNumber)by Severity, startofmonth(TimeGenerated)\r\n| render columnchart with (kind=unstacked, title=\"Microsoft Sentinel Incident Severity\", xtitle=\"Month\") ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Microsoft Sentinel Incidents"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/752622b6-d93a-4779-9270-50783745cada')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect certutil public connections",
                "description": "//Detects when certutil is used to connect to a public IP. This could indicate abuse of cert util, see - https://www.avira.com/en/blog/certutil-abused-by-attackers-to-spread-threats\n",
                "body": "//Detects when certutil is used to connect to a public IP. This could indicate abuse of cert util, see - https://www.avira.com/en/blog/certutil-abused-by-attackers-to-spread-threats\r\nDeviceNetworkEvents\r\n| where TimeGenerated > ago (7d)\r\n| project\r\n    TimeGenerated,\r\n    DeviceName,\r\n    InitiatingProcessAccountName,\r\n    InitiatingProcessCommandLine,\r\n    LocalIPType,\r\n    LocalIP,\r\n    RemoteIPType,\r\n    RemoteIP,\r\n    RemoteUrl,\r\n    RemotePort\r\n| where InitiatingProcessCommandLine contains \"certutil\"\r\n| where RemoteIPType == \"Public\"",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/75a138a4-6677-4cdb-8ec3-454e36c7e70c')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Visualize uploads vs downloads per day",
                "description": "Visualize uploads vs downloads in your Office 365 tenant per day\n",
                "body": "//Visualize uploads vs downloads in your Office 365 tenant per day\r\nOfficeActivity\r\n| where TimeGenerated > ago(30d)\r\n| project TimeGenerated, Operation\r\n| where Operation in (\"FileSyncDownloadedFull\", \"FileSyncUploadedFull\", \"FileDownloaded\", \"FileUploaded\")\r\n| summarize\r\n    ['Files Downloaded']=countif(Operation in (\"FileDownloaded\", \"FileSyncDownloadedFull\")),\r\n    ['Files Uploaded']=countif(Operation in (\"FileSyncUploadedFull\", \"FileUploaded\"))\r\n    by startofday(TimeGenerated)\r\n| render columnchart\r\n    with (\r\n    kind=unstacked,\r\n    title=\"Downloads vs Uploads in Office 365\",\r\n    ytitle=\"Count\",\r\n    xtitle=\"Day\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/75b9546b-6b25-4770-9dc1-a810c82359e7')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize the most popular domains that have redeemed invites",
                "description": "Visualize the most popular domains that have redeemed invites to your Azure AD tenant over the last 30 days.\n",
                "body": "//Visualize the most popular domains that have redeemed invites to your Azure AD tenant over the last 30 days.\r\nAuditLogs\r\n| where TimeGenerated > ago(30d)\r\n| where OperationName == \"Redeem external user invite\"\r\n| extend GuestEmail = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| extend ['User Domain'] = tostring(split(GuestEmail, \"@\")[1])\r\n| where isnotempty(['User Domain'])\r\n| summarize Count=count()by ['User Domain']\r\n| sort by Count desc \r\n| render barchart",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/77283f80-e95c-4180-b85a-5ce5c70b6ac4')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize types of MFA used",
                "description": "Visualize the MFA types used by your users, i.e text message, mobile app notification, verification code",
                "body": "//Visualize the MFA types used by your users, i.e text message, mobile app notification, verification code\nSigninLogs\n| where TimeGenerated > ago (30d)\n| where AuthenticationRequirement == \"multiFactorAuthentication\"\n| project AuthenticationDetails\n| extend ['MFA Method'] = tostring(parse_json(AuthenticationDetails)[1].authenticationMethod)\n| summarize Count=count()by ['MFA Method']\n| where ['MFA Method'] != \"Previously satisfied\" and isnotempty(['MFA Method'])\n| sort by Count desc\n| render barchart with (title=\"Types of MFA Methods used\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins",
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/782a5ecc-4ef5-4a70-bbfe-1f5a88a6f689')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect when a guest is added to an Azure AD role",
                "description": "Detects when an Azure AD guest is added to an Azure AD role\n",
                "body": "//Detects when an Azure AD guest is added to an Azure AD role\r\nAuditLogs\r\n| where OperationName == \"Add member to role\"\r\n| extend Target = tostring(TargetResources[0].userPrincipalName)\r\n| extend RoleAdded = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].newValue)))\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| where Target contains \"#ext#\"\r\n| project TimeGenerated, OperationName, Actor, Target, RoleAdded",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/786175fd-b95b-45c9-a710-51282e0627c9')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect service principal new IP address",
                "description": "Detect when an Azure AD service principal signs in from an IP previously not seen",
                "body": "//Detect when an Azure AD service principal signs in from an IP previously not seen\r\nAADServicePrincipalSignInLogs\r\n| where TimeGenerated > ago(180d) and TimeGenerated < ago(7d)\r\n| distinct AppId, IPAddress\r\n| join kind=rightanti\r\n    (\r\n    AADServicePrincipalSignInLogs\r\n    | where TimeGenerated > ago(7d)\r\n    | project TimeGenerated, AppId, IPAddress, ResultType, ServicePrincipalName\r\n    )\r\n    on IPAddress\r\n| where ResultType == \"0\"\r\n| distinct ServicePrincipalName, AppId, IPAddress",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/7975f823-a7f9-49c5-a486-6b981a8f0dab')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "DCA - Detect and summarize password spray",
                "description": "When Defender for Cloud Apps detects password spray activity, summarize the impact to your users",
                "body": "//When Defender for Cloud Apps detects password spray activity, summarize the impact to your users\r\nlet failureCodes = dynamic([50053, 50126, 50055]);\r\nlet successCodes = dynamic([0, 50055, 50057, 50155, 50105, 50133, 50005, 50076, 50079, 50173, 50158, 50072, 50074, 53003, 53000, 53001, 50129]);\r\n//Using the Security Alert table find any IP addresses associated with password spray activity. This query looks back 7 days to find alerts as this can be an offline detection, but you can adjust.\r\n//Microsoft Sentinel query\r\nlet maliciousip=\r\n    SecurityAlert\r\n    | where TimeGenerated > ago (7d)\r\n    | where AlertName == \"Activity from a password-spray associated IP address\"\r\n    | mv-expand todynamic(Entities)\r\n    | project TimeGenerated, Entities\r\n    | extend IPAddress = tostring(Entities.Address)\r\n    | where isnotempty(IPAddress)\r\n    | distinct IPAddress;\r\n//Look back in your signin logs the last 30 days and summarize activity from that address\r\nSigninLogs\r\n| where TimeGenerated > ago(30d)\r\n| where IPAddress in (maliciousip)\r\n| summarize\r\n    ['Count of distinct successful sign ins'] = dcountif(UserPrincipalName, (ResultType in(successCodes))),\r\n    ['List of successful users']=make_set_if(UserPrincipalName, (ResultType in(successCodes))),\r\n    ['Successful result codes'] = make_set_if(ResultType, (ResultType in(successCodes))),\r\n    ['Count of distinct failed sign ins'] = dcountif(UserPrincipalName, (ResultType in(failureCodes))),\r\n    ['List of failed users'] = make_set_if(UserPrincipalName, (ResultType in(failureCodes))),\r\n    ['Failed result codes'] = make_set_if(ResultType, (ResultType in(failureCodes)))\r\n    by IPAddress",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Cloud Apps",
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/798c4b1a-a449-44e4-a373-eb05cbde4263')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find new privileged actions",
                "description": "Find new operations completed by your privileged Azure AD users not seen before",
                "body": "//Find new operations completed by your privileged Azure AD users not seen before\r\n//Lookup the IdentityInfo table for any users holding a privileged role\r\nlet privusers=\r\n    IdentityInfo\r\n    | where TimeGenerated > ago(21d)\r\n    | summarize arg_max(TimeGenerated, *) by AccountUPN\r\n    | where isnotempty(AssignedRoles)\r\n    | where AssignedRoles != \"[]\"\r\n    | distinct AccountUPN;\r\n//Find actions taken by those users previously\r\nAuditLogs\r\n| where TimeGenerated > ago(90d) and TimeGenerated < ago(1d)\r\n| extend UserPrincipalName = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| where isnotempty(UserPrincipalName)\r\n| where UserPrincipalName in (privusers)\r\n| distinct UserPrincipalName, OperationName\r\n//Find any new actions taken in the last day not seen before from that user\r\n| join kind=rightanti (\r\n    AuditLogs\r\n    | where TimeGenerated > ago(1d)\r\n    | extend UserPrincipalName = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    | where UserPrincipalName in (privusers)\r\n    | where isnotempty(UserPrincipalName)\r\n    )\r\n    on UserPrincipalName, OperationName\r\n| project TimeGenerated, UserPrincipalName, OperationName, Category, CorrelationId",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/7a42485d-cfa0-47ed-a3d2-8a0e78912603')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Security Alert - Detect clients querying suspicious domain",
                "description": "When a domain is flagged by Defender for Cloud (Azure Security Center) as suspicious then find any other clients that have queried that domain in DNS events\n",
                "body": "//When a domain is flagged by Defender for Cloud (Azure Security Center) as suspicious then find any other clients that have queried that domain in DNS events\nlet suspiciousurl=\nSecurityAlert\n| where AlertName startswith \"Communication with suspicious random domain name\"\n| mv-expand todynamic(Entities)\n| project Entities\n| extend SuspiciousURL = tostring(Entities.DomainName)\n| where isnotempty(SuspiciousURL)\n| distinct SuspiciousURL;\n    DnsEvents\n    | where QueryType == \"A\"\n    | project Name, ClientIP\n    | where Name in (suspiciousurl)\n| summarize ['Client IPs']=make_set(ClientIP) by Name",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "DNS",
                        "Security Alert"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/7c0d3f96-7210-4974-9ea3-b916c1dda96c')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "DCA - Detect and summarize suspicious mailbox IP",
                "description": "When Defender for Cloud Apps detects a suspicious mailbox rule created, take that IP address and summarize sign in events for that user and IP address for the last 30 days.\n",
                "body": "//When Defender for Cloud Apps detects a suspicious mailbox rule created, take that IP address and summarize sign in events for that user and IP address for the last 30 days.\r\n//If they have only signed in a few times from that IP it may a sign the account has been compromised and a threat actor has added mailbox rule\r\nlet failureCodes = dynamic([50053, 50126, 50055]);\r\nlet successCodes = dynamic([0, 50055, 50057, 50155, 50105, 50133, 50005, 50076, 50079, 50173, 50158, 50072, 50074, 53003, 53000, 53001, 50129]);\r\nSecurityAlert\r\n| where TimeGenerated > ago(1d)\r\n| where AlertName == \"Suspicious inbox manipulation rule\"\r\n| extend IPAddress = tostring(parse_json(ExtendedProperties).[\"IP Addresses\"])\r\n| project ['Alert Time']=TimeGenerated, Description, IPAddress, UserPrincipalName=CompromisedEntity\r\n| join kind=inner(\r\n    SigninLogs\r\n    | where TimeGenerated > ago (30d)\r\n    )\r\n    on UserPrincipalName, IPAddress\r\n| project\r\n    TimeGenerated,\r\n    ['Alert Time'],\r\n    Description,\r\n    ResultType,\r\n    UserPrincipalName,\r\n    IPAddress,\r\n    NetworkLocationDetails\r\n| summarize\r\n    ['Count of successful sign ins from MFA IP Address'] = countif(ResultType in(successCodes)),\r\n    ['Count of failed sign ins from MFA IP Address'] = countif(ResultType in(failureCodes))\r\n    by UserPrincipalName, Description, IPAddress, NetworkLocationDetails, ['Alert Time']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Security Alert",
                        "Defender for Cloud Apps",
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/7c6f3a83-7562-4ecd-80e5-45b842f5c78a')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find apps with more guests than users accessing",
                "description": "Find Azure AD applications that have more guests than members accessing them",
                "body": "//Find Azure AD applications that have more guests than members accessing them\r\nSigninLogs\r\n| where TimeGenerated > ago(30d)\r\n| where ResultType == \"0\"\r\n| summarize Guests=dcountif(UserPrincipalName,UserType == \"Guest\"), Members=dcountif(UserPrincipalName,UserType == \"Member\") by AppDisplayName\r\n| where Guests > Members\r\n| sort by Guests desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/7dda2c47-09ca-4fd7-895f-0e58cd70226b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect new PIM role activated",
                "description": "Detect when a user activates an Azure AD PIM role never seen by them before",
                "body": "//Detect when a user activates an Azure AD PIM role never seen by them before\r\nAuditLogs\r\n| where TimeGenerated > ago(180d) and TimeGenerated < ago(1d)\r\n| where OperationName == \"Add member to role completed (PIM activation)\"\r\n| extend User = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| extend ['Azure AD Role Name'] = tostring(TargetResources[0].displayName)\r\n| distinct User, ['Azure AD Role Name']\r\n| join kind=rightanti (\r\n    AuditLogs\r\n    | where TimeGenerated > ago(1d)\r\n    | where OperationName == \"Add member to role completed (PIM activation)\"\r\n    | extend User = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    | extend ['Azure AD Role Name'] = tostring(TargetResources[0].displayName)\r\n    )\r\n    on User, ['Azure AD Role Name']\r\n| extend IPAddress = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)\r\n| project TimeGenerated, User, ['Azure AD Role Name']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/7eb2c70e-8f17-4840-92c8-2395f441976b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Summarize local logon activity",
                "description": "Summarize the local (non domain) logon activity for your devices for both successful and failed logons. You may have users using a local account to bypass security policy\n",
                "body": "//Summarize the local (non domain) logon activity for your devices for both successful and failed logons. You may have users using a local account to bypass security policy\r\nDeviceLogonEvents\r\n| where TimeGenerated > ago(30d)\r\n//Find logons where AccountDomain == DeviceName indicating a local logon\r\n| where AccountDomain == DeviceName\r\n| where AdditionalFields.IsLocalLogon == true\r\n| where LogonType == \"Interactive\"\r\n| where RemoteIPType != \"Loopback\"\r\n| summarize\r\n    ['Count of successful local logon attempts']=countif(ActionType == \"LogonSuccess\"),\r\n    ['Distinct count of successful local logon attempts']=dcountif(AccountName, ActionType == \"LogonSuccess\"),\r\n    ['List of succesful local account logons']=make_set_if(AccountName, ActionType == \"LogonSuccess\"),\r\n    ['Count of failed local logon attempts']=countif(ActionType == \"LogonFailed\"),\r\n    ['Distinct count of failed local logon attempts']=dcountif(AccountName, ActionType == \"LogonFailed\"),\r\n    ['List of failed local account logons']=make_set_if(AccountName, ActionType == \"LogonFailed\")\r\n    by DeviceName\r\n| project-reorder\r\n    DeviceName,\r\n    ['Count of successful local logon attempts'],\r\n    ['Distinct count of successful local logon attempts'],\r\n    ['List of succesful local account logons'],\r\n    ['Count of failed local logon attempts'],\r\n    ['Distinct count of failed local logon attempts'],\r\n    ['List of failed local account logons']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/800b9a68-add1-4658-800b-3a6ce0393c58')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Summarize ASR rules by device",
                "description": "Summarize the machines in your environment that are triggering the most total ASR and distinct ASR rule events",
                "body": "//Summarize the machines in your environment that are triggering the most total ASR and distinct ASR rule events\r\nDeviceEvents\r\n| where TimeGenerated > ago (30d)\r\n| where ActionType startswith \"Asr\"\r\n| summarize\r\n    ['Total ASR hit count']=count(),\r\n    ['Distinct ASR rules count']=dcount(ActionType),\r\n    ['List of ASR rules triggered']=make_set(ActionType),\r\n    ['List of processess triggering ASR']=make_set(InitiatingProcessCommandLine)\r\n    by DeviceName\r\n| sort by ['Total ASR hit count'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/807eab9b-42f6-481e-8b21-12bff0e501cf')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Find new events",
                "description": "Find any new DeviceEvents found in your environment over the last week compared to the last 6 months\n",
                "body": "//Find any new DeviceEvents found in your environment over the last week compared to the last 6 months\r\n//First find existing action types over the six months\r\nlet knownevents=\r\n    DeviceEvents\r\n    | where TimeGenerated > ago (180d) and TimeGenerated < ago(7d)\r\n    | distinct ActionType;\r\n//Find new action types in the last week, the time they were first seen and how many counts seen this week\r\nDeviceEvents\r\n| where TimeGenerated > ago(7d)\r\n| where ActionType !in (knownevents)\r\n| summarize ['First Time Seen']=min(TimeGenerated), Count=count() by ActionType\r\n| sort by Count desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/808c62cf-c987-4b4d-8e00-9759c60fb08d')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize activity from particular country",
                "description": "Summarize sign in activity from a particular country or countries to your tenant over the last week",
                "body": "//Summarize sign in activity from a particular country or countries to your tenant over the last week\r\nlet failureCodes = dynamic([50053, 50126, 50055]);\r\nlet successCodes = dynamic([0, 50055, 50057, 50155, 50105, 50133, 50005, 50076, 50079, 50173, 50158, 50072, 50074, 53003, 53000, 53001, 50129]);\r\nSigninLogs\r\n| where TimeGenerated > ago(7d)\r\n//Choose a country code, you could do multiples with | where Location in (\"AU\",\"US\")\r\n| where Location == \"RU\"\r\n| extend ['Full Location'] = strcat(LocationDetails.countryOrRegion, '|', LocationDetails.state, '|', LocationDetails.city)\r\n| where ResultType in(successCodes) or ResultType in(failureCodes)\r\n| summarize\r\n    ['Count of distinct successful sign ins'] = dcountif(UserPrincipalName, (ResultType in(successCodes))),\r\n    ['List of successful users']=make_set_if(UserPrincipalName, (ResultType in(successCodes))),\r\n    ['Successful result codes'] = make_set_if(ResultType, (ResultType in(successCodes))),\r\n    ['Count of distinct failed sign ins'] = dcountif(UserPrincipalName, (ResultType in(failureCodes))),\r\n    ['List of failed users'] = make_set_if(UserPrincipalName, (ResultType in(failureCodes))),\r\n    ['Failed result codes'] = make_set_if(ResultType, (ResultType in(failureCodes)))\r\n    by ['Full Location'], IPAddress",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/80f87378-7ef4-4376-8edd-b5d161d2a0f3')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Summarize data ingestion by device",
                "description": "Calculate the size of the combined Device* tables from Defender for Endpoint by device name",
                "body": "//Calculate the size of the combined Device* tables from Defender for Endpoint by device name\r\nunion withsource=_TableName Device*\r\n| where TimeGenerated > ago(7d)\r\n| summarize\r\n    Entries = count(), Size = sum(_BilledSize)\r\n    by DeviceName\r\n| project\r\n    ['Device Name'] = DeviceName,\r\n    ['Table Size'] = Size,\r\n    ['Table Entries'] = Entries,\r\n    ['Size per Entry'] = 1.0 * Size / Entries\r\n| order by ['Table Size']  desc",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/827a0d29-a34b-4cfa-a023-a32d89fe7746')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find user agent strings",
                "description": "Parses the user agent into its various components to allow hunting on specific browser versions or patch levels",
                "body": "//Parses the user agent into its various components to allow hunting on specific browser versions or patch levels\r\nSigninLogs\r\n| extend UserAgentDetail = todynamic(parse_user_agent(UserAgent, \"browser\"))\r\n| extend UserAgentFamily = tostring(parse_json(tostring(UserAgentDetail.Browser)).Family)\r\n| extend UserAgentMajorVersion = toint(parse_json(tostring(UserAgentDetail.Browser)).MajorVersion)\r\n| extend UserAgentMinorVersion = toint(parse_json(tostring(UserAgentDetail.Browser)).MinorVersion)\r\n| extend UserAgentPatch = toint(parse_json(tostring(UserAgentDetail.Browser)).Patch)\r\n| project\r\n    TimeGenerated,\r\n    UserPrincipalName,\r\n    AppDisplayName,\r\n    ResultType,\r\n    IPAddress,\r\n    Location,\r\n    UserAgentFamily,\r\n    UserAgentMajorVersion,\r\n    UserAgentMinorVersion,\r\n    UserAgentPatch,\r\n    UserAgent",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/82c3f413-58a2-44b6-bde4-984a5383f661')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect risk event followed by MFA changes",
                "description": "Detects when a user flags an Azure AD risk event followed by changes to their MFA profile - potentially detecting a bad actor changing MFA details\n",
                "body": "// Detects when a user flags an Azure AD risk event followed by changes to their MFA profile - potentially detecting a bad actor changing MFA details\r\n// Timeframe = the minutes between flagging a risk event and MFA details being changed\r\nlet timeframe = 120;\r\n//Search for real time risk events only and retrieve Correlation Id\r\nAADUserRiskEvents\r\n| where TimeGenerated > ago (1d)\r\n| where DetectionTimingType == \"realtime\"\r\n| where RiskDetail <> \"aiConfirmedSigninSafe\"\r\n| project CorrelationId\r\n//Join Correlation Id back to sign in data to retrieve the initial sign in time that was flagged for risk\r\n| join kind=inner(\r\nSigninLogs\r\n| where TimeGenerated > ago (1d))\r\non CorrelationId\r\n| summarize ['Risky Signin Time']=min(TimeGenerated) by CorrelationId, UserPrincipalName\r\n//Join risky sign in UserPrincipalName to audit log for MFA events\r\n| join kind=inner (\r\n    AuditLogs\r\n    | where TimeGenerated > ago (1d)\r\n    | where OperationName in (\"User registered security info\", \"User deleted security info\",\"User registered all required security info\")\r\n    | where Result == \"success\"\r\n    | extend UserPrincipalName = tostring(TargetResources[0].userPrincipalName)\r\n//Find the latest event in the MFA registration process\r\n    | summarize arg_max(TimeGenerated, *) by UserPrincipalName\r\n    | project\r\n        ['MFA Change Time']=TimeGenerated,\r\n        OperationName,\r\n        UserPrincipalName)\r\n    on UserPrincipalName\r\n//Calculate the time between the initial sign in event and the MFA change time\r\n| extend ['Minutes Between Events']=datetime_diff(\"minute\",['MFA Change Time'], ['Risky Signin Time'])\r\n| project-away UserPrincipalName1\r\n| project-reorder ['Risky Signin Time'], ['MFA Change Time'], ['Minutes Between Events'], UserPrincipalName, OperationName, CorrelationId\r\n//Find events where the time between the two events was less than 120 minutes\r\n| where ['Minutes Between Events'] < timeframe",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/8302a064-d9a2-4c3b-8fb2-733bca1c96ac')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Intune - Visualize device join over time",
                "description": "Visualize the join type (Azure AD joined, Azure AD registered or Hybrid joined) of your MEM/Intune devices per week",
                "body": "//Visualize the join type (Azure AD joined, Azure AD registered or Hybrid joined) of your MEM/Intune devices per week\r\nIntuneDevices\r\n//Gets all data generated in 180 days\r\n| where TimeGenerated > ago(180d) \r\n//Optionally filter only devices have contact to Intune in 30 days\r\n| where todatetime(LastContact) > ago (30d) \r\n| summarize arg_max(TimeGenerated, *) by DeviceName, startofweek(TimeGenerated)\r\n| where OS == \"Windows\"\r\n| summarize JoinSummary=count()by JoinType, startofweek(TimeGenerated)\r\n| where isnotempty(JoinType)\r\n| render columnchart\r\n    with (\r\n    kind=unstacked,\r\n    ytitle=\"Device Count\",\r\n    xtitle=\"Week\",\r\n    title=\"Device count by join type per week\") ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Intune"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/8412959d-cc6b-4533-9823-942ed435630f')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Detect when an admin grants mailbox access",
                "description": "Detect when an Exchange admin grants full mailbox access to another user",
                "body": "//Detect when an Exchange admin grants full mailbox access to another user\r\nOfficeActivity\r\n| where RecordType == \"ExchangeAdmin\"\r\n| where Operation == \"Add-MailboxPermission\"\r\n| parse-where Parameters with * 'Identity\",\"Value\":\"' TargetMailbox '\"' *\r\n| parse-where Parameters with * 'User\",\"Value\":\"' UserGivenAccess '\"' *\r\n| parse-where Parameters with * 'AccessRights\",\"Value\":\"' AccessRights '\"' *\r\n| project\r\n    TimeGenerated,\r\n    Actor=UserId,\r\n    ['Target Mailbox']=TargetMailbox,\r\n    ['Target Mailbox DisplayName']=OfficeObjectId,\r\n    ['User Granted Access']=UserGivenAccess,\r\n    ['Access Type']=AccessRights\r\n| where Actor != \"NT AUTHORITY\\\\SYSTEM (Microsoft.Exchange.Servicehost)\"\r\n| sort by TimeGenerated desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/8413bcf8-d1e0-49e6-829c-00c207d98aed')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize app usage month by month",
                "description": "Summarize the usage of all your applications from last month to this month. Usage is calculated by distinct users per application.",
                "body": "//Summarize the usage of all your applications from last month to this month. Usage is calculated by distinct users per application.\r\nSigninLogs\r\n| where TimeGenerated > ago(60d)\r\n| where ResultType == \"0\"\r\n| summarize\r\n    ['Last Month Signins']=dcountif(UserPrincipalName, TimeGenerated > ago(60d) and TimeGenerated < ago(30d)),\r\n    ['This Month Signins']=dcountif(UserPrincipalName, TimeGenerated > ago(30d))\r\n    by AppId, AppDisplayName\r\n| extend ['Percentage Change']=(todouble(['This Month Signins']) * 100 / todouble(['Last Month Signins']))\r\n| sort by AppDisplayName asc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/853dae80-abdc-4d96-8e55-3fd873cb0589')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Summarize total downloads from each guest domain",
                "description": "Summarize the total count of downloads from Office 365 for each of your guest domains\n",
                "body": "//Summarize the total count of downloads from Office 365 for each of your guest domains\r\nOfficeActivity\r\n| where TimeGenerated > ago(30d)\r\n| where Operation in (\"FileSyncDownloadedFull\", \"FileDownloaded\")\r\n| where UserId contains \"#EXT#\"\r\n| extend ['Guest UserPrincipalName'] = tostring(split(UserId,\"#\")[0])\r\n| extend ['Guest Domain'] = tostring(split(['Guest UserPrincipalName'],\"_\")[-1])\r\n| project ['Guest Domain']\r\n| summarize ['Download Count']=count()by ['Guest Domain']\r\n| sort by ['Download Count'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/8568b168-b9ec-495a-be45-2cc105d13a60')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Summarize Windows versions",
                "description": "Create a pivot table of all Windows OS versions in your environment",
                "body": "//Create a pivot table of all Windows OS versions in your environment\r\n//Microsoft Sentinel query\r\nDeviceInfo\r\n| where TimeGenerated > ago(30d)\r\n| where isnotempty(OSBuild)\r\n| summarize arg_max(TimeGenerated, *) by DeviceId\r\n| where isnotempty(OSPlatform)\r\n| evaluate pivot(OSBuild, count(), OSPlatform)\r\n| where OSPlatform contains \"Windows\"\r\n| sort by OSPlatform desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/856cece4-c975-4b92-a187-2560167caa04')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure - Visualize most attacked hostname behind WAF",
                "description": "Visualize the most attacked hostname behind an Azure App Gateway/WAF",
                "body": "//Visualize the most attacked hostname behind an Azure App Gateway/WAF\r\nAzureDiagnostics\r\n| where TimeGenerated > ago(30d)\r\n| where ResourceType == \"APPLICATIONGATEWAYS\"\r\n| where isnotempty(ruleId_s)\r\n| summarize ['WAF Hit Count']=count() by hostname_s\r\n| where isnotempty(hostname_s)\r\n| sort by ['WAF Hit Count'] desc\r\n| render barchart with (title=\"Most WAF Hits by Hostname\", xtitle=\"Hostname\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure Resources"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/8587e1d0-6a91-4388-9bba-5fcf343ea987')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Log Analytics - Detect new tables created",
                "description": "Detect when new tables have been written to in the last week compared to the last 90 days",
                "body": "//Detect when new tables have been written to in the last week compared to the last 90 days\r\nlet existingtables=\r\n    union withsource=_TableName *\r\n    | where TimeGenerated > ago(90d) and TimeGenerated < ago(7d)\r\n    | distinct Type;\r\nlet newtables=\r\n    union withsource=_TableName *\r\n    | where TimeGenerated > ago(7d)\r\n    | summarize ['First Log Received'] = min(TimeGenerated) by Type\r\n    | project Type, ['First Log Received'];\r\nexistingtables\r\n| join kind=rightanti newtables on Type",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Log Analytics"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/86e68534-fe99-43a7-8620-312e41fb0427')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect multiple CA failures",
                "description": "Alert when a user fails Azure AD Conditional Access policies to 5 or more unique applications within a short time period, this example uses 1 hour.",
                "body": "//Alert when a user fails Azure AD Conditional Access policies to 5 or more unique applications within a short time period, this example uses 1 hour.\r\nSigninLogs\r\n| where TimeGenerated > ago (1d)\r\n| project TimeGenerated, ConditionalAccessPolicies, UserPrincipalName, AppDisplayName\r\n| mv-expand ConditionalAccessPolicies\r\n| extend CAResult = tostring(ConditionalAccessPolicies.result)\r\n| extend CAPolicyName = tostring(ConditionalAccessPolicies.displayName)\r\n| where CAResult == \"failure\"\r\n| summarize\r\n    ['List of Failed Application']=make_set(AppDisplayName),\r\n    ['Count of Failed Application']=dcount(AppDisplayName)\r\n    by UserPrincipalName, bin(TimeGenerated, 1h)\r\n| where ['Count of Failed Application'] >= 5",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/877372ea-6f74-4bdb-9987-f45577410eb5')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize application access",
                "description": "Creates a list of your applications and summarizes successful signins by members vs guests separated to total and distinct signins",
                "body": "//Creates a list of your applications and summarizes successful signins by members vs guests separated to total and distinct signins\r\nSigninLogs\r\n| where TimeGenerated > ago(30d)\r\n| project TimeGenerated, UserType, ResultType, AppDisplayName, UserPrincipalName\r\n| where ResultType == 0\r\n| summarize\r\n    ['Total Member Signins']=countif(UserType == \"Member\"),\r\n    ['Distinct Member Signins']=dcountif(UserPrincipalName, UserType == \"Member\"),\r\n    ['Total Guest Signins']=countif(UserType == \"Guest\"),\r\n    ['Distinct Guest Signins']=dcountif(UserPrincipalName, UserType == \"Guest\")\r\n    by AppDisplayName\r\n| sort by AppDisplayName asc  ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/88612dae-94b1-4109-ac15-b1c5c28e3f57')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "DCA - Summarize privileged actions",
                "description": "Create a pivot table of all actions in Defender for Cloud Apps by your privileged users over the last 7 days",
                "body": "//Create a pivot table of all actions in Defender for Cloud Apps by your privileged users over the last 7 days\r\n//Lookup the IdentityInfo table for any users holding a privileged role\r\nlet privusers=\r\n    IdentityInfo\r\n    | where TimeGenerated > ago(21d)\r\n    | summarize arg_max(TimeGenerated, *) by AccountUPN\r\n    //Add any roles that you are interested in auditing\r\n    | where AssignedRoles has_any (\"Global Administrator\", \"Security Administrator\", \"SharePoint Administrator\")\r\n    | distinct AccountUPN;\r\nCloudAppEvents\r\n| where TimeGenerated > ago(7d)\r\n| extend Operation = tostring(RawEventData.Operation)\r\n| extend UserId = tostring(RawEventData.UserId)\r\n| extend Workload = tostring(RawEventData.Workload)\r\n//Create a new column that adds workload and operation together to make the events more readable\r\n| extend Activity = strcat(Workload, \" - \", Operation)\r\n| where UserId in~ (privusers)\r\n//Create pivot table of all actions by each user\r\n| evaluate pivot(Activity, count(), UserId)",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Cloud Apps"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/897488bf-9d7d-483e-86e5-6caadefcaad4')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "DCA - Detect risk event followed by mailbox changes",
                "description": "Alert when a user flags an Azure AD risk event followed by creating or updating inbox rules within a short time frame",
                "body": "//Alert when a user flags an Azure AD risk event followed by creating or updating inbox rules within a short time frame\r\n//In this example it will detect when the two events are less than 120 minutes apart\r\nAADUserRiskEvents\r\n| where TimeGenerated > ago (1d)\r\n| where DetectionTimingType == \"realtime\"\r\n| where RiskDetail <> \"aiConfirmedSigninSafe\"\r\n| project RiskTime=TimeGenerated, UserPrincipalName, RiskEventType, RiskyIP=IpAddress\r\n| join kind=inner (\r\n    CloudAppEvents\r\n    | where TimeGenerated > ago (1d)\r\n    | extend Operation = tostring(RawEventData.Operation)\r\n    | where Operation in (\"New-InboxRule\", \"Set-InboxRule\")\r\n    | extend UserId = tostring(RawEventData.UserId)\r\n    | project RuleTime=TimeGenerated, UserId, MailForwardIP=IPAddress, ActivityObjects\r\n    )\r\n    on $left.UserPrincipalName == $right.UserId\r\n| extend ['Minutes Between Events']=datetime_diff(\"minute\", RuleTime, RiskTime)\r\n| where ['Minutes Between Events'] < 120\r\n| project-away UserId\r\n| project-reorder\r\n    UserPrincipalName,\r\n    RiskTime,\r\n    RuleTime,\r\n    ['Minutes Between Events'],\r\n    RiskyIP,\r\n    MailForwardIP,\r\n    RiskEventType,\r\n    ActivityObjects",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Cloud Apps"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/898b9f6d-d13b-496a-8392-6949034ce47a')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Visualize anomalous downloads in Office 365",
                "description": "Use the inbuilt KQL anomaly detection to detect users that have downloaded more files than expected.",
                "body": "//Visualises potentially anomalous download activities in your Office tenant over the set period. Time frames can be adjusted to suit. \r\n//Starttime and timeframe = how many days of data to look at and in what grouping, i.e 7 days of data over 1 hour periods.\r\n//Threshold = the amount of total downloads required to be included in anomaly calculations. Reduces noise from low level anomalies, e.g going from 1 download to 3 downloads total.\r\n//sensitivity = adjust to make the query more or less sensitive, the higher the value, the greater the anomaly required to be detected.\r\nlet starttime = 7d;\r\nlet timeframe = 1h;\r\nlet threshold = 30;\r\nlet sensitivity = 2;\r\nlet operations = dynamic([\"FileSyncDownloadedFull\",\"FileDownloaded\"]);\r\nlet outlierusers=\r\nOfficeActivity\r\n| where TimeGenerated > ago(starttime)\r\n| where Operation in (['operations'])\r\n| project TimeGenerated, UserId\r\n| order by TimeGenerated\r\n| summarize Events=count()by UserId, bin(TimeGenerated, timeframe)\r\n| where Events > threshold\r\n| summarize EventCount=make_list(Events),TimeGenerated=make_list(TimeGenerated) by UserId\r\n| extend outliers=series_decompose_anomalies(EventCount,sensitivity)\r\n| mv-expand TimeGenerated, EventCount, outliers\r\n| where outliers == 1\r\n//If you don't want to visualize the anomalies then remove everything below this line\r\n| distinct UserId;\r\nOfficeActivity\r\n| where TimeGenerated > ago(starttime)\r\n| where Operation in (['operations'])\r\n| where UserId in (outlierusers)\r\n| summarize DownloadCount=count()by UserId, bin(TimeGenerated, timeframe)\r\n| render timechart",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/89bb3f47-92e1-4a6b-b323-65bbfe873eda')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect internal to external putty connections",
                "description": "Detect successful internal to public connections using Putty",
                "body": "//Detect successful internal to public connections using Putty\r\n//Microsoft Sentinel query\r\nDeviceNetworkEvents\r\n| where ActionType == \"ConnectionSuccess\"\r\n| where LocalIPType == \"Private\"\r\n| where RemoteIPType == \"Public\"\r\n| where InitiatingProcessCommandLine contains \"putty.exe\"\r\n| project\r\n    TimeGenerated,\r\n    DeviceName,\r\n    InitiatingProcessAccountName,\r\n    LocalIP,\r\n    RemoteIP,\r\n    RemoteUrl,\r\n    RemotePort",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/8ac17b57-7455-4f99-ba61-4e672dde6da7')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect first time service principal CA failure",
                "description": "Detect the first time a service principal fails Conditional Access",
                "body": "//Detect the first time a service principal fails Conditional Access\r\n//Microsoft Sentinel query\r\n//First find service principals that have previously failed\r\nlet knownfailures=\r\n    AADServicePrincipalSignInLogs\r\n    | where TimeGenerated > ago(30d) and TimeGenerated < ago (1d)\r\n    | where ResultType == \"53003\"\r\n    | distinct AppId;\r\n//Find any new failures in the last day\r\nAADServicePrincipalSignInLogs\r\n| where TimeGenerated > ago(1d)\r\n| where ResultType == \"53003\"\r\n| where AppId !in (knownfailures)\r\n| project\r\n    TimeGenerated,\r\n    ServicePrincipalName,\r\n    ServicePrincipalId,\r\n    AppId,\r\n    ConditionalAccessPolicies,\r\n    IPAddress",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/8c031ee3-448c-46b1-b1de-a0e6d4301602')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find and summarize new apps accessed",
                "description": "Find new applications your users are signing into in the last month vs the previous 6 months. For each find the first time the app was used, how many total signins and distinct users accessing each one\n",
                "body": "//Find new applications your users are signing into in the last month vs the previous 6 months. For each find the first time the app was used, how many total signins and distinct users accessing each one\r\nlet knownapps=\r\n    SigninLogs\r\n    | where TimeGenerated > ago(180d) and TimeGenerated < ago (30d)\r\n    | distinct AppId;\r\nSigninLogs\r\n| where TimeGenerated > ago(30d)\r\n| where AppId !in (knownapps)\r\n| where isnotempty(AppDisplayName)\r\n| summarize\r\n    ['First Time Seen']=min(TimeGenerated),\r\n    Count=count(),\r\n    ['User Count']=dcount(UserPrincipalName)\r\n    by AppDisplayName\r\n| sort by Count desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/8cba052e-6186-42a7-9b0a-5d23f2e318ed')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Find macro files received via email",
                "description": "When a macro is received via email from an external sender, find all users who receieved the same file",
                "body": "//When a macro is received via email from an external sender, find all users who receieved the same file\r\nEmailEvents\r\n| where EmailDirection == \"Inbound\"\r\n| project\r\n    TimeGenerated,\r\n    SenderMailFromAddress,\r\n    RecipientEmailAddress,\r\n    NetworkMessageId\r\n| join kind=inner (EmailAttachmentInfo) on NetworkMessageId\r\n| project\r\n    TimeGenerated,\r\n    SenderMailFromAddress,\r\n    RecipientEmailAddress,\r\n    FileName\r\n| where FileName endswith \".xlsm\" or FileName endswith \".xstm\"\r\n| summarize Recipient=make_set(RecipientEmailAddress) by FileName, SenderMailFromAddress",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/8d1b470a-bfdf-434d-a827-aeb10360c56b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect first time role addition",
                "description": "Detect when a user adds someone to an Azure AD privileged role for the first time",
                "body": "//Detect when a user adds someone to an Azure AD privileged role for the first time\r\n//First build a set of known users who have completed this action previously\r\nlet knownusers=\r\n    AuditLogs\r\n    | where TimeGenerated > ago(90d) and TimeGenerated < ago(1d)\r\n    | where OperationName == \"Add member to role\"\r\n    //Exclude role additions made by the Azure AD PIM service\r\n    | where Identity != \"MS-PIM\"\r\n    | extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    | distinct Actor;\r\n//Find events in the last day by users not in the known list\r\nAuditLogs\r\n| where TimeGenerated > ago(1d)\r\n| where OperationName == \"Add member to role\"\r\n| where Identity != \"MS-PIM\"\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| extend ['Azure AD Role Name'] = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].newValue)))\r\n| extend Target = tostring(TargetResources[0].userPrincipalName)\r\n| where Actor !in (knownusers)\r\n| project TimeGenerated, Actor, Target, ['Azure AD Role Name']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/8eaba79b-c503-4868-844a-d08a5ff10614')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Visualize files shared to guests",
                "description": "Visualize the files shared to guests from Office 365 over time",
                "body": "//Visualize the files shared to guests from Office 365 over time\r\nOfficeActivity\r\n| where TimeGenerated > ago(90d)\r\n| where Operation in (\"SecureLinkCreated\", \"AddedToSecureLink\")\r\n| where TargetUserOrGroupType == \"Guest\" or TargetUserOrGroupName contains \"#ext#\"\r\n| summarize Count=count()by bin(TimeGenerated, 1d)\r\n| render timechart with (ytitle=\"File Count\", title=\"Files shared with guests over time\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/8f64dd4b-c38f-43cc-8ea1-63eeda62778d')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Visualize ISO files being mounted",
                "description": "Visualize the most common ISO files being mounted on your devices",
                "body": "//Visualize the most common ISO files being mounted on your devices\r\n//Microsoft Sentinel query\r\nDeviceFileEvents\r\n| where TimeGenerated > ago(30d)\r\n| where ActionType == \"FileCreated\"\r\n//When an ISO file is mounted a .iso.lnk file is created, take that name and trim the .lnk out to retrieve the ISO name\r\n| where FileName endswith \"iso.lnk\"\r\n| extend ['ISO FileName'] = trim(@\".lnk\",FileName)\r\n//Summarize and visualize the files\r\n| summarize Count=count() by ['ISO FileName']\r\n| top 20 by Count\r\n| render barchart with (title=\"Most common ISO files being mounted\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/90f40f14-1c7f-487f-bd9a-b7fc9a17ba0b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect managed identity accessing new resources",
                "description": "Detect when an Azure AD managed identity accesses a resource for the first time, i.e an identity that previously only accessed storage accesses a key vault\n",
                "body": "AADManagedIdentitySignInLogs\r\n| where TimeGenerated > ago (60d) and TimeGenerated < ago(1d)\r\n| where ResultType == \"0\"\r\n| distinct ServicePrincipalId, ResourceIdentity\r\n| join kind=rightanti (\r\n    AADManagedIdentitySignInLogs\r\n    | where TimeGenerated > ago (1d)\r\n    | where ResultType == \"0\"\r\n    )\r\n    on ServicePrincipalId, ResourceIdentity\r\n| project\r\n    ['Service Principal DisplayName']=ServicePrincipalName,\r\n    ['Service Principal Id']=ServicePrincipalId,\r\n    ['Azure Resource Identity Id']=ResourceIdentity,\r\n    ['Azure Resource DisplayName']=ResourceDisplayName\r\n| distinct\r\n    ['Service Principal DisplayName'],\r\n    ['Service Principal Id'],\r\n    ['Azure Resource DisplayName'],\r\n    ['Azure Resource Identity Id']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins",
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/93c261ec-0baa-4be4-b76f-315afea7f959')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Visualize SmartScreen warnings",
                "description": "Visualize the most common domains triggering Microsoft Defender SmartScreen warnings",
                "body": "//Visualize the most common domains triggering Microsoft Defender SmartScreen warnings\r\nDeviceEvents\r\n| where TimeGenerated > ago (30d)\r\n| where ActionType == \"SmartScreenUrlWarning\"\r\n| parse RemoteUrl with * '://' Domain '/' *\r\n| where isnotempty(Domain)\r\n| summarize Count=count()by Domain\r\n| sort by Count\r\n| render barchart  ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/94531d30-6b3d-4491-9fb8-66daeabb03f1')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect and find DNS sinkhole traffic",
                "description": "When Defender for Cloud detects communication with a DNS sinkhole, find the devices and processes initiating the connection\n",
                "body": "//When Defender for Cloud detects communication with a DNS sinkhole, find the devices and processes initiating the connection\r\nlet domain=\r\n    SecurityAlert\r\n    | where TimeGenerated > ago (1d)\r\n    | where AlertName startswith \"Attempted communication with suspicious sinkholed domain\"\r\n    | mv-expand todynamic(Entities)\r\n    | extend DomainName = tostring(Entities.DomainName)\r\n    | where isnotempty(DomainName)\r\n    | distinct DomainName;\r\nDeviceNetworkEvents\r\n| where TimeGenerated > ago (7d)\r\n| where RemoteUrl in~ (domain)\r\n| project\r\n    TimeGenerated,\r\n    ActionType,\r\n    DeviceName,\r\n    InitiatingProcessAccountName,\r\n    InitiatingProcessCommandLine,\r\n    LocalIP,\r\n    RemoteIP,\r\n    RemoteUrl,\r\n    RemotePort",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Security Alert",
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/94f3ccd9-a68c-4a65-8c0b-4e85422ec87e')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect potentially suspicious IP",
                "description": "Investigate potentially suspicious IP addresses for your Azure AD signins. This query lists any IP address with more failures than successful connections and provides a summary for each with at least one successful signin.\n",
                "body": "//Investigate potentially suspicious IP addresses for your Azure AD signins. This query lists any IP address with more failures than successful connections and provides a summary for each with at least one successful signin.\r\nlet failureCodes = dynamic([50053, 50126, 50055]);\r\nlet successCodes = dynamic([0, 50055, 50057, 50155, 50105, 50133, 50005, 50076, 50079, 50173, 50158, 50072, 50074, 53003, 53000, 53001, 50129]);\r\nSigninLogs\r\n| where TimeGenerated > ago(7d)\r\n| where ResultType in(successCodes) or ResultType in(failureCodes)\r\n| summarize\r\n    ['Count of successful signins'] = countif((ResultType in(successCodes))),\r\n    ['Count of distinct successful sign ins'] = dcountif(UserPrincipalName, (ResultType in(successCodes))),\r\n    ['List of successful users']=make_set_if(UserPrincipalName, (ResultType in(successCodes))),\r\n    ['Successful result codes'] = make_set_if(ResultType, (ResultType in(successCodes))),\r\n    ['Count of failed signins']=countif((ResultType in(failureCodes))),\r\n    ['Count of distinct failed sign ins'] = dcountif(UserPrincipalName, (ResultType in(failureCodes))),\r\n    ['List of failed users'] = make_set_if(UserPrincipalName, (ResultType in(failureCodes))),\r\n    ['Failed result codes'] = make_set_if(ResultType, (ResultType in(failureCodes))) \r\n    by IPAddress\r\n//Exclude IP addresses with more successful signins than failed. This is a good way to exclude known locations as they will have lots of failures too, but they will be balanced by more successes.\r\n//Then find IP addresses with 5 or more distinct failed signins and at least one successful signin\r\n| where ['Count of failed signins'] > ['Count of successful signins'] and ['Count of distinct failed sign ins'] > ['Count of distinct successful sign ins'] and ['Count of distinct failed sign ins'] >= 5 and ['Count of distinct successful sign ins'] >= 1\r\n| order by ['Count of distinct successful sign ins'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/95ea77e6-6637-416d-812a-7f4b2415a1e0')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize guest invites sent vs guest invites redeemed",
                "description": "Visualizes the total guest invites sent from your Azure AD tenant vs those redeemed. Data is summarized per week.\n",
                "body": "//Visualizes the total guest invites sent from your Azure AD tenant vs those redeemed. Data is summarized per week.\r\nlet timerange=180d;\r\nAuditLogs\r\n| where TimeGenerated > ago (timerange)\r\n| where OperationName in (\"Redeem external user invite\", \"Invite external user\")\r\n| summarize\r\n    InvitesSent=countif(OperationName == \"Invite external user\"),\r\n    InvitesRedeemed=countif(OperationName == \"Redeem external user invite\")\r\n    by startofweek(TimeGenerated)\r\n| render columnchart\r\n    with (\r\n    title=\"Guest Invites Sent v Guest Invites Redeemed\",\r\n    xtitle=\"Invites\",\r\n    kind=unstacked)",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/965e0018-23cb-4398-9f1c-632aea7383ad')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find service principal with expired secret",
                "description": "Find Azure AD service principals that have both successful and failed sign ins because of an expired secret. For both results, find the IP addresses. If you are seeing results then the old secret is still in use somewhere and requires updating.",
                "body": "//Find Azure AD service principals that have both successful and failed sign ins because of an expired secret. For both results, find the IP addresses.\r\n//If you are seeing results then the old secret is still in use somewhere and requires updating.\r\n//Microsoft Sentinel query\r\nAADServicePrincipalSignInLogs\r\n| where TimeGenerated > ago(1d)\r\n| summarize\r\n    ['All Error Codes']=make_set(ResultType),\r\n    ['Successful IP Addresses']=make_set_if(IPAddress, ResultType == 0),\r\n    ['Failed IP Addresses']=make_set_if(IPAddress, ResultType == \"7000222\")\r\n    by ServicePrincipalId, ServicePrincipalName\r\n| where ['All Error Codes'] has_all (\"0\", \"7000222\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/969840f3-cab2-4970-982e-98f43ed5f564')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize Internet Explorer signins",
                "description": "Summarize signins to your Azure AD tenant still using Internet Explorer. Data is grouped into each user and which applications they are accessing.\n",
                "body": "//Summarize signins to your Azure AD tenant still using Internet Explorer. Data is grouped into each user and which applications they are accessing.\r\nSigninLogs\r\n| where ResultType == 0\r\n| extend UserAgentDetail = todynamic(parse_user_agent(UserAgent, \"browser\"))\r\n| extend UserAgentFamily = tostring(parse_json(tostring(UserAgentDetail.Browser)).Family)\r\n| extend UserAgentMajorVersion = toint(parse_json(tostring(UserAgentDetail.Browser)).MajorVersion)\r\n| extend UserAgentMinorVersion = toint(parse_json(tostring(UserAgentDetail.Browser)).MinorVersion)\r\n| extend UserAgentPatch = toint(parse_json(tostring(UserAgentDetail.Browser)).Patch)\r\n| project\r\n    TimeGenerated,\r\n    UserPrincipalName,\r\n    AppDisplayName,\r\n    ResultType,\r\n    IPAddress,\r\n    Location,\r\n    UserAgentFamily,\r\n    UserAgentMajorVersion,\r\n    UserAgentMinorVersion,\r\n    UserAgentPatch,\r\n    UserAgent\r\n| where UserAgentFamily == \"IE\"\r\n| summarize ['Total IE Signins']=count(), ['Count of Applications']=dcount(AppDisplayName), ['List of Applications']=make_set(AppDisplayName) by UserPrincipalName\r\n| sort by ['Count of Applications'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/97228d19-802d-4c86-b9f3-e6992806cf64')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect MFA changes from unknown IP",
                "description": "Detect when MFA details for a user are changed, deleted or registered from an IP address that user has never signed in successfully from\n",
                "body": "//Detect when MFA details for a user are changed, deleted or registered from an IP address that user has never signed in successfully from\r\n//Cache all successful sign in data for users using materialize operator\r\nlet signindata=materialize (\r\nSigninLogs\r\n    | where TimeGenerated > ago(180d)\r\n    | where ResultType == 0\r\n    | distinct UserPrincipalName, IPAddress);\r\n//Search for audit events showing MFA registrations, deletions or changes in the last day\r\nAuditLogs\r\n| where TimeGenerated > ago(1d)\r\n| where OperationName in (\"User registered security info\", \"User deleted security info\", \"User registered all required security info\")\r\n| where Result == \"success\"\r\n| extend IPAddress = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)\r\n| extend UserPrincipalName = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| project UserPrincipalName, IPAddress, OperationName\r\n//Join those events back to our summarized sign in data looking for users who register MFA from an IP they have never signed in from\r\n| where isnotempty(IPAddress)\r\n| join kind=leftanti (signindata) on IPAddress, UserPrincipalName\r\n| distinct UserPrincipalName, IPAddress, OperationName",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/97782146-135e-432f-b977-718afa595ba8')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Summarize all local group additions",
                "description": "Summarize the total count of all local group additions by group name",
                "body": "//Summarize the total count of all local group additions by group name\r\nDeviceEvents\r\n| where TimeGenerated > ago (30d)\r\n| where ActionType == \"UserAccountAddedToLocalGroup\"\r\n| summarize ['Local Group Addition Count']=count() by ['Local Group Name']=tostring(AdditionalFields.GroupName)\r\n| sort by ['Local Group Addition Count']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/9a7fef3d-5565-48cb-b862-681ee58f86c7')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect new hash accessing LSASS",
                "description": "Detect when a process with a hash not previously seen before in your environment accesses lsass.exe via an open process API call",
                "body": "//Detect when a process with a hash not previously seen before in your environment accesses lsass.exe via an open process API call\r\nlet knownhashes=\r\n    DeviceEvents\r\n    | where TimeGenerated > ago(30d) and TimeGenerated < ago (1d)\r\n    | where ActionType == \"OpenProcessApiCall\"\r\n    | where FileName == \"lsass.exe\"\r\n    | distinct InitiatingProcessSHA256;\r\nDeviceEvents\r\n| where TimeGenerated > ago (1d)\r\n| where ActionType == \"OpenProcessApiCall\"\r\n| where FileName == \"lsass.exe\"\r\n| where InitiatingProcessSHA256 !in (knownhashes)\r\n| extend DesiredAccess = tostring(AdditionalFields.DesiredAccess)\r\n| distinct\r\n    DeviceName,\r\n    InitiatingProcessAccountName,\r\n    InitiatingProcessCommandLine,\r\n    DesiredAccess",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/9c10ef4d-702f-4fc3-964a-a266470d419b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find guests invited but not redeemed",
                "description": "Lists guests who have been invited but not yet redeemed their invites. Excludes newly invited guests (last 30 days).",
                "body": "//Lists guests who have been invited but not yet redeemed their invites.\r\n//Excludes newly invited guests (last 30 days).\r\nlet timerange=365d;\r\nlet timeframe=30d;\r\nAuditLogs\r\n| where TimeGenerated between (ago(timerange) .. ago(timeframe)) \r\n| where OperationName == \"Invite external user\"\r\n| extend GuestUPN = tolower(tostring(TargetResources[0].userPrincipalName))\r\n| project TimeGenerated, GuestUPN\r\n| join kind=leftanti  (\r\n    AuditLogs\r\n    | where TimeGenerated > ago (timerange)\r\n    | where OperationName == \"Redeem external user invite\"\r\n    | where CorrelationId <> \"00000000-0000-0000-0000-000000000000\"\r\n    | extend d = tolower(tostring(TargetResources[0].displayName))\r\n    | parse d with * \"upn: \" GuestUPN \",\" *\r\n    | project TimeGenerated, GuestUPN)\r\n    on GuestUPN\r\n| distinct GuestUPN",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/9c21603a-c0d4-463d-9500-9022153283c2')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Find downloads for top 20 guests",
                "description": "Find the top 20 guests who are downloading files from your tenant and calculate the percentage of total downloads from those users. Useful to see if you have a few guests responsible for most of the downloads in your tenant.\n",
                "body": "//Find the top 20 guests who are downloading files from your tenant and calculate the percentage of total downloads from those users. Useful to see if you have a few guests responsible for most of the downloads in your tenant.\r\n//First find the count of all downloads by guests in your tenant\r\nlet totalguestdownloads=\r\n    OfficeActivity\r\n    | where TimeGenerated > ago(30d)\r\n    | where Operation in (\"FileSyncDownloadedFull\", \"FileDownloaded\")\r\n    | where UserId contains \"#EXT#\"\r\n    | count\r\n//Extend a fake column we will use to join our two queries\r\n    | extend ['Total Download Count'] = Count, Constant=\"x\";\r\nOfficeActivity\r\n| where TimeGenerated > ago(30d)\r\n| where Operation in (\"FileSyncDownloadedFull\", \"FileDownloaded\")\r\n| where UserId contains \"#EXT#\"\r\n//Extend the same fake column to use to join our two queries\r\n| extend Constant=\"x\"\r\n| extend ['Guest UserPrincipalName'] = tostring(split(UserId, \"#\")[0])\r\n//Summarize download count by each guest and join to our first query\r\n| summarize ['Individual Download Count']=count()by ['Guest UserPrincipalName'], Constant\r\n| join kind=fullouter totalguestdownloads on Constant\r\n| project-away Constant, Constant1, Count\r\n| sort by ['Individual Download Count'] desc \r\n//Take the top 20 and then calculate the percentage\r\n| take 20\r\n| extend ['Percentage of Total Downloads']=(todouble(['Individual Download Count']) * 100 / todouble(['Total Download Count']))",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/9c22899d-bdef-4afa-bb35-173f6cdbbea6')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect internal to public port 22 connections",
                "description": "Find successful connections from a private to public network on TCP port 22",
                "body": "//Find successful connections from a private to public network on TCP port 22\r\nDeviceNetworkEvents\r\n| where TimeGenerated > ago(1d)\r\n| where ActionType == \"ConnectionSuccess\"\r\n| where RemotePort == 22\r\n| where LocalIPType == \"Private\"\r\n| where RemoteIPType == \"Public\"\r\n| project\r\n    TimeGenerated,\r\n    DeviceName,\r\n    InitiatingProcessAccountName,\r\n    InitiatingProcessCommandLine,\r\n    LocalIP,\r\n    RemoteIP,\r\n    RemoteUrl",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/9c281d34-c8c8-4b6d-80e4-f9d68e754461')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect PowerShell execution policy change",
                "description": "Detect when a non system account changes the PowerShell execution policy on a device\n",
                "body": "//Detect when a non system account changes the PowerShell execution policy on a device\r\nDeviceEvents\r\n| where ActionType == \"PowerShellCommand\"\r\n| where InitiatingProcessFileName == \"powershell.exe\"\r\n| where InitiatingProcessAccountName != \"system\"\r\n| where AdditionalFields.Command == \"Set-ExecutionPolicy\"\r\n| project TimeGenerated, DeviceName, InitiatingProcessAccountName",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/9ee19333-cc26-4bc0-b10f-4995a54e9026')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Sec Events - Detect potenital RDP recon",
                "description": "Detect when a user connects to 3 or more unique devices via RDP over a 30 minute period\n",
                "body": "//Detect when a user connects to 3 or more unique devices via RDP over a 30 minute period\r\nSecurityEvent\r\n| where TimeGenerated > ago (1d)\r\n| where EventID == \"4624\"\r\n| where LogonType == 10\r\n| where SubjectDomainName == TargetDomainName\r\n//Account is dropped to lower case to make sure each account is only listed once, i.e Reprise99 and reprise99 are combined\r\n| summarize\r\n    ['Distinct device logon count']=dcount(Computer),\r\n    ['List of devices']=make_set(Computer)\r\n    by tolower(Account), bin(TimeGenerated, 30m)\r\n//Find accounts that have logged on to 3 or more unique devices in less than 30 minutes\r\n| where ['Distinct device logon count'] >= 3",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Windows Security Events"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/9fa58e9b-be0d-4028-a0cc-064d8687a79e')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize inactive user accounts",
                "description": "Summarize accounts (both members and guests) that haven't signed on for over 60 days, and summarize them into the month they last signed in",
                "body": "//Summarize accounts (both members and guests) that haven't signed on for over 60 days, and summarize them into the month they last signed in\r\nSigninLogs\r\n| where TimeGenerated > ago (365d)\r\n| where ResultType == 0\r\n| where isnotempty(UserType)\r\n| summarize arg_max(TimeGenerated, *) by UserPrincipalName\r\n| where TimeGenerated < ago(60d)\r\n| summarize\r\n    ['Inactive Account List']=make_set(UserPrincipalName),\r\n    ['Count of Inactive Accounts']=dcount(UserPrincipalName)\r\n    by UserType, Month=startofmonth(TimeGenerated)\r\n| sort by Month desc, UserType asc",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/a03806e0-e879-4017-8ed7-26392c3c0564')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize groups with dynamic rules",
                "description": "Summarize all groups that have had users added to them via dynamic rules",
                "body": "//Summarize all groups that have had users added to them via dynamic rules\r\nAuditLogs\r\n| where TimeGenerated > ago(1d)\r\n| where OperationName == \"Add member to group\"\r\n| where Identity == \"Microsoft Approval Management\"\r\n| where TargetResources[0].type == \"User\"\r\n| extend GroupName = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].newValue)))\r\n| extend User = tostring(TargetResources[0].userPrincipalName)\r\n| summarize ['Count of Users Added']=dcount(User), ['List of Users Added']=make_set(User) by GroupName\r\n| sort by GroupName asc  ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/a063b1fb-7cc9-4144-b3bf-730e3f1b010c')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize successful vs failed SSPR",
                "description": "Visualize successful vs failed self service password reset attempts in your Azure AD tenant\n",
                "body": "//Visualize successful vs failed self service password reset attempts in your Azure AD tenant\r\nAuditLogs\r\n| where TimeGenerated > ago (30d)\r\n| where LoggedByService == \"Self-service Password Management\"\r\n| extend User = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| extend ['User IP Address'] = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)\r\n| sort by TimeGenerated asc \r\n//Create a list of all SSPR actions that make up a single correlation id which represents one attempts at completing SSPR\r\n| summarize ['SSPR Actions']=make_list(ResultReason) by CorrelationId, bin(TimeGenerated, 1d)\r\n//Summarize those lists of actions into those that have a successful password reset and those that don't\r\n| summarize\r\n    ['Successful self service password resets']=countif(['SSPR Actions'] has \"Successfully completed reset\"),\r\n    ['Failed self service password resets']=countif(['SSPR Actions'] !has \"User successfully reset password\")\r\n    by bin(TimeGenerated, 1d) \r\n| render timechart with (title=\"Self service password reset success vs failure\", ytitle=\"Count\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/a2174516-916b-4aaf-88a5-604768019a01')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect user added to local admin on device",
                "description": "Detect when an admin adds another user to the local administrators group on a device and optionally query IdentityInfo to return the UPN of the user added\n",
                "body": "DeviceEvents\r\n| where TimeGenerated > ago(7d)\r\n| where ActionType == \"UserAccountAddedToLocalGroup\"\r\n| where AdditionalFields.GroupName == \"Administrators\"\r\n// Exclude processes initiated by system as this detection is for end users adding groups\r\n| where InitiatingProcessAccountSid != \"S-1-5-18\"\r\n| project\r\n    TimeGenerated,\r\n    DeviceName,\r\n    AccountSid,\r\n    Actor=InitiatingProcessAccountName\r\n//Join query to IdentityInfo table to match the AccountSid\r\n//if you do not use the IdentityInfo table remove everything below this line\r\n| join kind=inner (\r\n    IdentityInfo\r\n    | where TimeGenerated > ago (21d)\r\n    | summarize arg_max (TimeGenerated, *) by AccountUPN)\r\n    on $left.AccountSid == $right.AccountSID\r\n| project\r\n    TimeGenerated,\r\n    DeviceName,\r\n    ['User Added']=AccountUPN,\r\n    ['User Added Sid']=AccountSID,\r\n    Actor",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/a2bf9cce-09a5-4153-9499-a6bde94c42d3')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Detect Teams role changes",
                "description": "Detect when the role for a user changes to owner or back to standard member in your any of your Teams",
                "body": "//Detect when the role for a user changes to owner or back to standard member in your any of your Teams\r\nOfficeActivity\r\n| where Operation == \"MemberRoleChanged\"\r\n| mv-expand Members\r\n| extend User = tostring(Members.UPN)\r\n| extend x = tostring(Members.Role)\r\n| extend Action = case(x == \"1\", strcat(\"User changed to member\"),\r\n    x == \"2\", strcat(\"User changed to owner\"), \"unknown\")\r\n| where Action in (\"User changed to member\", \"User changed to owner\")\r\n| project\r\n    TimeGenerated,\r\n    TeamName,\r\n    ActorType=UserType,\r\n    Actor=UserId,\r\n    UserAdded=User,\r\n    Action",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/a2e0f768-dac6-4883-8fb0-bc5c5ab547e6')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize password vs passwordless signins",
                "description": "Visualize password vs passwordless signins per week",
                "body": "//Visualize password vs passwordless signins per week\r\nSigninLogs\r\n| project TimeGenerated, AuthenticationDetails\r\n| where TimeGenerated > ago (180d)\r\n| mv-expand todynamic(AuthenticationDetails)\r\n| extend AuthMethod = tostring(parse_json(AuthenticationDetails).authenticationMethod)\r\n| where AuthMethod != \"Previously satisfied\"\r\n| summarize\r\n    Password=countif(AuthMethod == \"Password\"),\r\n    Passwordless=countif(AuthMethod in (\"FIDO2 security key\", \"Passwordless phone sign-in\", \"Windows Hello for Business\", \"Mobile app notification\", \"X.509 Certificate\"))\r\n    by startofweek(TimeGenerated)\r\n| render timechart\r\n    with (\r\n    xtitle=\"Week\",\r\n    ytitle=\"Signin Count\",\r\n    title=\"Password vs Passwordless signins per week\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/a485dcb5-8a86-4197-b9db-fabdea1a90d4')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDI - Summarize NTLM authentication",
                "description": "Summarize NTLM authentications by which source computers & accounts are connecting to the most destination devices",
                "body": "//Summarize NTLM authentications by which source computers & accounts are connecting to the most destination devices\r\n//Microsoft Sentinel query\r\nIdentityLogonEvents\r\n| where TimeGenerated > ago(7d)\r\n| where ActionType == \"LogonSuccess\"\r\n| where Protocol == \"Ntlm\"\r\n| where LogonType == \"Credentials validation\"\r\n| summarize ['Target Device List']=make_set(DestinationDeviceName), ['Target Device Count']=dcount(DestinationDeviceName) by DeviceName, AccountName\r\n| sort by ['Target Device Count'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Identity",
                        "Active Directory"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/a595cd1d-ff82-4e69-a0df-c471e57689d7')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Sec Events - Summarize logon activity",
                "description": "Create a summary of interactive and remote interactive (RDP) logons to your Windows devices using the security event logs",
                "body": "//Create a summary of interactive and remote interactive (RDP) logons to your Windows devices using the security event logs\r\nSecurityEvent\r\n| where TimeGenerated > ago (30d)\r\n| where EventID == \"4624\"\r\n| where LogonType in (\"2\", \"10\")\r\n//Search for just domain logon events but matching subject and target domain name fields\r\n| where SubjectDomainName == TargetDomainName\r\n| summarize\r\n    ['Interactive logon count']=countif(LogonType == 2),\r\n    ['Interactive distinct logon count']=dcountif(Account, LogonType == 2),\r\n    ['List of interactive logons']=make_set_if(Account, LogonType == 2),\r\n    ['Remote interactive logon count']=countif(LogonType == 10),\r\n    ['Remote interactive distinct logon count']=dcountif(Account, LogonType == 10),\r\n    ['List of remote interactive logons']=make_set_if(Account, LogonType == 10)\r\n    by Computer\r\n| sort by Computer asc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Windows Security Events"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/a5dbb60c-fd54-4fb6-9528-e678ed16aeaa')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize MFA top 20 apps",
                "description": "Summarize the percentage of signins covered by MFA for your top 20 most popular Azure AD apps",
                "body": "//Summarize the percentage of signins covered by MFA for your top 20 most popular Azure AD apps\r\n//First create a list of your top 20 apps by finding distinct user count by application over 30 days\r\nlet top20apps=\r\n    SigninLogs\r\n    | where TimeGenerated > ago (30d)\r\n    | summarize UserCount=dcount(UserPrincipalName)by AppDisplayName\r\n    | sort by UserCount desc \r\n    | take 20\r\n    | project AppDisplayName;\r\n//Use that list to calculate the percentage of signins to those apps that are covered by MFA\r\nSigninLogs\r\n| where TimeGenerated > ago (30d)\r\n| where AppDisplayName in (top20apps)\r\n| summarize TotalCount=count(),\r\n    MFACount=countif(AuthenticationRequirement == \"multiFactorAuthentication\"),\r\n    nonMFACount=countif(AuthenticationRequirement == \"singleFactorAuthentication\")\r\n    by AppDisplayName\r\n| project\r\n    AppDisplayName,\r\n    TotalCount,\r\n    MFACount,\r\n    nonMFACount,\r\n    MFAPercentage=(todouble(MFACount) * 100 / todouble(TotalCount))\r\n| sort by MFAPercentage asc  ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/a619f32b-ab3d-49af-922c-0a1a8ddd3c4a')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect Office child process ASR hits",
                "description": "Detects when you have audit hits on the \"Block all Office applications from creating child processes\" ASR rule. ",
                "body": "//Detects when you have audit hits on the \"Block all Office applications from creating child processes\" ASR rule. \r\n//For instance if you want to audit the impact for the MSDT vulnerability - https://msrc-blog.microsoft.com/2022/05/30/guidance-for-cve-2022-30190-microsoft-support-diagnostic-tool-vulnerability/\r\nDeviceEvents\r\n| where TimeGenerated > ago (30d)\r\n| where ActionType == \"AsrOfficeChildProcessAudited\"\r\n| where AdditionalFields.IsAudit == true\r\n| project\r\n    TimeGenerated,\r\n    DeviceName,\r\n    InitiatingProcessAccountName,\r\n    FileName,\r\n    ProcessCommandLine,\r\n    InitiatingProcessFileName",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/a6a90a7a-e19b-4c76-b1c7-b72a4104874c')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Active Directory - Detect on premises password reset for privileged Azure AD users",
                "description": "Detects when a user with a privileged Azure AD role has had their on premises Active Directory password changed by someone other than themselves.",
                "body": "//Detects when a user with a privileged Azure AD role has had their on premise password changed by someone other than themselves\r\nlet timeframe=7d;\r\n//First find any users that hold privileged Azure AD roles\r\nIdentityInfo\r\n| where TimeGenerated > ago(21d)\r\n| where isnotempty(AssignedRoles)\r\n| where AssignedRoles != \"[]\"\r\n| summarize arg_max(TimeGenerated, *) by AccountUPN\r\n| project AccountUPN, AccountName, AccountSID\r\n//Join those users based on AccountSID to on premises Active Directory password reset events\r\n| join kind=inner (\r\n    SecurityEvent\r\n    | where TimeGenerated > ago(timeframe)\r\n    | where EventID == \"4724\"\r\n    | project\r\n        TimeGenerated,\r\n        Activity,\r\n        SubjectAccount,\r\n        TargetAccount,\r\n        TargetSid,\r\n        SubjectUserSid\r\n    )\r\n    on $left.AccountSID == $right.TargetSid\r\n| where SubjectUserSid != TargetSid\r\n//Summarize event data to make it easy to read\r\n| project ['Time of Password Reset']=TimeGenerated, Activity, Actor=SubjectAccount, ['Target UserPrincipalName']=AccountUPN,['Target AccountName']=TargetAccount",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit",
                        "Active Directory"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/a6e857db-f06d-4595-a01c-8ff291053eaa')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find inactive apps",
                "description": "Find Azure AD applications that have had no signins for over 30 days. May be a sign of an app no longer in use or users bypassing SSO.",
                "body": "//Find Azure AD applications that have had no signins for over 30 days. May be a sign of an app no longer in use or users bypassing SSO.\r\nSigninLogs\r\n| where TimeGenerated > ago (365d)\r\n| where ResultType == 0\r\n| summarize arg_max(TimeGenerated, *) by AppId\r\n| project\r\n    AppDisplayName,\r\n    ['Last Logon Time']=TimeGenerated,\r\n    ['Days Since Last Logon']=datetime_diff(\"day\", now(), TimeGenerated)\r\n| where ['Days Since Last Logon'] > 30",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/a710a28d-67bd-4f51-b9f7-0a500fc6132f')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect Teamviewer connections",
                "description": "//Detects successful TeamViewer connections from internal to external IP addresses. If TeamViewer is a sanctioned app then you will get lots of hits of course.",
                "body": "//Detects successful TeamViewer connections from internal to external IP addresses\r\n//If TeamViewer is a sanctioned app then you will get lots of hits.\r\nDeviceNetworkEvents\r\n| where InitiatingProcessFileName contains \"teamviewer.exe\"\r\n| where ActionType == \"ConnectionSuccess\"\r\n| where LocalIPType == \"Private\"\r\n| where RemoteIPType == \"Public\"\r\n| project TimeGenerated,\r\n    DeviceName,\r\n    InitiatingProcessAccountName,\r\n    InitiatingProcessFileName,\r\n    LocalIP,\r\n    RemoteIP",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/a74a6bc1-9bc4-4c65-8c9d-9bd801e30216')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Summarize RDP activity",
                "description": "Summarize your devices by their RDP activity. The data is sorted to show total outbound RDP connections, a count of distinct RDP connections and the list of IP's connected to.",
                "body": "//Summarize your devices by their RDP activity. The data is sorted to show total outbound RDP connections, a count of distinct RDP connections and the list of IP's connected to.\r\n//Data is sorted by the devices with the most unique outbound RDP connections. Those devices have the biggest lateral movement blast radius.\r\nDeviceNetworkEvents\r\n| where TimeGenerated > ago(30d)\r\n| where ActionType == \"ConnectionSuccess\"\r\n| where RemotePort == \"3389\"\r\n//Exclude Defender for Identity that uses an initial RDP connection to map your network\r\n| where InitiatingProcessCommandLine <> \"\\\"Microsoft.Tri.Sensor.exe\\\"\"\r\n| summarize\r\n    ['RDP Outbound Connection Count']=count(),\r\n    ['RDP Distinct Outbound Endpoint Count']=dcount(RemoteIP),\r\n    ['RDP Outbound Endpoints']=make_set(RemoteIP)\r\n    by DeviceName\r\n| sort by ['RDP Distinct Outbound Endpoint Count'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/a82b183c-5100-4c5c-9bd8-e05c61bca0b5')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find top 20 risky IP addresses",
                "description": "Find the top 20 IP addresses that are unknown to Azure AD, with users using unknown devices and single factor auth",
                "body": "//Find the top 20 IP addresses that are unknown to Azure AD, with users using unknown devices and single factor auth\r\nlet top20locations=\r\n    SigninLogs\r\n    | where TimeGenerated > ago(30d)\r\n    | where ResultType == 0\r\n    | extend DeviceTrustType = tostring(DeviceDetail.trustType)\r\n    | where NetworkLocationDetails == '[]'\r\n        and isempty(DeviceTrustType)\r\n        and AuthenticationRequirement == \"singleFactorAuthentication\"\r\n    | summarize Count=count()by IPAddress\r\n    | top 20 by Count;\r\nSigninLogs\r\n| where ResultType == 0\r\n| where IPAddress in (top20locations)\r\n| summarize\r\n    ['Total Signin Count']=count(),\r\n    ['Distinct User Count']=dcount(UserPrincipalName),\r\n    ['List of Users']=make_set(UserPrincipalName),\r\n    ['Distinct Application Count']=dcount(AppDisplayName),\r\n    ['List of Applications']=make_set(AppDisplayName)\r\n    by IPAddress",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/a88c1bf6-1e27-4a59-81fd-d8c1f30d0029')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Find when files are shared from OneDrive to guests",
                "description": "Find when files are shared from OneDrive to third party guests\n\n\n",
                "body": "//Find when files are shared from OneDrive to third party guests\r\nOfficeActivity\r\n| where TimeGenerated > ago(7d)\r\n| where OfficeWorkload == \"OneDrive\"\r\n| where Operation in (\"SecureLinkCreated\", \"AddedToSecureLink\")\r\n| where TargetUserOrGroupType == \"Guest\" and TargetUserOrGroupName contains \"#EXT#\"\r\n| project\r\n    TimeGenerated,\r\n    ['User Who Shared']=UserId,\r\n    ['Guest Granted Access']=TargetUserOrGroupName,\r\n    ['File Shared']=OfficeObjectId\r\n| sort by TimeGenerated desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/a9df6907-f6a3-404b-9c3b-83b13be2db2c')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Summarize Teams apps installed",
                "description": "Summarize the applications installed into Teams in the last month. Apps are grouped into the scope they were installed to - Team, Chat or User and by name and application id\n",
                "body": "//Summarize the applications installed into Teams in the last month. Apps are grouped into the scope they were installed to - Team, Chat or User and by name and application id\r\nOfficeActivity\r\n| where TimeGenerated > ago (30d)\r\n| where Operation == \"AppInstalled\"\r\n| summarize\r\n    ['App Installed to Team Scope']=countif(OperationScope == \"Team\"),\r\n    ['App Installed to Chat Scope']=countif(OperationScope == \"Chat\"),\r\n    ['App Installed to User Scope']=countif(OperationScope == \"User\")\r\n    by AddonName, AzureADAppId\r\n| sort by AddonName asc  ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/abd3ce32-93ff-4f38-8d02-6c88bcfc5225')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Summarize user privilege on devices",
                "description": "Create a summary of each device showing all users who have logged on, separated into normal and local admin logons",
                "body": "//Create a summary of each device showing all users who have logged on, separated into normal and local admin logons\r\nDeviceLogonEvents\r\n| where TimeGenerated > ago(30d)\r\n| project DeviceName, ActionType, LogonType, AdditionalFields, InitiatingProcessCommandLine, AccountName, IsLocalAdmin\r\n| where ActionType == \"LogonSuccess\"\r\n| where LogonType == \"Interactive\"\r\n| where AdditionalFields.IsLocalLogon == true\r\n| where InitiatingProcessCommandLine == \"lsass.exe\"\r\n| summarize\r\n    ['Local Admin Count']=dcountif(AccountName,IsLocalAdmin == \"true\"),\r\n    ['Local Admins']=make_set_if(AccountName, IsLocalAdmin == \"true\"), \r\n    ['Standard User Count']=dcountif(AccountName, IsLocalAdmin == \"false\"),\r\n    ['Standard Users']=make_set_if(AccountName, IsLocalAdmin == \"false\")\r\n    by DeviceName\r\n| sort by ['Local Admin Count'] desc  ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/ac377512-d2b6-4d3f-abf0-b75f24a7d7e6')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Find top 20 random stats",
                "description": "Find the top 20 of a collection of varied data sets, no real detections in here just interesting data that is captured\n",
                "body": "//Find the top 20 of a collection of varied data sets, no real detections in here just interesting data that is captured\r\n//Top 20 files downloaded from your tenant\r\nOfficeActivity\r\n| where TimeGenerated > ago(30d)\r\n| where Operation in (\"FileSyncDownloadedFull\", \"FileDownloaded\")\r\n| summarize Count=count()by OfficeObjectId\r\n| top 20 by Count\r\n\r\n//Top 20 users downloading files from your tenant\r\nOfficeActivity\r\n| where TimeGenerated > ago(30d)\r\n| where Operation in (\"FileSyncDownloadedFull\", \"FileDownloaded\")\r\n| where UserId !contains \"#EXT#\"\r\n| summarize Count=count()by UserId\r\n| top 20 by Count\r\n\r\n//Top 20 guests downloading files from your tenant\r\nOfficeActivity\r\n| where TimeGenerated > ago(30d)\r\n| where Operation in (\"FileSyncDownloadedFull\", \"FileDownloaded\")\r\n| where UserId contains \"#EXT#\"\r\n| extend ['Guest UserPrincipalName'] = tostring(split(UserId,\"#\")[0])\r\n| summarize Count=count()by ['Guest UserPrincipalName']\r\n| top 20 by Count\r\n\r\n//Top 20 downloads from your tenant by guest domain\r\nOfficeActivity\r\n| where TimeGenerated > ago(30d)\r\n| where Operation in (\"FileSyncDownloadedFull\", \"FileDownloaded\")\r\n| where UserId contains \"#EXT#\"\r\n| extend ['Guest UserPrincipalName'] = tostring(split(UserId,\"#\")[0])\r\n| extend ['Guest Domain'] = tostring(split(['Guest UserPrincipalName'],\"_\")[-1])\r\n| summarize Count=count()by ['Guest Domain']\r\n| top 20 by Count\r\n\r\n//Top 20 users sharing files to guests\r\nOfficeActivity\r\n| where TimeGenerated > ago(30d)\r\n| where OfficeWorkload == \"OneDrive\"\r\n| where Operation in (\"SecureLinkCreated\", \"AddedToSecureLink\")\r\n| where TargetUserOrGroupType == \"Guest\" or TargetUserOrGroupName contains \"#EXT#\"\r\n| summarize Count=count() by UserId\r\n| top 20 by Count\r\n\r\n//Top 20 most shared files\r\nOfficeActivity\r\n| where TimeGenerated > ago(30d)\r\n| where OfficeWorkload == \"OneDrive\"\r\n| where Operation in (\"SecureLinkCreated\", \"AddedToSecureLink\")\r\n| summarize Count=count() by OfficeObjectId\r\n| top 20 by Count\r\n\r\n//Top 20 guests with files shared to them\r\nOfficeActivity\r\n| where TimeGenerated > ago(30d)\r\n| where OfficeWorkload == \"OneDrive\"\r\n| where Operation in (\"SecureLinkCreated\", \"AddedToSecureLink\")\r\n| where TargetUserOrGroupType == \"Guest\" or TargetUserOrGroupName contains \"#EXT#\"\r\n| summarize Count=count() by TargetUserOrGroupName\r\n| top 20 by Count\r\n\r\n//Top 20 guests added to Teams by distinct Team name\r\nOfficeActivity\r\n| where TimeGenerated > ago(30d)\r\n| where Operation == \"MemberAdded\"\r\n| mv-expand Members\r\n| extend UserAdded = tostring(Members.UPN)\r\n| where UserAdded contains \"#EXT#\"\r\n| where CommunicationType == \"Team\"\r\n| where UserId != \"Microsoft Teams Sync\"\r\n| summarize Count=dcount(TeamName) by UserId\r\n| top 20 by Count",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/ad8cc965-5241-4a9f-8156-63f9b0933663')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find single factor auth from privileged users",
                "description": "Finds users who hold a privileged Azure Active Directory role who are signing into applications using single factor",
                "body": "//Finds users who hold a privileged Azure Active Directory role who are signing into applications using single factor\r\nlet privusers=\r\n    IdentityInfo\r\n    | where TimeGenerated > ago(21d)\r\n    | summarize arg_max(TimeGenerated, *) by AccountUPN\r\n    | where isnotempty(AssignedRoles)\r\n    | where AssignedRoles != \"[]\"\r\n    | distinct AccountUPN;\r\nSigninLogs\r\n| where TimeGenerated > ago(30d)\r\n| where UserPrincipalName in~ (privusers)\r\n| where ResultType == 0\r\n| where AuthenticationRequirement == \"singleFactorAuthentication\"\r\n| summarize\r\n    ['List of Applications']=make_set(AppDisplayName),\r\n    ['Count of Applications']=dcount(AppDisplayName)\r\n    by UserPrincipalName\r\n| sort by ['Count of Applications'] desc",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/af5d6dbf-81d7-4df5-afad-4faa565ec1df')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize inbound vs outbound guest access",
                "description": "Visualize inbound Azure AD guests (other tenants connecting to your tenant) vs outbound (your users connecting to other tenants)\n",
                "body": "//Visualize inbound Azure AD guests (other tenants connecting to your tenant) vs outbound (your users connecting to other tenants)\r\nSigninLogs\r\n| where TimeGenerated > ago (30d)\r\n| where UserType == \"Guest\"\r\n| where ResultType == 0\r\n| summarize\r\n    ['Inbound Guests']=countif(AADTenantId != HomeTenantId and HomeTenantId != ResourceTenantId),\r\n    ['Outbound Guests']=countif(AADTenantId == HomeTenantId and ResourceTenantId != AADTenantId)\r\n    by bin(TimeGenerated, 1d)\r\n| render timechart with (title=\"Inbound Guest vs Outbound Guest Access\", ytitle=\"Number of connections\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/af97b383-083c-4b36-9230-9cb7f5ee7844')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Find devices with no ASR hits",
                "description": "Find devices in your environment that have never triggered an ASR rule, you can likely turn on ASR for these devices without causing issues for the users.\n",
                "body": "//Find devices in your environment that have never triggered an ASR rule, you can likely turn on ASR for these devices without causing issues for the users.\r\n//First find devices that have triggered an Attack Surface Reduction rule, either block or in audit mode.\r\nlet asrdevices=\r\n    DeviceEvents\r\n    | where TimeGenerated > ago (30d)\r\n    | where ActionType startswith \"Asr\"\r\n    | distinct DeviceName;\r\n//Find all devices and exclude those that have previously triggered a rule\r\nDeviceInfo\r\n| where TimeGenerated > ago (30d)\r\n| where OSPlatform startswith \"Windows\"\r\n| summarize arg_max(TimeGenerated, *) by DeviceName\r\n| where DeviceName !in (asrdevices)\r\n| project\r\n    ['Time Last Seen']=TimeGenerated,\r\n    DeviceId,\r\n    DeviceName,\r\n    OSPlatform,\r\n    OSVersion,\r\n    LoggedOnUsers",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/b01f1269-f3d6-4b42-9a8e-1b1700413109')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Log Analytics - Summarize table size changes",
                "description": "Calculate the change in size of all your tables from last week to this week",
                "body": "//Calculate the change in size of all your tables from last week to this week\r\nlet lastweek=\r\nunion withsource=_TableName *\r\n| where TimeGenerated > ago(14d) and TimeGenerated < ago(7d)\r\n| summarize\r\n    Entries = count(), Size = sum(_BilledSize) by Type\r\n| project ['Table Name'] = Type, ['Last Week Table Size'] = Size, ['Last Week Table Entries'] = Entries, ['Last Week Size per Entry'] = 1.0 * Size / Entries\r\n| order by ['Table Name']  desc;\r\nlet thisweek=\r\nunion withsource=_TableName *\r\n| where TimeGenerated > ago(7d)\r\n| summarize\r\n    Entries = count(), Size = sum(_BilledSize) by Type\r\n| project ['Table Name'] = Type, ['This Week Table Size'] = Size, ['This Week Table Entries'] = Entries, ['This Week Size per Entry'] = 1.0 * Size / Entries\r\n| order by ['Table Name']  desc;\r\nlastweek\r\n| join kind=inner thisweek on ['Table Name']\r\n| extend PercentageChange=todouble(['This Week Table Size']) * 100 / todouble(['Last Week Table Size'])\r\n| project ['Table Name'], ['Last Week Table Size'], ['This Week Table Size'], PercentageChange\r\n| sort by PercentageChange desc",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Log Analytics"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/b07ebb8a-5480-4a8c-bebf-750cf697026b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize non password auth methods",
                "description": "Create a pivot table of all non password authentication methods by user. This is useful to migrate users from less secure methods like text message to more secure methods.\n",
                "body": "//Create a pivot table of all non password authentication methods by user. This is useful to migrate users from less secure methods like text message to more secure methods.\r\nlet isGUID = \"[0-9a-z]{8}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{12}\";\r\nSigninLogs\r\n| where TimeGenerated > ago(30d)\r\n| mv-expand todynamic(AuthenticationDetails)\r\n| extend ['Authentication Method'] = tostring(AuthenticationDetails.authenticationMethod)\r\n//Exclude previously satisifed, passwords and other data and any UserPrincipalName that comes through as a guid\r\n| where ['Authentication Method'] !in (\"Previously satisfied\", \"Password\", \"Other\")\r\n    and isnotempty(['Authentication Method'])\r\n    and not(UserPrincipalName matches regex isGUID)\r\n//Create pivot table of each method and the count by user\r\n| evaluate pivot(['Authentication Method'], count(), UserPrincipalName)\r\n| sort by UserPrincipalName asc",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/b3b47fc6-e42d-4e91-a203-30b0ca64c609')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Find devices with open port 22",
                "description": "Find any devices enrolled into Defender that have created an inbound listening connection on port 22 and retrieve the process command line that opened the connection",
                "body": "//Find any devices enrolled into Defender that have created an inbound listening connection on port 22 and retrieve the process command line that opened the connection\r\nDeviceNetworkEvents\r\n| where TimeGenerated > ago(7d)\r\n| where ActionType == \"ListeningConnectionCreated\"\r\n| where LocalPort == 22\r\n| summarize\r\n    ['Total count of listening connections opened']=count(),\r\n    ['List of processes creating listening connections']=make_set(InitiatingProcessCommandLine)\r\n    by DeviceName\r\n| sort by ['Total count of listening connections opened'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/b4154c64-b2ef-48d3-96b6-ae0d941d172d')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Security Alert - Detect multiple low severity alerts",
                "description": "Detect when the same user or device triggers 3 or more low severity alerts in the space of a day",
                "body": "//Detect when the same user or device triggers 3 or more low severity alerts in the space of a day\r\nSecurityAlert\r\n| where TimeGenerated > ago (7d)\r\n| where AlertSeverity == \"Low\"\r\n| summarize\r\n    ['Count of low severity alerts']=dcount(AlertName),\r\n    ['List of low severity alerts']=make_set(AlertName)\r\n    by CompromisedEntity, bin(TimeGenerated, 1d)\r\n| where ['Count of low severity alerts'] >= 3",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Security Alert"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/b4b10adc-0efb-40e2-9f42-8da4dcedeffc')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Intune - Visualize device compliance over time",
                "description": "Visualize device compliance (compliant, non-compliant, managed by Config Manager, not evaluated or in grace period) per week over time\n",
                "body": "//Visualize device compliance (compliant, non-compliant, managed by Config Manager, not evaluated or in grace period) per week over time\r\nIntuneDevices\r\n| where TimeGenerated > ago (180d)\r\n| summarize arg_max(DeviceName, *) by DeviceName, startofweek(TimeGenerated)\r\n| where isnotempty(CompliantState)\r\n| summarize ComplianceCount=count()by CompliantState, startofweek(TimeGenerated)\r\n| render timechart\r\n    with (\r\n    ytitle=\"Device Count\",\r\n    xtitle=\"Week\",\r\n    title=\"Device compliance per week over time\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Intune"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/b4b117cb-e42d-45dc-aa6f-575b1eda7452')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Security Alert - Visualize identity protection forecast",
                "description": "Forecast the count of Azure AD Identity Protection Events events for the next 14 days based on the previous 30 days",
                "body": "//Forecast the count of Azure AD Identity Protection Events events for the next 14 days based on the previous 30 days\r\nSecurityAlert\r\n| where ProviderName == \"IPC\"\r\n| make-series [\"Azure AD Identity Protection Events\"]=count() on TimeGenerated from ago(30d) to now() + 14d step 1d\r\n| extend [\"Azure AD Identity Protection Events Forecast\"] = series_decompose_forecast(['Azure AD Identity Protection Events'], toint(14d / 1d))\r\n| render timechart ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Security Alert",
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/b635f3ef-d83c-436b-af39-c2e6788d742f')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Detect Exchange Scoping policy created",
                "description": "Detect when a new scoping policy is applied, scoping policies are used to limit permissions to Exchange mailboxes being accessed via OAuth. They should be configured with least privilege\n",
                "body": "//Detect when a new scoping policy is applied, scoping policies are used to limit permissions to Exchange mailboxes being accessed via OAuth. They should be configured with least privilege\r\nOfficeActivity\r\n| where Operation == \"New-ApplicationAccessPolicy\"\r\n| extend GroupPolicyAppliedTo = tostring(parse_json(Parameters)[1].Value)\r\n| extend AppId = tostring(parse_json(Parameters)[0].Value)\r\n| extend AccessRight = tostring(parse_json(Parameters)[2].Value)\r\n| project TimeGenerated, Actor=UserId, Operation, AccessRight, GroupPolicyAppliedTo, AppId",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/b6dcb4ef-1c66-41be-ab79-6660c81b712e')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect first time permissions addition",
                "description": "Detect when a user adds delegated or application permissions to an Azure AD app for the first time. Then retrieve the permissions added.\n",
                "body": "//Detect when a user adds delegated or application permissions to an Azure AD app for the first time.\r\n//Look back in the last year to find all users who have added access to an app\r\nlet newusers=\r\nAuditLogs\r\n| where TimeGenerated > ago(365d) and TimeGenerated < ago(1d)\r\n| where OperationName in (\"Add app role assignment to service principal\",\"Add delegated permission grant\")\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| distinct Actor\r\n//Find users who add access to an app for the first time in the last day\r\n| join kind=rightanti (\r\nAuditLogs\r\n| where TimeGenerated > ago(1d)\r\n| where OperationName in (\"Add app role assignment to service principal\",\"Add delegated permission grant\")\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| distinct Actor )\r\non Actor;\r\n//Retrieve the list of permissions granted by the first time users\r\nlet delegatedaccess=\r\n    AuditLogs\r\n    | where TimeGenerated > ago(1d)\r\n    | where OperationName has \"Add delegated permission grant\"\r\n    | extend x = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].newValue)))\r\n    | extend ['Permissions granted'] = split(x, ' ')\r\n    | extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    | where Actor in (newusers)\r\n    | extend ['Service Principal ObjectId'] = tostring(TargetResources[1].id)\r\n    | extend Activity = strcat(\"Delegated access added to application\")\r\n    | project\r\n        TimeGenerated,\r\n        Activity,\r\n        ['Permissions granted'],\r\n        ['Service Principal ObjectId'],\r\n        Actor;\r\nlet appaccess=\r\n    AuditLogs\r\n    | where TimeGenerated > ago(1d)\r\n    | where OperationName has \"Add app role assignment to service principal\"\r\n    | extend x = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].newValue)))\r\n    | extend ['Permissions granted'] = split(x, ' ')\r\n    | extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    | where Actor in (newusers)\r\n    | extend Activity = strcat(\"Application access added to application\")\r\n    | extend ['Service Principal ObjectId'] = tostring(TargetResources[1].id)\r\n    | project\r\n        TimeGenerated,\r\n        Activity,\r\n        ['Permissions granted'],\r\n        ['Service Principal ObjectId'],\r\n        Actor;\r\nunion delegatedaccess, appaccess",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/b73ddf2d-b317-4238-9c6b-bdb22dd382f2')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect attempts to tamper with MDE registry settings",
                "description": "Detect when a user or process attempts to tamper with Defender for Endpoint registry settings",
                "body": "//Detect when a user or process attempts to tamper with Defender for Endpoint registry settings\r\nDeviceEvents\r\n| where ActionType == \"TamperingAttempt\"\r\n| extend OriginalRegistryValue = tostring(AdditionalFields.OriginalValue)\r\n| extend Status = tostring(AdditionalFields.Status)\r\n| extend TamperingAction = tostring(AdditionalFields.TamperingAction)\r\n| extend AttemptedRegistryValue = tostring(AdditionalFields.TamperingAttemptedValue)\r\n| extend TargetRegistryKey = tostring(AdditionalFields.Target)\r\n| where TamperingAction == \"RegistryModification\"\r\n| project\r\n    TimeGenerated,\r\n    DeviceName,\r\n    TamperingAction,\r\n    Status,\r\n    OriginalRegistryValue,\r\n    AttemptedRegistryValue,\r\n    TargetRegistryKey,\r\n    InitiatingProcessAccountName,\r\n    InitiatingProcessCommandLine",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/b768c320-4dee-4c97-9a4b-8e186f028f77')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize Azure AD guest accounts by last sign in",
                "description": "Group your Azure AD guest accounts into the month they last signed in",
                "body": "//Group your Azure AD guest accounts into the month they last signed in\r\nSigninLogs\r\n| where TimeGenerated > ago (360d)\r\n| where UserType == \"Guest\" or UserPrincipalName contains \"#ext#\"\r\n| where ResultType == 0\r\n| summarize arg_max(TimeGenerated, *) by UserPrincipalName\r\n| project TimeGenerated, UserPrincipalName\r\n| summarize ['Inactive Guest Accounts']=make_set(UserPrincipalName) by Month=startofmonth(TimeGenerated)\r\n| sort by Month desc  ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins",
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/bcd3fb50-283e-4595-9800-26ce9fc4abab')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect multiple risk events from single user",
                "description": "Detect when a user flags 3 or more distinct Azure AD risk events within a single day",
                "body": "//Detect when a user flags 3 or more distinct Azure AD risk events within a single day\r\nAADUserRiskEvents\r\n| where TimeGenerated > ago(7d)\r\n| where RiskState != \"dismissed\"\r\n| summarize\r\n    ['Distinct count of risk events']=dcount(RiskEventType),\r\n    ['List of risk events']=make_set(RiskEventType)\r\n    by UserPrincipalName, bin(TimeGenerated, 1d)\r\n| where ['Distinct count of risk events'] >= 3",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/be5bb776-9841-4488-be4f-fbfcbb0015f3')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Summarize files flagging Smartscreen",
                "description": "Summarize the most common files in your environment flagging Smartscreen untrusted warnings",
                "body": "//Summarize the most common files in your environment flagging Smartscreen untrusted warnings\r\nDeviceEvents\r\n| where TimeGenerated > ago (30d)\r\n| where ActionType startswith \"SmartScreen\"\r\n| extend SmartScreenExperience = tostring(AdditionalFields.Experience)\r\n| where SmartScreenExperience == \"Untrusted\"\r\n| summarize Count=count()by FileName\r\n| sort by Count",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/bf115790-fe93-43bc-b644-abd0ced268c0')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect local user created",
                "description": "Detect when a local user account is created on an endpoint",
                "body": "//Detect when a local user account is created on an endpoint\r\n//Microsoft Sentinel query\r\nDeviceEvents\r\n| where TimeGenerated > ago(7d)\r\n| where ActionType == \"UserAccountCreated\"\r\n//Exclude defaultuser1 which is created by Windows through different processes \r\n| where AccountName != \"defaultuser1\"\r\n| project\r\n    TimeGenerated,\r\n    DeviceName,\r\n    ['Account Created Name']=AccountName,\r\n    Actor=InitiatingProcessAccountName",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/bf6923cd-ed45-443c-b4b5-42907bfc98a7')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize signins with no controls vs at least one control",
                "description": "Visualize signins to your Azure AD tenant with no controls (known device, known location or MFA) vs those with at least one of those controls",
                "body": "//Visualize signins to your Azure AD tenant with no controls (known device, known location or MFA) vs those with at least one of those controls\r\nSigninLogs\r\n| where TimeGenerated > ago(30d)\r\n| where ResultType == 0\r\n| extend DeviceTrustType = tostring(DeviceDetail.trustType)\r\n| summarize\r\n    ['Signins with no controls']=countif(NetworkLocationDetails == '[]' and AuthenticationRequirement == \"singleFactorAuthentication\" and isempty(DeviceTrustType)),\r\n    ['Signins with one or more controls']=countif(NetworkLocationDetails != '[]' or AuthenticationRequirement == \"multiFactorAuthentication\" or isnotempty(DeviceTrustType)) by\r\n    bin(TimeGenerated, 1d)\r\n| render timechart with (title=\"Azure AD signins no controls vs one or more controls\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/bf6f43df-4199-4723-9d48-fda4a450c29e')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find users failing to use SSPR",
                "description": "Detect users who are trying to use self service password reset but failing as they don't have any authentication methods listed\n",
                "body": "//Detect users who are trying to use self service password reset but failing as they don't have any authentication methods listed\r\nAuditLogs\r\n| where LoggedByService == \"Self-service Password Management\"\r\n| extend User = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| extend ['User IP Address'] = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)\r\n| sort by TimeGenerated asc \r\n| summarize ['SSPR Actions']=make_list(ResultReason) by CorrelationId, User, ['User IP Address']\r\n| where ['SSPR Actions'] has \"User's account has insufficient authentication methods defined. Add authentication info to resolve this\"\r\n| sort by User desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/c016805f-d022-4d76-8d37-1acb24ff47de')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Find time between upload and malware detection",
                "description": "Calculate the time Office 365 took to detect malware after the file was uploaded\n",
                "body": "//Calculate the time Office 365 took to detect malware after the file was uploaded\r\n//First find the malware detection event\r\nOfficeActivity\r\n| where TimeGenerated > ago(60d)\r\n| where Operation == \"FileMalwareDetected\"\r\n| project\r\n    DetectionTime=TimeGenerated,\r\n    OfficeWorkload,\r\n    ['File Name']=SourceFileName,\r\n    ['File Location']=OfficeObjectId\r\n//Then join back to the upload event on the same file location\r\n| join kind=inner \r\n    (\r\n    OfficeActivity\r\n    | where TimeGenerated > ago (60d)\r\n    | where Operation in (\"FileUploaded\", \"FileSyncUploadedFull\")\r\n    | project\r\n        UploadTime=TimeGenerated,\r\n        OfficeWorkload,\r\n        ['File Name']=SourceFileName,\r\n        ['File Location']=OfficeObjectId,\r\n        ['Relative File URL']=SourceRelativeUrl\r\n    | summarize min(UploadTime) by ['File Location'], UploadTime\r\n    )\r\n    on ['File Location']\r\n//Calculate the time difference between upload and malware detection\r\n| project\r\n    ['File Name'],\r\n    UploadTime,\r\n    DetectionTime,\r\n    ['Time Difference in Minutes']=datetime_diff(\"minute\", DetectionTime, UploadTime),\r\n    ['File Location']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/c03b745a-32a5-44dd-8db9-7c5455f1b82f')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure Key Vault - Detect IP added to firewall",
                "description": "Detects when an IP address has been added to an Azure Key Vault firewall allow list\n",
                "body": "// Detects when an IP address has been added to an Azure Key Vault firewall allow list\r\nAzureDiagnostics\r\n| where ResourceType == \"VAULTS\"\r\n| where OperationName == \"VaultPatch\"\r\n| where ResultType == \"Success\"\r\n| where isnotempty(addedIpRule_Value_s)\r\n| project\r\n    TimeGenerated,\r\n    VaultName=Resource,\r\n    SubscriptionId,\r\n    IPAddressofActor=CallerIPAddress,\r\n    Actor=identity_claim_http_schemas_xmlsoap_org_ws_2005_05_identity_claims_upn_s,\r\n    IPRangeAdded=addedIpRule_Value_s",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure Key Vault"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/c11b9ce2-c660-4a6e-acc8-f6b23556ec7f')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Find new devices onboarded",
                "description": "Find new devices onboarded to Defender in the last month",
                "body": "//Find new devices onboarded to Defender in the last month\r\nlet knowndevices=\r\n    DeviceNetworkInfo\r\n    | where TimeGenerated > ago (180d) and TimeGenerated < ago(30d)\r\n    | distinct DeviceName;\r\nDeviceNetworkInfo\r\n| where TimeGenerated > ago (30d)\r\n| summarize arg_min(TimeGenerated, *) by DeviceName\r\n| where DeviceName !in (knowndevices)\r\n| project TimeGenerated, DeviceName\r\n| extend ['Days Since First Seen']=datetime_diff(\"day\", now(), TimeGenerated)\r\n| project ['Time First Seen']=TimeGenerated, ['Days Since First Seen'], DeviceName\r\n| sort by ['Days Since First Seen'] desc  ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/c29e5805-15dd-427f-8351-50d9f2ea384e')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "DCA - Find new events",
                "description": "Find new events in Defender for Cloud Apps seen in the last week vs the previously 90 days",
                "body": "//Find new events in Defender for Cloud Apps seen in the last week vs the previously 90 days\r\n//First find all the activities from the last 90 days prior to this week\r\nlet knownactivities=\r\n    CloudAppEvents\r\n    | where TimeGenerated > ago(90d) and TimeGenerated < ago (7d)\r\n    | extend Operation = tostring(RawEventData.Operation)\r\n    | extend UserId = tostring(RawEventData.UserId)\r\n    | extend Workload = tostring(RawEventData.Workload)\r\n    //Create a new column that adds workload and operation together to make the events more readable\r\n    | extend Activity = strcat(Workload, \" - \", Operation)\r\n    | distinct Activity;\r\n//Find activities from the last week\r\nCloudAppEvents\r\n| where TimeGenerated > ago(7d)\r\n| extend Operation = tostring(RawEventData.Operation)\r\n| extend UserId = tostring(RawEventData.UserId)\r\n| extend Workload = tostring(RawEventData.Workload)\r\n//Create a new column that adds workload and operation together to make the events more readable\r\n| extend Activity = strcat(Workload, \" - \", Operation)\r\n//Exclude activities we have already seen\r\n| where Activity !in (knownactivities)\r\n//Find the time the new activity was first seen and how many counts seen this week\r\n| summarize ['First Time Seen']=min(TimeGenerated), Count=count() by Activity\r\n| sort by Count desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Cloud Apps"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/c3a67dd0-8e48-4caf-bd7a-fae2be68d832')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Find PowerShell run by users connecting to the internet",
                "description": "Find users that are connecting to internet endpoints via PowerShell commands",
                "body": "//Find users that are connecting to internet endpoints via PowerShell commands\nDeviceNetworkEvents\n| project\n    TimeGenerated,\n    InitiatingProcessAccountName,\n    InitiatingProcessCommandLine,\n    DeviceName,\n    LocalIPType,\n    LocalIP,\n    RemoteIPType,\n    RemotePort,\n    RemoteIP,\n    RemoteUrl\n//Exclude system processes\n| where InitiatingProcessAccountName != \"system\"\n| where InitiatingProcessCommandLine contains \"powershell\"\n| where LocalIPType == \"Private\"\n| where RemoteIPType == \"Public\"\n| project\n    TimeGenerated,\n    DeviceName,\n    InitiatingProcessAccountName,\n    InitiatingProcessCommandLine,\n    LocalIP,\n    RemoteIP,\n    RemotePort,\n    RemoteUrl\n//Exclude system initiated events as this is a user detection\n| where InitiatingProcessAccountName <> \"local service\"\n| sort by TimeGenerated desc \n",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/c47bc1eb-fdb1-4d3a-99c1-2de2edf398bb')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDI - Summarize cleartext LDAP",
                "description": "Summarize the accounts in your environment using cleartext LDAP connections",
                "body": "//Summarize the accounts in your environment using cleartext LDAP connections\r\nIdentityLogonEvents\r\n| where TimeGenerated > ago (30d)\r\n| where LogonType == \"LDAP cleartext\"\r\n| summarize\r\n    ['Total connection count']=count(),\r\n    ['Distinct destination device count']=dcount(DestinationDeviceName),\r\n    ['List of destination devices']=make_set(DestinationDeviceName)\r\n    by AccountUpn\r\n| sort by ['Distinct destination device count'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Identity"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/c5be1eb9-7c5c-493c-a818-202d07c14583')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Active Directory - Detect when 'log on to' list changes",
                "description": "Detect when the 'Log on to' device list is changed for a user",
                "body": "//Alert when the 'Log on to' device list is changed for a user\r\nSecurityEvent\r\n| where EventID == 4738\r\n| where AccountType == \"User\"\r\n//Include domain accounts only (excluding local accounts)\r\n| where TargetDomainName == SubjectDomainName\r\n| extend ['Allowed Devices'] = case(isnotempty(UserWorkstations) and UserWorkstations != \"-\" and UserWorkstations != \"%%1793\", split(UserWorkstations, \",\"),\r\n    (isnotempty(UserWorkstations) and UserWorkstations == \"%%1793\"), strcat(\"User can log onto all devices\"),\r\n    \"unknown\")\r\n//Exclude other 4738 events where the device list isn't changed\r\n| where ['Allowed Devices'] != \"unknown\"\r\n| project TimeGenerated, Actor=SubjectAccount, User=TargetAccount, ['Allowed Devices']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Active Directory"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/c62b8cc4-0fb3-4801-a7cd-c24d7f602fa0')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find guests accessing most applications",
                "description": "Find the guests in your tenant connecting to the most applications. They are the biggest risk and the best target for additional controls like Conditional Access.\n",
                "body": "//Find the guests in your tenant connecting to the most applications. They are the biggest risk and the best target for additional controls like Conditional Access.\r\nSigninLogs\r\n| where TimeGenerated > ago(30d)\r\n| where ResultType == 0\r\n| where UserType == \"Guest\"\r\n//Exclude the Microsoft apps for guest account management\r\n| where AppDisplayName !in (\"My Apps\", \"Microsoft App Access Panel\", \"My Access\", \"My Profile\", \"Microsoft Invitation Acceptance Portal\")\r\n| summarize\r\n    ['Count of Applications']=dcount(AppDisplayName),\r\n    ['List of Application']=make_set(AppDisplayName)\r\n    by UserPrincipalName\r\n| sort by ['Count of Applications'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/c80e2092-d333-4082-b6c0-05d4a6c579a6')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Security Alert - Find malicious file hash from email",
                "description": "When Defender for Office 365 removes a malicious file from an email track down all device events with the same file hash",
                "body": "let filehashes=\nSecurityAlert\n| where TimeGenerated > ago (30d)\n| where ProviderName == \"OATP\"\n| where AlertName == \"Email messages containing malicious file removed after delivery​\"\n| mv-expand todynamic(Entities)\n| extend Files = Entities.Files\n| project Files\n| mv-expand Files\n| extend FileHashes = Files.FileHashes\n| mv-expand FileHashes\n| extend FileHash = tolower(tostring(FileHashes.Value))\n| where isnotempty( FileHash)\n| distinct FileHash;\nDeviceFileEvents\n    | where TimeGenerated > ago(30d)\n    | project\n        TimeGenerated,\n        ActionType,\n        FileName,\n        DeviceName,\n        SHA256,\n        InitiatingProcessAccountUpn \n| where SHA256 in (filehashes)",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint",
                        "Security Alert"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/c892d3bd-9195-4fa7-850b-44690d18f13d')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize MFA registration IP info",
                "description": "When a user registers or updates MFA details, take that IP address and summarize sign in events for that user and IP address for the last 30 days.",
                "body": "//When a user registers or updates MFA details, take that IP address and summarize sign in events for that user and IP address for the last 30 days.\r\n//If they have never signed in or signed in a few times from that IP it may a sign the account has been compromised and a threat actor has added MFA details\r\nlet failureCodes = dynamic([50053, 50126, 50055]);\r\nlet successCodes = dynamic([0, 50055, 50057, 50155, 50105, 50133, 50005, 50076, 50079, 50173, 50158, 50072, 50074, 53003, 53000, 53001, 50129]);\r\nAuditLogs\r\n| where TimeGenerated > ago(1d)\r\n| where OperationName in~ (\"Admin registered security info\", \"Admin updated security info\", \"Admin deleted security info\", \"User registered security info\", \"User changed default security info\", \"User deleted security info\")\r\n| extend UserPrincipalName = tostring(TargetResources[0].userPrincipalName)\r\n| extend IPAddress = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)\r\n| project ['MFA Event Time']=TimeGenerated, OperationName, UserPrincipalName, IPAddress\r\n| join kind=inner(\r\n    SigninLogs\r\n    | where TimeGenerated > ago (30d)\r\n    )\r\n    on UserPrincipalName, IPAddress\r\n| project\r\n    TimeGenerated,\r\n    ['MFA Event Time'],\r\n    OperationName,\r\n    ResultType,\r\n    UserPrincipalName,\r\n    IPAddress\r\n| summarize\r\n    ['Count of successful sign ins from MFA IP Address'] = countif(ResultType in(successCodes)),\r\n    ['Count of failed sign ins from MFA IP Address'] = countif(ResultType in(failureCodes))\r\n    by UserPrincipalName, OperationName, IPAddress, ['MFA Event Time']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins",
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/c8ccba7e-26b7-4234-9f8c-1a2f7abc84b9')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Detect when malware uploaded to Office 365",
                "description": "Alerts when a file believed to be malware is uploaded to your Office 365 tenant in SharePoint or OneDrive\n",
                "body": "//Alerts when a file believed to be malware is uploaded to your Office 365 tenant in SharePoint or OneDrive\r\nOfficeActivity\r\n| where TimeGenerated > ago(30d)\r\n| where Operation == \"FileMalwareDetected\"\r\n| project\r\n    TimeGenerated,\r\n    OfficeWorkload,\r\n    ['File Name']=SourceFileName,\r\n    ['File Location']=OfficeObjectId,\r\n    ['Relative File URL']=SourceRelativeUrl,\r\n    ClientIP",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/c92a2f0f-e050-4315-8102-8e6319a007ba')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect first time legacy auth use",
                "description": "Find users that have connected successfully via legacy auth for the first time",
                "body": "//Find users that have connected successfully via legacy auth for the first time\r\n//First find users with existing successful legacy auth connections\r\n//Microsoft Sentinel query\r\nlet knownusers=\r\n    SigninLogs\r\n    | where TimeGenerated > ago(90d) and TimeGenerated < ago(1d)\r\n    | where ResultType == 0\r\n    | where ClientAppUsed !in (\"Mobile Apps and Desktop clients\", \"Browser\")\r\n    | distinct UserPrincipalName;\r\n//Find any new connections in the last day from users not in the existing list\r\nSigninLogs\r\n| where TimeGenerated > ago(1d)\r\n| where ResultType == 0\r\n| where ClientAppUsed !in (\"Mobile Apps and Desktop clients\", \"Browser\")\r\n| where isnotempty(ClientAppUsed)\r\n| where UserPrincipalName !in (knownusers)\r\n| distinct UserPrincipalName, AppDisplayName, ClientAppUsed, IPAddress",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/cc6139d0-ae1e-4876-936c-0c55971dabef')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDI - Detect kerberos delegation changes",
                "description": "Alert when Defender for Identity detects a change in kerberos constrained delegation configuration on a device",
                "body": "//Alert when Defender for Identity detects a change in kerberos constrained delegation configuration on a device\r\nIdentityDirectoryEvents\r\n| where ActionType == \"Account Constrained Delegation changed\"\r\n| extend AF = parse_json(AdditionalFields)\r\n| extend ['Previous Delegation Setting'] = AF.[\"FROM AccountConstrainedDelegationState\"]\r\n| extend ['Current Delegation Setting'] = AF.[\"TO AccountConstrainedDelegationState\"]\r\n| extend ['Device Operating System'] = AF.TargetComputerOperatingSystem\r\n| project\r\n    TimeGenerated,\r\n    TargetDeviceName,\r\n    ['Device Operating System'],\r\n    ['Previous Delegation Setting'],\r\n    ['Current Delegation Setting']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Identity"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/cc91ac95-addd-488b-a29a-a048a0fe15d0')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Summarize macro usage",
                "description": "Summarize macro usage on your devies by creating a list all macros used, a count of how many users are using each one and the usernames",
                "body": "union DeviceFileEvents, DeviceNetworkEvents\r\n| where TimeGenerated > ago(30d)\r\n| project InitiatingProcessCommandLine, InitiatingProcessAccountName\r\n| where InitiatingProcessCommandLine startswith '\"EXCEL.EXE'  \r\n| where InitiatingProcessCommandLine endswith '.xltm\"' or InitiatingProcessCommandLine endswith '.xlsm\"'\r\n//Retrieve distinct values for process, hash and account\r\n| distinct InitiatingProcessCommandLine, InitiatingProcessAccountName\r\n//Parse the file path and file name from the process\r\n| parse-where InitiatingProcessCommandLine with * '\"EXCEL.EXE\" \"' ['Macro Filename'] '\"' *\r\n//Summarize the list of macro files by which users have used them\r\n| summarize ['List of Users']=make_set(InitiatingProcessAccountName), ['Count of Users']=dcount(InitiatingProcessAccountName) by ['Macro Filename']\r\n| sort by ['Count of Users'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/ccff2cb3-5432-4f88-8078-b5fd9f3e7592')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Visualize most blocked domains",
                "description": "Visualize the most blocked domains sending email inbound to your users",
                "body": "//Visualize the most blocked domains sending email inbound to your users\r\nEmailEvents\r\n| where TimeGenerated > ago (7d)\r\n| where EmailDirection == \"Inbound\"\r\n| where DeliveryAction == \"Blocked\"\r\n| extend Domain = tostring(split(SenderMailFromAddress, \"@\")[-1])\r\n| summarize BlockedCount=count()by Domain\r\n| where isnotempty(Domain)\r\n| sort by BlockedCount desc\r\n| render barchart  ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/cdfece30-6b7a-426e-8e7c-09d591c3b90b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize service principal IP addresses",
                "description": "Make a set of IP addresses that your Azure AD service principals have signed in from\n",
                "body": "//Make a set of IP addresses that your Azure AD service principals have signed in from\r\nAADServicePrincipalSignInLogs\r\n| where TimeGenerated > ago(90d)\r\n| where ResultType == \"0\"\r\n| summarize ['List of IP Addresses']=make_set(IPAddress), ['Count of Unique IP Addresses']=dcount(IPAddress) by ServicePrincipalName, AppId\r\n| sort by ['Count of Unique IP Addresses'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/ce08ce03-31d1-4828-8e78-1cb495d49f9b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect potential DNS tunnelling",
                "description": "Identifies potential DNS tunnelling over HTTPS ",
                "body": "//Identifies potential DNS tunnelling over HTTPS \r\nDeviceNetworkEvents\r\n| where ActionType == \"NetworkSignatureInspected\"\r\n| extend AF = parse_json(AdditionalFields)\r\n| extend NetworkSignature = AF.SignatureName\r\n//Search for network signatures that are DNS but not on regular DNS ports including Netbios & LLMNR if those are in use\r\n| where NetworkSignature == \"DNS_Request\" and RemotePort !in (\"53\", \"137\", \"5353\", \"5355\")\r\n//Exclude traffic where the remote IP is a private/local IP address, you can remove this if also interested in that traffic\r\n| where not(ipv4_is_private(RemoteIP))\r\n| project\r\n    TimeGenerated,\r\n    DeviceName,\r\n    NetworkSignature,\r\n    LocalIP,\r\n    LocalPort,\r\n    RemoteIP,\r\n    RemotePort,\r\n    RemoteUrl",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "DNS",
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/cf2c5007-d863-46f1-a942-226962aaf68e')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Heartbeat - Visualize distinct computers sending data per month",
                "description": "Visualize distinct computers per month sending data",
                "body": "//Visualize distinct computers per month sending data\r\nHeartbeat\r\n| where TimeGenerated > ago(365d)\r\n| summarize Count=dcount(Computer)by Month=startofmonth(TimeGenerated)\r\n| render columnchart with (title=\"Distinct monthly computers sending data to Microsoft Sentinel\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Agent Health"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/cf95fc4b-83e5-4bb8-bf47-2514970a38b8')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find inactive PIM users",
                "description": "Find users who have not elevated any roles in Azure AD PIM in 30 days",
                "body": "//Find users who have not elevated any roles in Azure AD PIM in 30 days\r\nAuditLogs\r\n| where TimeGenerated > ago (365d)\r\n| project TimeGenerated, OperationName, Result, TargetResources, InitiatedBy\r\n| where OperationName == \"Add member to role completed (PIM activation)\"\r\n| where Result == \"success\"\r\n| extend ['Last Role Activated'] = tostring(TargetResources[0].displayName)\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| summarize arg_max(TimeGenerated, *) by Actor\r\n| project\r\n    Actor,\r\n    ['Last Role Activated'],\r\n    ['Last Activation Time']=TimeGenerated,\r\n    ['Days Since Last Activation']=datetime_diff(\"day\", now(), TimeGenerated)\r\n| where ['Days Since Last Activation'] >= 30\r\n| sort by ['Days Since Last Activation'] desc",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/cfeb74fa-a151-4121-9d59-f50c8143cc85')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Detect guest added to multiple Teams quickly",
                "description": "Detect when a guest is added to multiple Teams in a short time frame.",
                "body": "//Detect when a guest is added to multiple Teams in a short time frame.\r\n//Define a time period to check and the threshold of how many Teams to alert on.\r\nlet timeframe=15m;\r\nlet threshold=2;\r\nOfficeActivity\r\n| where TimeGenerated > ago(1d)\r\n| where Operation == \"MemberAdded\"\r\n| mv-expand Members\r\n| extend UserAdded = tostring(Members.UPN)\r\n| where UserAdded contains \"#EXT#\"\r\n| where CommunicationType == \"Team\"\r\n| summarize\r\n    ['Number of Teams Guest Added To']=dcount(TeamName), ['Team Names']=make_set(TeamName) by UserAdded, bin(TimeGenerated, timeframe)\r\n| where ['Number of Teams Guest Added To'] >= threshold",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/d03db450-12b9-45a4-967e-01533d35d295')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Visualize spam percentage",
                "description": "Visualize how much is email is being blocked as a percentage of total email over time",
                "body": "//Visualize how much is email is being blocked as a percentage of total email over time\r\nEmailEvents\r\n| where TimeGenerated > ago (30d)\r\n| where EmailDirection == \"Inbound\"\r\n| summarize\r\n    TotalCount=count(),\r\n    BlockedCount=countif(DeliveryAction in (\"Blocked\", \"Junked\"))\r\n    by bin(TimeGenerated, 6h)\r\n| extend Percentage=(todouble(BlockedCount) * 100 / todouble(TotalCount))\r\n| project-away TotalCount, BlockedCount\r\n| render timechart with (title=\"Percentage of email blocked over time\", ymax=100)",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/d0ab0e39-7800-468f-ac0f-db5571b0c86e')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find CA policies with no hits",
                "description": "Find Azure AD conditional access policies that have no hits for 'success' or 'failure' over the last month. Check these policies are configured correctly and still in use.",
                "body": "//Find Azure AD conditional access policies that have no hits for 'success' or 'failure' over the last month\r\nSigninLogs\r\n| where TimeGenerated > ago (30d)\r\n| project TimeGenerated, ConditionalAccessPolicies\r\n| mv-expand ConditionalAccessPolicies\r\n| extend CAResult = tostring(ConditionalAccessPolicies.result)\r\n| extend ['Conditional Access Policy Name'] = tostring(ConditionalAccessPolicies.displayName)\r\n| summarize ['Conditional Access Result']=make_set(CAResult) by ['Conditional Access Policy Name']\r\n| where ['Conditional Access Result'] !has \"success\"\r\n    and ['Conditional Access Result'] !has \"failure\"\r\n    and ['Conditional Access Result'] !has \"unknownFutureValue\"\r\n| sort by ['Conditional Access Policy Name'] asc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/d1e5ea27-defc-4e52-a7f1-58185776558c')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect domain changes to external identities",
                "description": "Detect when a domain is added or removed to either the allow or block list in Azure AD external identities",
                "body": "//Detect when a domain is added or removed to either the allow or block list in Azure AD external identities\r\nAuditLogs\r\n| where OperationName == \"Update policy\"\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| mv-expand TargetResources\r\n| extend modifiedProperties = parse_json(TargetResources).modifiedProperties\r\n| mv-expand modifiedProperties  \r\n| extend newValue = parse_json(modifiedProperties).newValue\r\n| mv-expand todynamic(newValue)\r\n| where newValue has \"InvitationsAllowedAndBlockedDomainsPolicy\"\r\n| project TimeGenerated, OperationName, Actor, ['New Domain Policy']=newValue",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/d2051fe2-3045-4eed-abdf-9df610ea37d8')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure Key Vault - Detect sensitive operations",
                "body": "// Detects Key Vault operations that could be malicious\r\nlet operationlist = dynamic(\r\n    [\"VaultDelete\", \"KeyDelete\", \"SecretDelete\", \"SecretPurge\", \"KeyPurge\", \"SecretBackup\", \"KeyBackup\", \"SecretListDeleted\", \"CertificateCreate\", \"CertificatePurge\"]);\r\nAzureDiagnostics\r\n| where ResourceType == \"VAULTS\" and ResultType == \"Success\" \r\n| where OperationName in (operationlist)\r\n| project TimeGenerated,\r\n    ResourceGroup,\r\n    SubscriptionId,\r\n    KeyVaultName=Resource,\r\n    KeyVaultTarget=id_s,\r\n    Actor=identity_claim_upn_s,\r\n    IPAddressofActor=CallerIPAddress,\r\n    OperationName",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure Key Vault"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/d2250c9a-7e5a-4f18-8c2b-a4568ce9978e')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Detect potential network recon",
                "description": "Detect when the same device attempts to connect to multiple devices and is denied within a short time frame",
                "body": "//Detect when the same device attempts to connect to multiple devices and is denied within a short time frame\r\n//This example will alert when the same device attempts to connect to three or more different devices in 30 minutes\r\nDeviceEvents\r\n| where ActionType == \"FirewallInboundConnectionBlocked\"\r\n| summarize\r\n    ['Count of Devices']=dcount(DeviceName),\r\n    ['List of Devices']=make_set(DeviceName)\r\n    by RemoteIP, bin(TimeGenerated, 30m)\r\n| where ['Count of Devices'] >= 3",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/d388ed1f-cbfe-4307-92d4-37cccfe141a0')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find new Azure AD audit operations",
                "description": "Find any new operations generated in the Azure AD audit table in the last week compared to the last 90 days",
                "body": "//Find any new operations generated in the Azure AD audit table in the last week compared to the last 90 days\r\nlet existingoperations=\r\n    AuditLogs\r\n    | where TimeGenerated > ago(90d) and TimeGenerated < ago(7d)\r\n    | distinct OperationName;\r\nAuditLogs\r\n| where TimeGenerated > ago(7d)\r\n| summarize Count=count() by OperationName, Category\r\n| where OperationName !in (existingoperations)\r\n| sort by Count desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/d414dc7b-8fb3-4223-8456-36f034530f16')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Visualize proccesses using port 22",
                "description": "Summarize and visualize the different parent filenames initiating TCP port 22 connections",
                "body": "//Summarize and visualize the different parent filenames initiating TCP port 22 connections\r\nDeviceNetworkEvents\r\n| where TimeGenerated > ago(30d)\r\n| where ActionType == \"ConnectionSuccess\"\r\n| where RemotePort == 22\r\n| where isnotempty(InitiatingProcessFileName)\r\n| summarize Count=count() by InitiatingProcessFileName\r\n| top 20 by Count\r\n| render barchart with (title=\"Proccesses initiating TCP port 22 connections\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/d461ee6c-de71-4eb8-a282-3fd0e2275d6f')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure - Find Azure Bastion usage",
                "description": "Find which users have attempted to connect to virtual machines using RDP or SSH in Azure Bastion",
                "body": "//Find which users have attempted to connect to virtual machines using RDP or SSH in Azure Bastion\r\nMicrosoftAzureBastionAuditLogs\r\n| parse TargetResourceId with * 'VIRTUALMACHINES/' ['Virtual Machine Name']\r\n| project\r\n    TimeGenerated,\r\n    Message,\r\n    UserName,\r\n    Protocol,\r\n    ['Virtual Machine Name'],\r\n    ['Virtual Machine IP']=TargetVMIPAddress\r\n| sort by TimeGenerated desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure Resources"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/d8b25b40-676c-4d7a-8465-ae85dc19697b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure Key Vault - Find first time app access",
                "description": "Searches for access by applications that have not previously accessed an Azure Key Vault in the last 30 days and returns all actions by those applications\n",
                "body": "//Searches for access by applications that have not previously accessed an Azure Key Vault in the last 30 days and returns all actions by those applications\r\nlet operationlist = dynamic([\"SecretGet\", \"KeyGet\", \"VaultGet\"]);\r\nlet starttime = 30d;\r\nlet endtime = 1d;\r\nlet detection=\r\n    AzureDiagnostics\r\n    | where TimeGenerated between (ago(starttime) .. ago(endtime))\r\n    | where ResourceType == \"VAULTS\"\r\n    | where ResultType == \"Success\"\r\n    | where OperationName in (operationlist)\r\n    | where isnotempty(identity_claim_appid_g)\r\n    | project-rename KeyVaultName=Resource, AppId=identity_claim_appid_g\r\n    | distinct KeyVaultName, AppId\r\n    | join kind=rightanti  (\r\n        AzureDiagnostics\r\n        | where TimeGenerated > ago(endtime)\r\n        | where ResourceType == \"VAULTS\"\r\n        | where ResultType == \"Success\"\r\n        | where OperationName in (operationlist)\r\n        | where isnotempty(identity_claim_appid_g)\r\n        | project-rename\r\n            KeyVaultName=Resource,\r\n            AppId=identity_claim_appid_g\r\n        | distinct KeyVaultName, AppId)\r\n        on KeyVaultName, AppId;\r\nAzureDiagnostics\r\n| where TimeGenerated > ago(endtime)\r\n| where ResourceType == \"VAULTS\"\r\n| where ResultType == \"Success\"\r\n| project-rename\r\n    KeyVaultName=Resource,\r\n    AppId=identity_claim_appid_g\r\n| join kind=inner detection on KeyVaultName, AppId\r\n| project\r\n    TimeGenerated,\r\n    AppId,\r\n    ResourceGroup,\r\n    SubscriptionId,\r\n    KeyVaultName,\r\n    KeyVaultTarget=id_s,\r\n    OperationName",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure Key Vault"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/d8be26e6-9b2c-44dc-9909-9270680c76fd')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find service principals with multiple locations",
                "description": "Find Azure AD service principals that are logging on from multiple locations, this should be less common than with user accounts",
                "body": "//Find Azure AD service principals that are logging on from multiple locations, this should be less common than with user accounts\r\n//Return the IP addresses used to sign in and see if you can build conditional access policies around them\r\nAADServicePrincipalSignInLogs\r\n| where TimeGenerated > ago(30d)\r\n| where ResultType == \"0\"\r\n| where isnotempty(Location)\r\n| summarize\r\n    ['Count of Locations']=dcount(Location),\r\n    ['List of Locations']=make_set(Location),\r\n    ['Count of IP Addresses']=dcount(IPAddress),\r\n    ['List of IP Addresses']=make_set(IPAddress)\r\n    by ServicePrincipalName, AppId\r\n| where ['Count of Locations'] >= 2",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/d972079f-e794-415e-bef0-234615d7d56a')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Active Directory - Detect when group policy inheritance changed",
                "description": "Detect when group policy inheritance is either allowed or blocked",
                "body": "//Detect when group policy inheritance is either allowed or blocked\r\nSecurityEvent\r\n| project TimeGenerated, EventID, EventData, SubjectAccount\r\n| where EventID == \"5136\"\r\n| parse EventData with * 'ObjectDN\">' OU '</Data' *\r\n| parse EventData with * 'AttributeLDAPDisplayName\">' LDAPAttribute '</Data' *\r\n| parse EventData with * 'AttributeValue\">' AttributeValue '</Data' *\r\n| parse EventData with * 'OperationType\">%%' OperationType '</Data' *\r\n| project\r\n    TimeGenerated,\r\n    Actor=SubjectAccount,\r\n    OU,\r\n    LDAPAttribute,\r\n    AttributeValue,\r\n    OperationType\r\n| where LDAPAttribute == \"gPOptions\"\r\n| where AttributeValue == \"1\"\r\n| extend Activity = case\r\n(OperationType == \"14674\" and AttributeValue == \"1\", strcat(\"Group Policy Inheritance Blocked\"),\r\n OperationType == \"14675\" and AttributeValue == \"1\", strcat(\"Group Policy Inheritance Allowed\"),\r\n \"Unknown\")\r\n| project TimeGenerated, Actor, OU, Activity\r\n",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Active Directory"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/da73fe80-2cb7-4108-8e81-656817864804')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Summarize all local accounts with admin privilege",
                "description": "Summarize all local user accounts (non-domain) per device which have logged on with administrative rights\n",
                "body": "//Summarize all local user accounts (non-domain) per device which have logged on with administrative rights\r\nDeviceLogonEvents\r\n| where TimeGenerated > ago(7d)\r\n| project\r\n    TimeGenerated,\r\n    AdditionalFields,\r\n    IsLocalAdmin,\r\n    LogonType,\r\n    DeviceName,\r\n    AccountDomain,\r\n    AccountName\r\n| extend LocalLogon = toboolean(AdditionalFields.IsLocalLogon)\r\n| where LocalLogon == true\r\n| where IsLocalAdmin == true\r\n| where LogonType == \"Interactive\"\r\n| distinct AccountDomain, AccountName, DeviceName\r\n//Split domain from device name to match for local logons\r\n| extend Device = split(DeviceName, \".\")[0]\r\n| where Device == AccountDomain\r\n| summarize ['Local Accounts with Admin']=make_set(AccountName), ['Count of Admin Accounts']=dcount(AccountName) by DeviceName\r\n| sort by ['Count of Admin Accounts'] desc   ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/db7c4a57-7c13-40ca-9a1f-2ce5cfd0c237')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find users failing SSPR flow",
                "description": "Find users who have failed 3 or more times to set a new password during a SSPR flow. Worth reaching out to them to give them a hand or see if you can onboard them to something like Windows Hello for Business",
                "body": "//Find users who have failed 3 or more times to set a new password during a SSPR flow. Worth reaching out to them to give them a hand or see if you can onboard them to something like Windows Hello for Business\r\nAuditLogs\r\n| where LoggedByService == \"Self-service Password Management\"\r\n| extend User = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| extend ['User IP Address'] = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)\r\n| sort by TimeGenerated asc \r\n| summarize ['SSPR Actions']=make_list_if(ResultReason, ResultReason has \"User submitted a new password\") by CorrelationId, User, ['User IP Address']\r\n| where array_length(['SSPR Actions']) >= 3\r\n| sort by User desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/dc1e8918-f090-4b5a-a356-20452760a1a0')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Find hash of ISO malware",
                "description": "When Defender for Endpoint detects malware in an ISO file retrieve the ISO file name, which directory it was found in and associated file hashes",
                "body": "//When Defender for Endpoint detects malware in an ISO file retrieve the ISO file name, which directory it was found in and associated file hashes\r\nSecurityAlert\r\n| where ProviderName == \"MDATP\"\r\n| where AlertName == \"Malware was detected in an iso disc image file\"\r\n| mv-expand todynamic(Entities)\r\n| extend Hashes = Entities.FileHashes\r\n| mv-expand Hashes\r\n| extend ['ISO File Name'] = tostring(Entities.Name)\r\n| extend Directory = tostring(Entities.Directory)\r\n| extend ['Hash Type'] = tostring(Hashes.Algorithm)\r\n| extend Hash = tostring(Hashes.Value)\r\n| where isnotempty(['ISO File Name'])\r\n| project\r\n    TimeGenerated,\r\n    CompromisedEntity,\r\n    ['ISO File Name'],\r\n    Directory,\r\n    ['Hash Type'],\r\n    Hash",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint",
                        "Security Alert"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/ddf5eb49-45cf-450a-8d56-88f0fafb11d8')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize external guest vs guest activity",
                "description": "Summarize guest activity by external Azure AD guests (those that belong to another Azure AD tenant) vs External Guests (such as Gmail) to your tenant\n",
                "body": "//Summarize guest activity by external Azure AD guests (those that belong to another Azure AD tenant) vs External Guests (such as Gmail) to your tenant\r\n//For each domain list the total number of signins and distinct user \r\nSigninLogs\r\n| where TimeGenerated > ago (30d)\r\n| where UserType == \"Guest\"\r\n| where ResultType == 0\r\n| extend ['Guest Domain'] = tostring(split(UserPrincipalName, \"@\")[1])\r\n| summarize\r\n    ['External Azure AD Guest Logins']=countif(ResourceTenantId != HomeTenantId),\r\n    ['External Azure AD Guest Distinct Users']=dcountif(UserPrincipalName, ResourceTenantId != HomeTenantId),\r\n    ['External Guest Logins']=countif(ResourceTenantId == HomeTenantId),\r\n    ['External Guest Distinct Users']=dcountif(UserPrincipalName, ResourceTenantId == HomeTenantId)\r\n    by ['Guest Domain']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/de70d975-5f71-4685-b976-904bc133b424')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect when named locations are changed",
                "description": "Detect when Azure AD Named Locations are changed (either IP or Country) and retrieve the current list \n",
                "body": "//Detect when Azure AD Named Locations are changed (either IP or Country) and retrieve the current list \r\nlet updatedip=\r\n    AuditLogs\r\n    | where OperationName == \"Update named location\"\r\n    | mv-expand TargetResources\r\n    | extend modifiedProperties = parse_json(TargetResources).modifiedProperties\r\n    | mv-expand modifiedProperties  \r\n    | extend newValue = tostring(parse_json(modifiedProperties).newValue)\r\n    | mv-expand todynamic(newValue)\r\n    | extend ipRanges = tostring(parse_json(newValue).ipRanges)\r\n    | mv-expand todynamic(ipRanges) \r\n    | extend cidr = tostring(ipRanges.cidrAddress)\r\n    | where isnotempty(cidr)\r\n    | extend ['Named Location name'] = tostring(TargetResources.displayName)\r\n    | summarize ['IP List']=make_list(cidr) by ['Named Location name'];\r\nlet updatedcountries=\r\n    AuditLogs\r\n    | where OperationName == \"Update named location\"\r\n    | mv-expand TargetResources\r\n    | extend modifiedProperties = parse_json(TargetResources).modifiedProperties\r\n    | mv-expand modifiedProperties  \r\n    | extend newValue = tostring(parse_json(modifiedProperties).newValue)\r\n    | extend countriesAndRegions = tostring(parse_json(newValue).countriesAndRegions)\r\n    | mv-expand todynamic(countriesAndRegions) \r\n    | where isnotempty(countriesAndRegions)\r\n    | extend ['Named Location name'] = tostring(TargetResources.displayName)\r\n    | summarize ['Country List']=make_list(countriesAndRegions) by ['Named Location name'];\r\nunion updatedip, updatedcountries",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/dfd0b351-61a6-4973-b05b-8a2489627968')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize user risk",
                "description": "Calculate the percentage for all your Azure AD users considered risky. Those requiring single factor authentication, coming from an unknown location and from an unknown device\n",
                "body": "//Calculate the percentage for all your Azure AD users considered risky. Those requiring single factor authentication, coming from an unknown location and from an unknown device\r\nSigninLogs\r\n| where TimeGenerated > ago (30d)\r\n| where ResultType == 0\r\n//Include only member accounts if you want to ignore guest signins\r\n| where UserType == \"Member\"\r\n| extend DeviceTrustType = tostring(DeviceDetail.trustType)\r\n| summarize\r\n    ['Total Signins']=count(),\r\n    ['At Risk Signins']=countif(NetworkLocationDetails == '[]' and isempty(DeviceTrustType) and AuthenticationRequirement == \"singleFactorAuthentication\")\r\n    by UserPrincipalName\r\n| extend ['At Risk Percentage']=(todouble(['At Risk Signins']) * 100 / todouble(['Total Signins']))\r\n| sort by ['At Risk Percentage'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/e03680f1-8a2d-4864-9be8-d70784c46d3e')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Visualize remote PowerShell URLs",
                "body": "//Visualize the top 20 remote URLs that your users are connecting to via PowerShell\r\nDeviceNetworkEvents\r\n| where TimeGenerated > ago (7d)\r\n//Exclude system and local service processes as this visualization is user focused\r\n| where InitiatingProcessAccountName !in~ (\"system\", \"local service\")\r\n| where InitiatingProcessCommandLine has \"powershell\"\r\n| where LocalIPType == \"Private\"\r\n| where RemoteIPType == \"Public\"\r\n| summarize Count=count()by RemoteUrl\r\n| where isnotempty(RemoteUrl)\r\n| top 20 by Count\r\n| render barchart with (title=\"Remote URLs accessed by Powershell\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/e05fc5d7-1f30-421b-a422-77caaddf0022')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect conditional access failure anomalies",
                "description": "Detect anomalies in the amount of conditional access failures by users in your tenant, then optionally visualize those conditional access failures",
                "body": "//Detect anomalies in the amount of conditional access failures by users in your tenant, then visualize those conditional access failures\r\n//Starttime and endtime = which period of data to look at, i.e from 21 days ago until today.\r\nlet startdate=21d;\r\nlet enddate=1d;\r\n//Timeframe = time period to break the data up into, i.e 1 hour blocks.\r\nlet timeframe=1h;\r\n//Sensitivity = the lower the number the more sensitive the anomaly detection is, i.e it will find more anomalies, default is 1.5\r\nlet sensitivity=2;\r\n//Threshold = set this to tune out low count anomalies, i.e when total failures for a user doubles from 1 to 2\r\nlet threshold=5;\r\nlet outlierusers=\r\nSigninLogs\r\n| where TimeGenerated between (startofday(ago(startdate))..startofday(ago(enddate)))\r\n| where ResultType == \"53003\"\r\n| project TimeGenerated, ResultType, UserPrincipalName\r\n| make-series CAFailureCount=count() on TimeGenerated from startofday(ago(startdate)) to startofday(ago(enddate)) step timeframe by UserPrincipalName \r\n| extend outliers=series_decompose_anomalies(CAFailureCount, sensitivity)\r\n| mv-expand TimeGenerated, CAFailureCount, outliers\r\n| where outliers == 1 and CAFailureCount > threshold\r\n| distinct UserPrincipalName;\r\n//Optionally visualize the anomalies\r\nSigninLogs\r\n| where TimeGenerated between (startofday(ago(startdate))..startofday(ago(enddate)))\r\n| where ResultType == \"53003\"\r\n| project TimeGenerated, ResultType, UserPrincipalName\r\n| where UserPrincipalName in (outlierusers)\r\n| summarize CAFailures=count()by UserPrincipalName, bin(TimeGenerated, timeframe)\r\n| render timechart with (ytitle=\"Failure Count\",title=\"Anomalous Conditional Access Failures\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/e290c883-f87b-442b-a41b-8f747d2c4c25')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect group added to PIM",
                "description": "Find when an Azure AD group is assigned (either permanent or eligble) to an Azure AD PIM assignment",
                "body": "//Find when an Azure AD group is assigned (either permanent or eligble) to an Azure AD PIM assignment\r\nAuditLogs\r\n| where OperationName in (\"Add eligible member to role in PIM completed (permanent)\", \"Add member to role in PIM completed (permanent)\")\r\n| where TargetResources[2].type == \"Group\"\r\n| extend GroupName = tostring(TargetResources[2].displayName)\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| extend ['Azure AD Role Name'] = tostring(TargetResources[0].displayName)\r\n| project TimeGenerated, OperationName, Actor, GroupName, ['Azure AD Role Name']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/e3927065-f144-4dfa-9669-ddd201303418')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize service principals by last sign in",
                "description": "Summarize your Azure AD service principals by the last time they signed in, grouped by month",
                "body": "//Summarize your Azure AD service principals by the last time they signed in, grouped by month\r\nAADServicePrincipalSignInLogs\r\n| project TimeGenerated, AppId, ResultType, ServicePrincipalName\r\n| where TimeGenerated > ago (360d)\r\n| where ResultType == 0\r\n| summarize arg_max(TimeGenerated, *) by AppId\r\n| summarize ['Application List']=make_set(ServicePrincipalName) by Month=startofmonth(TimeGenerated)\r\n| sort by Month asc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit",
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/e3928a79-c01b-4e45-a252-52f9dedb56f7')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Log Analytics - Find new users running queries",
                "description": "Find users querying your Log Analytics/Sentinel data for the first time",
                "body": "//Find users querying your Log Analytics/Sentinel data for the first time\r\nlet knownusers=\r\n    LAQueryLogs\r\n    | where TimeGenerated > ago(180d) and TimeGenerated < ago(1d)\r\n    | distinct AADEmail\r\n    | where isnotempty(AADEmail);\r\nLAQueryLogs\r\n| where TimeGenerated > ago(1d)\r\n| where AADEmail !in (knownusers)\r\n| where isnotempty(AADEmail)\r\n| project TimeGenerated, AADEmail, QueryText",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Log Analytics"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/e3f06c37-3c37-4d07-8be1-d2eec3e4cadc')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize privileged actions",
                "description": "Create a pivot table showing all the actions taken by your privileged users",
                "body": "//Create a pivot table showing all the actions taken by your privileged users\r\n//Lookup the IdentityInfo table for any users holding a privileged role\r\nlet privusers=\r\n    IdentityInfo\r\n    | where TimeGenerated > ago(21d)\r\n    | summarize arg_max(TimeGenerated, *) by AccountUPN\r\n    | where isnotempty(AssignedRoles)\r\n    | where AssignedRoles != \"[]\"\r\n    | distinct AccountUPN;\r\n//Search for all actions taken by those users in the last 7 days\r\nAuditLogs\r\n| where TimeGenerated > ago(7d)\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| where Actor in (privusers)\r\n//Create a pivot table counting each action for each user\r\n| evaluate pivot(OperationName, count(), Actor)\r\n| order by Actor asc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/e45377ee-f85e-4b35-997c-6886da26458d')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect service principal added after hours",
                "description": "Detect when a service principal is added to Azure AD after working hours or on weekends",
                "body": "//Detect when a service principal is added to Azure AD after working hours or on weekends\r\nlet Saturday = time(6.00:00:00);\r\nlet Sunday = time(0.00:00:00);\r\nAuditLogs\r\n| where TimeGenerated > ago(7d)\r\n// extend LocalTime to your time zone\r\n| extend LocalTime=TimeGenerated + 5h\r\n// Change hours of the day to suit your company, i.e this would find activations between 6pm and 6am\r\n| where dayofweek(LocalTime) in (Saturday, Sunday) or hourofday(LocalTime) !between (6 .. 18)\r\n| where OperationName == \"Add service principal\"\r\n//Exclude service principals created by managed identities (if you have automation tasks running this may trigger), but you can remove the exclusion if required\r\n| where parse_json(tostring(InitiatedBy.app)).displayName != \"Managed Service Identity\"\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| extend AppId = tostring(AdditionalDetails[1].value)\r\n| extend ['Actor IP Address'] = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)\r\n| project LocalTime, Actor, ['Actor IP Address'], AppId",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/e470cd6f-edb1-4c03-bc05-b86231b09ba6')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Find devices with most Smartscreen events",
                "description": "Find the devices in your environment triggering the most Defender SmartScreen events",
                "body": "//Find the devices in your environment triggering the most Defender SmartScreen events\r\nDeviceEvents\r\n| where TimeGenerated > ago (30d)\r\n| where ActionType startswith \"SmartScreen\"\r\n| extend Experience = tostring(AdditionalFields.Experience)\r\n| where isnotempty(Experience)\r\n| summarize\r\n    ['Count of SmartScreen Events']=count(),\r\n    ['List of SmartScreen Event Types']=make_set(Experience)\r\n    by DeviceName\r\n| sort by ['Count of SmartScreen Events'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/e49c5542-a1e7-4b32-8ad3-b91c520323b3')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find inactive service principals",
                "description": "Find Azure AD Service Principals that have not successfully signed on for the last 30 days\n",
                "body": "//Find Azure AD Service Principals that have not successfully signed on for the last 30 days\r\nAADServicePrincipalSignInLogs\r\n| where TimeGenerated > ago(180d)\r\n| where ResultType == 0\r\n| summarize arg_max(TimeGenerated, *) by AppId\r\n| project\r\n    ['Last Successful Logon']=TimeGenerated,\r\n    ServicePrincipalName,\r\n    ServicePrincipalId,\r\n    AppId\r\n| join kind = leftanti (\r\n    AADServicePrincipalSignInLogs\r\n    | where TimeGenerated > ago(30d)\r\n    | where ResultType == 0\r\n    | summarize arg_max(TimeGenerated, *) by AppId\r\n    )\r\n    on AppId\r\n| extend ['Days Since Last Logon']=datetime_diff(\"day\", now(), ['Last Successful Logon'])\r\n| project-reorder ['Days Since Last Logon'], ['Last Successful Logon'], ServicePrincipalName, AppId, ServicePrincipalId\r\n| sort by ['Last Successful Logon'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/e5eac7a4-552e-4ea9-bfde-cd10cf8d27b9')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Visualize total guests vs added to Teams",
                "description": "Visualize total guests redeemed in Azure AD vs guests that have been added to a Team",
                "body": "//Visualize total guests redeemed in Azure AD vs guests that have been added to a Team\r\nlet guestsredeemed=\r\n    AuditLogs\r\n    | where TimeGenerated > ago (90d)\r\n    | where OperationName == \"Redeem external user invite\"\r\n    | extend GuestRedeemed = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n    | extend Activity = strcat(\"Guest Invite Redeemed\")\r\n    | project TimeGenerated, GuestRedeemed, Activity;\r\nlet guestsaddedtoteams=\r\n    OfficeActivity\r\n    | where TimeGenerated > ago(90d)\r\n    | where Operation == \"MemberAdded\"\r\n    | mv-expand Members\r\n    | extend GuestAdded = tostring(Members.UPN)\r\n    | where GuestAdded contains \"#EXT#\"\r\n    | extend Activity = strcat(\"Guest Added to Team\")\r\n    | project TimeGenerated, GuestAdded, Activity;\r\nunion guestsredeemed, guestsaddedtoteams\r\n| summarize ['Total Count']=count() by Activity, bin(TimeGenerated, 1d)\r\n| render columnchart with (kind=unstacked, title=\"Total Guests Redeemed vs Guests Added to Teams\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/e669d7f8-668a-49de-a891-7b8800814b4b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Visualize downloads by device trust type",
                "description": "Visualize downloads from your Office 365 tenant by trust type (trusted/known by Azure Active Directory vs Unknown)",
                "body": "//Visualize downloads from your Office 365 tenant by trust type (trusted/known by Azure Active Directory vs Unknown)\r\n//Query Azure AD logs to get a listing of each username, IPAddress and trust type\r\nSigninLogs\r\n| where TimeGenerated > ago(30d)\r\n| where ResultType == 0\r\n| where UserType == \"Member\"\r\n| extend DeviceTrustType = tostring(DeviceDetail.trustType)\r\n| distinct UserPrincipalName, IPAddress, DeviceTrustType\r\n//Join to Office Activity download on username and IP and find download events\r\n| join kind=inner(\r\n    OfficeActivity\r\n    | where TimeGenerated > ago(30d)\r\n    | where Operation in (\"FileSyncDownloadedFull\", \"FileDownloaded\")\r\n    )\r\n    on $left.UserPrincipalName == $right.UserId, $left.IPAddress == $right.ClientIP\r\n//Summarize download events by whether the device is known or not\r\n| summarize\r\n    ['Trusted Devices']=countif(isnotempty(DeviceTrustType)),\r\n    ['Untrusted Devices']=countif(isempty(DeviceTrustType))\r\n    by bin(TimeGenerated, 1d)\r\n| render timechart with (title=\"Downloads from Office 365 by device trust type\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins",
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/e6e2766e-e673-422b-80d4-04c6da719a0c')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect credential added to app",
                "description": "Detect when a new credential is added to an Azure AD application registration",
                "body": "//Detect when a new credential is added to an Azure AD application registration\r\nAuditLogs\r\n| where OperationName has \"Update application – Certificates and secrets management\"\r\n| extend ApplicationName = tostring(TargetResources[0].displayName)\r\n| extend ApplicationObjectId = tostring(TargetResources[0].id)\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| extend ActorIPAddress = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)\r\n| project TimeGenerated, ApplicationName, ApplicationObjectId, Actor, ActorIPAddress",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/e78cf1a1-8a5d-48e3-8d28-18bb2b2d46c5')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure Key Vault - Detect access policy additions",
                "description": "Detects when a service principal (user, group or app) has been granted access to Key Vault data\n",
                "body": "// Detects when a service principal (user, group or app) has been granted access to Key Vault data\r\nAzureDiagnostics\r\n| where ResourceType == \"VAULTS\"\r\n| where OperationName == \"VaultPatch\"\r\n| where ResultType == \"Success\"\r\n| project-rename ServicePrincipalAdded=addedAccessPolicy_ObjectId_g, Actor=identity_claim_http_schemas_xmlsoap_org_ws_2005_05_identity_claims_name_s, AddedKeyPolicy = addedAccessPolicy_Permissions_keys_s, AddedSecretPolicy = addedAccessPolicy_Permissions_secrets_s,AddedCertPolicy = addedAccessPolicy_Permissions_certificates_s\r\n| where isnotempty(AddedKeyPolicy)\r\n    or isnotempty(AddedSecretPolicy)\r\n    or isnotempty(AddedCertPolicy)\r\n| project\r\n    TimeGenerated,\r\n    KeyVaultName=Resource,\r\n    ServicePrincipalAdded,\r\n    Actor,\r\n    IPAddressofActor=CallerIPAddress,\r\n    AddedSecretPolicy,\r\n    AddedKeyPolicy,\r\n    AddedCertPolicy",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure Key Vault"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/e87e32b5-fdbe-4f9c-95a5-00084cf956a5')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize service principal resource access",
                "description": "Create a summary of which resources each of your service principals are connecting to. The higher the count the potential higher blast radius.",
                "body": "//Create a summary of which resources each of your service principals are connecting to. The higher the count the potential higher blast radius.\r\nAADServicePrincipalSignInLogs\r\n| where TimeGenerated > ago(30d)\r\n| where ResultType == \"0\"\r\n| summarize\r\n    ['List of Azure Resources']=make_set(ResourceDisplayName),\r\n    ['Count of Azure Resources']=dcount(ResourceDisplayName)\r\n    by ServicePrincipalName\r\n| sort by ['Count of Azure Resources'] desc",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/e88c895d-195f-4e72-a4c0-8e991df6b943')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect role assigned outside of PIM",
                "description": "Alert when a user is added directly to an Azure AD role, bypassing PIM",
                "body": "//Alert when a user is added directly to an Azure AD role, bypassing PIM\r\nAuditLogs\r\n| where OperationName has \"Add member to role outside of PIM\"\r\n| extend RoleName = tostring(TargetResources[0].displayName)\r\n| extend UserAdded = tostring(TargetResources[2].displayName)\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| project TimeGenerated, OperationName, RoleName, UserAdded, Actor",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/e9ebbd67-c961-4bb3-adf1-3752d50f61ab')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDI - Detect when device encryption changed",
                "description": "Detect when the encryption types on a device are changed and parse the previous and current encryption types.\n",
                "body": "//Detect when the encryption types on a device are changed and parse the previous and current encryption types.\r\nIdentityDirectoryEvents\r\n| where ActionType == \"Account Supported Encryption Types changed\"\r\n| parse AdditionalFields with * 'FROM AccountSupportedEncryptionTypes\":\"' PreviousEncryption '\"' *\r\n| parse AdditionalFields with * 'TO AccountSupportedEncryptionTypes\":\"' CurrentEncryption '\"' *\r\n| project TimeGenerated, TargetDeviceName, PreviousEncryption, CurrentEncryption",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Identity"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/eaa4bc3a-7cc2-41e3-a353-81406e92a3fa')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect custom security attribute set",
                "description": "Detect when a custom security attribute is set on a user",
                "body": "//Detect when a custom security attribute is set on a user\r\nAuditLogs\r\n| where OperationName == \"Update attribute values assigned to a user\"\r\n| extend x = tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].displayName)\r\n| extend [\"Attribute Value\"] = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].newValue))[0])\r\n| extend Target = tostring(TargetResources[0].userPrincipalName)\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| parse x with * '.' ['Attribute Set Name'] \"_\" *\r\n| extend [\"Attribute Name\"]=split(x, \"_\")[1]\r\n| project\r\n    TimeGenerated,\r\n    OperationName,\r\n    Target,\r\n    ['Attribute Set Name'],\r\n    ['Attribute Name'],\r\n    ['Attribute Value'],\r\n    Actor",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/eb470d48-3184-49ed-bdaa-f06c10d2b2ec')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Detect label downgrade followed by email",
                "description": "Detects when a user downgrades a label on a file and that file is then emailed outbound",
                "body": "// Detects when a user downgrades a label on a file and that file is then emailed outbound \r\n// Starttime = the amount of data to look back on\r\n// Timeframe = the time between the label downgrade and email event\r\nlet starttime=7d;\r\nlet timeframe=4h;\r\nInformationProtectionEvents\r\n| where Time > ago(starttime)\r\n| where Activity == \"DowngradeLabel\"\r\n| project LabelChangeTime=Time, User, FileName=ItemName\r\n| join kind=inner(\r\n    EmailEvents\r\n    | where EmailDirection == \"Outbound\"\r\n    | project\r\n        TimeGenerated,\r\n        SenderMailFromAddress,\r\n        RecipientEmailAddress,\r\n        EmailDirection,\r\n        NetworkMessageId\r\n    | join kind=inner (EmailAttachmentInfo) on NetworkMessageId\r\n    | project\r\n        TimeGenerated,\r\n        SenderMailFromAddress,\r\n        RecipientEmailAddress,\r\n        EmailDirection,\r\n        FileName\r\n    )\r\n    on FileName\r\n| project\r\n    LabelChangeTime,\r\n    EmailSendTime=TimeGenerated,\r\n    SenderMailFromAddress,\r\n    RecipientEmailAddress,\r\n    EmailDirection,\r\n    FileName\r\n| where (EmailSendTime - LabelChangeTime) between (0min .. timeframe)",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Information Protection",
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/eb59b841-05a3-40d8-a411-cbaa5f330990')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Security Alert - Detect and decode encoded PowerShell",
                "description": "Detect when Defender for Endpoint alerts on suspicious PowerShell usage. If command is encoded it will be decoded.",
                "body": "//Detect when Defender for Endpoint alerts on suspicious PowerShell usage. If command is encoded it will be decoded.\r\nSecurityAlert\r\n| where AlertName == \"Suspicious PowerShell command line\"\r\n| mv-expand todynamic(Entities)\r\n| extend CommandLine = tostring(Entities.CommandLine)\r\n//This particular query looks for only encoded Powershell commands, if you want all Powershell commands just remove the lines below\r\n| extend EncodedCommand = extract(@'\\s+([A-Za-z0-9+/]{20}\\S+$)', 1, CommandLine)\r\n| where EncodedCommand != \"\"\r\n| extend DecodedCommand = base64_decode_tostring(EncodedCommand)\r\n| where DecodedCommand != \"\"\r\n//\r\n| project TimeGenerated, CompromisedEntity, AlertName, CommandLine, DecodedCommand",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Security Alert"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/ebad4988-ce12-4232-84e2-0c658b9f0ad0')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Visualize OS Build versions per month",
                "description": "Visualize the OS build numbers of your Windows 10 and 11 devices per month over the last year",
                "body": "//Visualize the OS build numbers of your Windows 10 and 11 devices per month over the last year\r\nDeviceInfo\r\n| where TimeGenerated > ago(365d)\r\n| where OSPlatform in (\"Windows10\", \"Windows11\")\r\n| extend OSBuildNumber=tostring(OSBuild)\r\n| summarize arg_max(TimeGenerated, *) by DeviceName, startofmonth(TimeGenerated)\r\n| summarize count()by OSBuildNumber, startofmonth(TimeGenerated)\r\n| where isnotempty(OSBuildNumber)\r\n| render areachart \r\n    with (\r\n    ytitle=\"Device Count\",\r\n    xtitle=\"Month\",\r\n    title=\"Count of Windows 10 and 11 OS Builds per month\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/ecad0d95-651d-4287-9fc3-46b35ae9ee7f')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize outbound guest activity",
                "description": "//Summarize outbound (your users connecting to other tenants) activity by listing the users and which applications they are accessing in each remote tenant",
                "body": "//Summarize outbound (your users connecting to other tenants) activity by listing the users and which applications they are accessing in each remote tenant\r\nSigninLogs\r\n| where TimeGenerated > ago(30d)\r\n| where UserType == \"Guest\"\r\n| where AADTenantId == HomeTenantId\r\n| where ResourceTenantId != AADTenantId\r\n| summarize\r\n    ['Count of Applications']=dcount(AppDisplayName),\r\n    ['List of Applications']=make_set(AppDisplayName),\r\n    ['Count of Users']=dcount(UserPrincipalName),\r\n    ['List of Users']=make_set(UserPrincipalName)\r\n    by ResourceTenantId\r\n| sort by ['Count of Users'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/ed93819b-21c2-4a5e-adf9-9904483499f2')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect service principal created by managed identity",
                "description": "Detect when an Azure AD service principal is created for a managed identity",
                "body": "AuditLogs\r\n| where OperationName == \"Add service principal\"\r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.app)).displayName)\r\n| extend ['Service Principal DisplayName'] = tostring(TargetResources[0].displayName)\r\n| extend ['Service Principal Id'] = tostring(TargetResources[0].id)\r\n| where Actor == \"Managed Service Identity\"\r\n| project TimeGenerated, ['Service Principal DisplayName'], ['Service Principal Id']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/ee5c7ca2-3c78-4ac7-9768-3d12edb24173')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect Azure AD role added to service principal",
                "description": "Detects when an Azure AD role such as Application Admin is added to a Azure AD Service Principal. These should be reviewed as part of least privilege checks.",
                "body": "AuditLogs\r\n| where OperationName == \"Add member to role\"\r\n| where TargetResources[0].type == \"ServicePrincipal\"\r\n| extend ['Service Principal Object Id'] = tostring(TargetResources[0].id)\r\n| extend ['Application Display Name'] = tostring(TargetResources[0].displayName) \r\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| extend ['Azure AD Role Added'] = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].newValue)))\r\n| project\r\n    TimeGenerated,\r\n    Actor,\r\n    ['Azure AD Role Added'],\r\n    ['Service Principal Object Id'],\r\n    ['Application Display Name']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/ee7a1ae8-e576-41d5-ac48-cc57cbd27d3b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize managed identity resource access",
                "description": "Summarize the Azure resources that each of your managed identities are accessing. The higher the count the higher the potential blast radius.",
                "body": "//Summarize the Azure resources that each of your managed identities are accessing. The higher the count the higher the potential blast radius.\r\nAADManagedIdentitySignInLogs\r\n| where TimeGenerated > ago(30d)\r\n| where ResultType == 0\r\n| summarize\r\n    ['List of Azure Resources Accessed']=make_set(ResourceDisplayName),\r\n    ['Distinct Resources Accessed']=dcount(ResourceDisplayName)\r\n    by ServicePrincipalName\r\n| sort by ['Distinct Resources Accessed'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/ef922f68-93a7-474c-81c9-9d7bd0071de4')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Active Directory - Summarize daily group additions",
                "description": "Create a daily report of users being added to on premise Active Directory groups, summarized by group name\n",
                "body": "//Create a daily report of users being added to on premise Active Directory groups, summarized by group name\r\nSecurityEvent\r\n| where TimeGenerated > ago (7d)\r\n| where AccountType == \"User\"\r\n| where EventID in (4728, 4732, 4756, 4761, 4746, 4751)\r\n| project TimeGenerated, MemberName, ['Group Name']=TargetUserName, EventID\r\n| parse MemberName with * 'CN=' UserAdded ',' *\r\n| summarize UsersAdded=make_set(UserAdded) by ['Group Name'], startofday(TimeGenerated)\r\n| sort by ['Group Name'] asc, TimeGenerated desc \r\n",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Active Directory"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/efb1faa5-c733-46c7-ba83-49a50c2bc636')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Find new ASR events",
                "description": "Retrieve any new ASR alerts in your environment over the last week not previously seen in the prior 90 days and which devices have triggered them",
                "body": "//Retrieve any new ASR alerts in your environment over the last week not previously seen in the prior 90 days and which devices have triggered them\r\nlet timerange=90d;\r\nlet existingalerts=\r\nDeviceEvents\r\n| where TimeGenerated > ago (timerange) and TimeGenerated < ago(7d)\r\n| where ActionType startswith \"Asr\"\r\n| distinct ActionType;\r\n    DeviceEvents\r\n    | where TimeGenerated > ago(7d)\r\n    | where ActionType startswith \"Asr\"\r\n    | where ActionType !in (existingalerts)\r\n| summarize ['Device List']=make_set(DeviceName) by ActionType",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/f0656247-8996-493d-a75d-32618bc8664c')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Summarize single factor authentication to Azure",
                "description": "Find any single factor sign ins to Azure resources such as the Azure portal",
                "body": "//Find any single factor sign ins to Azure resources such as the Azure portal\r\nSigninLogs\r\n| where TimeGenerated > ago(7d)\r\n| where AppDisplayName has \"Azure\"\r\n| where ResultType == 0\r\n| where AuthenticationRequirement == \"singleFactorAuthentication\"\r\n| summarize ['Single Factor Authentications']=make_set(UserPrincipalName) by AppDisplayName\r\n| extend ['User Count'] = array_length(['Single Factor Authentications'])\r\n| order by ['User Count'] desc",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/f19aed5a-79d8-403d-a015-d9cb91c63887')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Visualize ASR events with trend",
                "description": "Visualize your total attack surface reduction rule events over time with trend",
                "body": "//Visualize your total attack surface reduction rule events over time with trend\r\nlet StartDate = now(-90d);\r\nlet EndDate = now();\r\nDeviceEvents\r\n| where ActionType startswith \"Asr\"\r\n| make-series ['Total ASR Events']=count() on TimeGenerated in range(StartDate, EndDate, 1d)\r\n| extend (RSquare, SplitIdx, Variance, RVariance, TrendLine)=series_fit_2lines(['Total ASR Events'])\r\n| project TimeGenerated, ['Total ASR Events'], Trend=TrendLine\r\n| render timechart\r\n    with (\r\n    xtitle=\"Day\",\r\n    ytitle=\"Count of ASR Events\",\r\n    title=\"Attack surface reduction events over time with trend\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/f1a0f516-c52e-420f-b9f8-b3f925c5865e')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Security Alert - Find top 20 random stats",
                "description": "Find the top 20 of a collection of varied data sets, no real detections in here just interesting data that is captured\n",
                "body": "//Find the top 20 of a collection of varied data sets, no real detections in here just interesting data that is captured\r\n//Top 20 alerts triggered\r\nSecurityAlert\r\n| where TimeGenerated > ago (30d)\r\n| where ProviderName != \"ASI Scheduled Alerts\"\r\n| summarize Count=count() by AlertName\r\n| top 20 by Count\r\n\r\n//Top 20 alerts high severity triggered\r\nSecurityAlert\r\n| where TimeGenerated > ago (30d)\r\n| where ProviderName != \"ASI Scheduled Alerts\" and AlertSeverity == \"High\"\r\n| summarize Count=count() by AlertName\r\n| top 20 by Count\r\n\r\n//Top 20 users generating identity alerts\r\nSecurityAlert\r\n| where TimeGenerated > ago (30d)\r\n| where ProviderName in (\"OATP\",\"IPC\",\"Azure Advanced Threat Protection\",\"MCAS\")\r\n| summarize Count=count() by CompromisedEntity\r\n| where CompromisedEntity != \"CompromisedEntity\" and isnotempty( CompromisedEntity)\r\n| top 20 by Count\r\n\r\n//Top 20 devices triggering Defender alerts\r\nSecurityAlert\r\n| where TimeGenerated > ago (30d)\r\n| where ProviderName == \"MDATP\"\r\n| summarize Count=count() by CompromisedEntity\r\n| where CompromisedEntity != \"CompromisedEntity\" and isnotempty( CompromisedEntity)\r\n| top 20 by Count\r\n\r\n//Top 20 accounts by distinct alerts\r\nSecurityAlert\r\n| where TimeGenerated > ago (30d)\r\n| where ProviderName in (\"OATP\",\"IPC\",\"Azure Advanced Threat Protection\",\"MCAS\")\r\n| summarize Count=dcount(AlertName) by CompromisedEntity\r\n| where CompromisedEntity != \"CompromisedEntity\" and isnotempty( CompromisedEntity)\r\n| top 20 by Count\r\n\r\n//Top 20 devices by distinct alerts\r\nSecurityAlert\r\n| where TimeGenerated > ago (30d)\r\n| where ProviderName == \"MDATP\"\r\n| summarize Count=dcount(AlertName) by CompromisedEntity\r\n| where CompromisedEntity != \"CompromisedEntity\" and isnotempty( CompromisedEntity)\r\n| top 20 by Count\r\n\r\n//Top 20 users generating high severity identity alerts\r\nSecurityAlert\r\n| where TimeGenerated > ago (30d)\r\n| where ProviderName in (\"OATP\",\"IPC\",\"Azure Advanced Threat Protection\",\"MCAS\") and AlertSeverity == \"High\"\r\n| summarize Count=count() by CompromisedEntity\r\n| where CompromisedEntity != \"CompromisedEntity\" and isnotempty( CompromisedEntity)\r\n| top 20 by Count\r\n\r\n//Top 20 devices triggering high severity Defender alerts\r\nSecurityAlert\r\n| where TimeGenerated > ago (30d)\r\n| where ProviderName == \"MDATP\" and AlertSeverity == \"High\"\r\n| summarize Count=count() by CompromisedEntity\r\n| where CompromisedEntity != \"CompromisedEntity\" and isnotempty( CompromisedEntity)\r\n| top 20 by Count",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Security Alert"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/f233c0d5-a65f-4e8f-a4c3-d5a3493e2e0d')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "DCA - Find and summarize potential phishing domain activity",
                "description": "When Defender for Cloud detects communication with a possible phishing domain, use Defedner logs to find any network connections to that same domain",
                "body": "//When Defender for Cloud detects communication with a possible phishing domain, use Defedner logs to find any network connections to that same domain\r\nlet domain=\r\n    SecurityAlert\r\n    | where TimeGenerated > ago (7d)\r\n    | where AlertName startswith \"Communication with possible phishing domain\"\r\n    | mv-expand todynamic(Entities)\r\n    | extend DomainName = tostring(Entities.DomainName)\r\n    | where isnotempty(DomainName)\r\n    | distinct DomainName;\r\nDeviceNetworkEvents\r\n| where TimeGenerated > ago (7d)\r\n| where RemoteUrl in~ (domain)\r\n| project\r\n    TimeGenerated,\r\n    ActionType,\r\n    DeviceName,\r\n    InitiatingProcessAccountName,\r\n    InitiatingProcessCommandLine,\r\n    LocalIP,\r\n    RemoteIP,\r\n    RemoteUrl,\r\n    RemotePort",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Security Alert",
                        "Defender for Cloud Apps",
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/f26501d0-c66a-4b77-bd73-8e9529badf88')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure - Detect Log Analytics keys read",
                "description": "Detect when the workspace keys to an Azure Log Analytics workspace are read\n",
                "body": "//Detect when the workspace keys to an Azure Log Analytics workspace are read\r\nAzureActivity\r\n| where OperationNameValue == \"MICROSOFT.OPERATIONALINSIGHTS/WORKSPACES/SHAREDKEYS/ACTION\"\r\n| extend WorkspaceName = tostring(parse_json(Properties).resource)\r\n| where ActivityStatusValue == \"Success\"\r\n| project\r\n    TimeGenerated,\r\n    Actor=Caller,\r\n    ['Log Analytics Workspace Name']=WorkspaceName,\r\n    ['Actor IP Address']=CallerIpAddress,\r\n    ['Azure Subscription Id']=SubscriptionId,\r\n    ['Azure Resource Group']=ResourceGroup",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure Resources"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/f2f1bd26-beef-4e43-bccc-732f70bea8e3')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize guest invite redemption with trend",
                "description": "Visualize how many guests are redeeming invites over the time period with trend",
                "body": "//Visualize how many guests are redeeming invites over the time period with trend\r\nlet StartDate = now(-180d);\r\nlet EndDate = now();\r\nAuditLogs\r\n| where OperationName == \"Redeem external user invite\"\r\n| make-series TotalInvites=count() on TimeGenerated in range(StartDate, EndDate, 1d)\r\n| extend (RSquare, SplitIdx, Variance, RVariance, TrendLine)=series_fit_2lines(TotalInvites)\r\n| project TimeGenerated, TotalInvites, TrendLine\r\n| render timechart with (title=\"Guest Invites redeemed over time with trend\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/f2f1f67e-564b-4d88-bbcd-c845ebb2759f')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find users using only SMS MFA",
                "description": "Find users who are only using text message as their MFA method",
                "body": "//Find users who are only using text message as their MFA method\r\nSigninLogs\r\n| where TimeGenerated > ago(30d)\r\n//You can exclude guests if you want, they may be harder to move to more secure methods, comment out the below line to include all users\r\n| where UserType == \"Member\"\r\n| mv-expand todynamic(AuthenticationDetails)\r\n| extend ['Authentication Method'] = tostring(AuthenticationDetails.authenticationMethod)\r\n| where ['Authentication Method'] !in (\"Previously satisfied\", \"Password\", \"Other\")\r\n| where isnotempty(['Authentication Method'])\r\n| summarize\r\n    ['Count of distinct MFA Methods']=dcount(['Authentication Method']),\r\n    ['List of MFA Methods']=make_set(['Authentication Method'])\r\n    by UserPrincipalName\r\n//Find users with only one method found and it is text message\r\n| where ['Count of distinct MFA Methods'] == 1 and ['List of MFA Methods'] has \"text\"",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/f2f69e71-855f-40a1-8f8e-9ba3529e7c22')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Detect anomalous files shared to guests",
                "description": "Detect anomalies in the amount of files shared to guests in your Office 365 tenant from your users.\n",
                "body": "//Detect anomalies in the amount of files shared to guests in your Office 365 tenant from your users.\r\n//Starttime and endtime = which period of data to look at, i.e from 21 days ago until today.\r\nlet startdate=21d;\r\nlet enddate=1d;\r\n//Timeframe = time period to break the data up into, i.e 1 hour blocks.\r\nlet timeframe=1h;\r\n//Sensitivity = the lower the number the more sensitive the anomaly detection is, i.e it will find more anomalies, default is 1.5\r\nlet sensitivity=2;\r\n//Threshold = set a threshold to account for low volume anomailies, i.e moving from 1 file shared to 2 within an hour\r\nlet threshold = 5;\r\nlet outlierusers=\r\nOfficeActivity\r\n| where Operation in (\"AddedToSecureLink\",\"SecureLinkCreated\",\"SecureLinkUpdated\")\r\n| where TargetUserOrGroupType == \"Guest\" or TargetUserOrGroupName contains \"#ext#\"\r\n| make-series GuestFileShares=count() on TimeGenerated from startofday(ago(startdate)) to startofday(ago(enddate)) step timeframe by UserId\r\n| extend outliers=series_decompose_anomalies(GuestFileShares, sensitivity)\r\n| mv-expand TimeGenerated, GuestFileShares, outliers\r\n| where outliers == 1 and GuestFileShares > threshold\r\n//Optionally visualize the anomalies - remove everything below this line to just retrieve the data instead of visualizing\r\n| distinct UserId;\r\nOfficeActivity\r\n| where Operation in (\"AddedToSecureLink\",\"SecureLinkCreated\",\"SecureLinkUpdated\")\r\n| where TargetUserOrGroupType == \"Guest\" or TargetUserOrGroupName contains \"#ext#\"\r\n| where UserId in (outlierusers)\r\n| make-series GuestFileShares=count() default=0 on TimeGenerated from startofday(ago(startdate)) to startofday(ago(enddate)) step timeframe by UserId \r\n| render timechart with (ytitle=\"Share Count\",title=\"Anomalous Files Shared to Guests\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/f30e961e-744f-4639-9e7a-9023b9deff7e')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Security Alert - Detect possible DNS transfer",
                "description": "When Defender for Cloud detects possible data transfer via DNS tunnel, use DNS logs to find any other devices that have queried the potentially malicious domain\n",
                "body": "//When Defender for Cloud detects possible data transfer via DNS tunnel, use DNS logs to find any other devices that have queried the potentially malicious domain\r\nlet maliciousdomain=\r\n    SecurityAlert\r\n    | where AlertName contains \"via DNS tunnel\"\r\n    | mv-expand todynamic(Entities)\r\n    | project Entities\r\n    | extend MaliciousDomain = tostring(Entities.DomainName)\r\n    | where isnotempty(MaliciousDomain)\r\n    | distinct MaliciousDomain;\r\nDnsEvents\r\n| where QueryType == \"A\"\r\n| project Name, ClientIP\r\n| where Name in~ (maliciousdomain)\r\n| summarize ['List of Device IPs']=make_set(ClientIP) by Name",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "DNS",
                        "Security Alert"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/f3225d19-ea15-40d3-a336-718156cce115')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Active Directory - Summarize special privilege at logon",
                "description": "Create a summary of your computers and the accounts that have logged on with special privileges over the last 30 days",
                "body": "//Create a summary of your computers and the accounts that have logged on with special privileges over the last 30 days\r\nSecurityEvent\r\n| where TimeGenerated > ago (30d)\r\n| project TimeGenerated, EventID, Account, AccountType, PrivilegeList, Computer\r\n| where EventID == \"4672\"\r\n| where Account != \"NT AUTHORITY\\\\SYSTEM\" and Account !has \"Window Manager\"\r\n| where AccountType == \"User\"\r\n//The privilege list is stored in a string of text that we need to split\r\n| extend Privs=extract_all(@\"Se(.*?)Privilege\", PrivilegeList)\r\n//Once we retrieve the privileges from the string of text we can recreate the proper naming\r\n| mv-expand Privs\r\n| extend Privilege=strcat('Se', Privs, 'Privilege')\r\n| project TimeGenerated, Account, Computer, Privilege\r\n| summarize ['List of Privileges']=make_set(Privilege) by Computer, Account\r\n| sort by Computer asc  ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Active Directory"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/f3b0d444-fecf-4d63-8edf-8574c1ccf347')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Security Alert - Detect multiple unique alerts",
                "description": "Detect when a user or device triggers 3 or more unique alerts within a short time frame. This example uses a period of 4 hours",
                "body": "//Detect when a user or device triggers 3 or more unique alerts within a short time frame. This example uses a period of 4 hours\r\nSecurityAlert\r\n| where TimeGenerated > ago(1d)\r\n| where isnotempty(CompromisedEntity) and CompromisedEntity != \"CompromisedEntity\"\r\n| project TimeGenerated, ProviderName, AlertName, CompromisedEntity\r\n| summarize\r\n    ['Alert Names']=make_set(AlertName),\r\n    ['Count of Unique Alerts']=dcount(AlertName)\r\n    by CompromisedEntity, bin(TimeGenerated, 4h)\r\n| where ['Count of Unique Alerts'] >= 3",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Security Alert"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/f4f5d858-cdf4-450b-adfb-8863127fa4b7')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect SSPR from unknown IP",
                "description": "Detect a successful self service password reset or account unlock from an IP address that user hasn't successfully signed into from in the last 30 days",
                "body": "//Detect a successful self service password reset or account unlock from an IP address that user hasn't successfully signed into from in the last 30 days\r\n//Find successful password reset and account unlocks in the last day\r\nAuditLogs\r\n| where TimeGenerated > ago (1d)\r\n| where OperationName == \"Unlock user account (self-service)\" and ResultDescription == \"Success\" or OperationName == \"Reset password (self-service)\" and ResultDescription == \"Successfully completed reset.\"\r\n| extend UserPrincipalName = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\r\n| extend IPAddress = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)\r\n| project\r\n    ['Reset Unlock or Time']=TimeGenerated,\r\n    OperationName,\r\n    UserPrincipalName,\r\n    IPAddress\r\n//Take the UserPrincipalName of the event and the IP address, join back to sign on logs to find events where the IP address has not been seen from that user\r\n| join kind=leftanti \r\n    (\r\n    SigninLogs\r\n    | where TimeGenerated > ago(30d)\r\n    | where ResultType == 0\r\n    )\r\n    on UserPrincipalName, IPAddress",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit",
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/f55e9d3b-d20f-4094-b909-5bc98bb76d8b')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Visualize guest downloads with trend",
                "description": "Visualize how many files are being downloaded from your Office 365 tenant by guest accounts with trend",
                "body": "//Visualize how many files are being downloaded from your Office 365 tenant by guest accounts with trend\r\nlet StartDate = now(-90d);\r\nlet EndDate = now();\r\nOfficeActivity\r\n| where TimeGenerated > ago(90d)\r\n| where Operation in (\"FileSyncDownloadedFull\", \"FileDownloaded\")\r\n| where UserId contains \"#ext#\"\r\n| make-series TotalDownloads=count() on TimeGenerated in range(StartDate, EndDate, 1d)\r\n| extend (RSquare, SplitIdx, Variance, RVariance, TrendLine)=series_fit_2lines(TotalDownloads)\r\n| project TimeGenerated, TotalDownloads, TrendLine\r\n| render timechart with (title=\"Guest downloads from Office 365 per day over time with trend\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/f59a0a97-7c24-4e63-93a4-e457b73c3fef')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure Key Vault - Find first time user access",
                "description": "Searches for access by users who have not previously accessed an Azure Key Vault in the last 30 days and returns all actions by those users\n",
                "body": "//Searches for access by users who have not previously accessed an Azure Key Vault in the last 30 days and returns all actions by those users\r\nlet operationlist = dynamic([\"SecretGet\", \"KeyGet\", \"VaultGet\"]);\r\nlet starttime = 30d;\r\nlet endtime = 1d;\r\nlet detection=\r\n    AzureDiagnostics\r\n    | where TimeGenerated between (ago(starttime) .. ago(endtime))\r\n    | where ResourceType == \"VAULTS\"\r\n    | where ResultType == \"Success\"\r\n    | where OperationName in (operationlist)\r\n    | where isnotempty(identity_claim_http_schemas_xmlsoap_org_ws_2005_05_identity_claims_upn_s)\r\n    | project-rename KeyVaultName=Resource, UserPrincipalName=identity_claim_appid_g\r\n    | distinct KeyVaultName, UserPrincipalName\r\n    | join kind=rightanti  (\r\n        AzureDiagnostics\r\n        | where TimeGenerated > ago(endtime)\r\n        | where ResourceType == \"VAULTS\"\r\n        | where ResultType == \"Success\"\r\n        | where OperationName in (operationlist)\r\n        | where isnotempty(identity_claim_http_schemas_xmlsoap_org_ws_2005_05_identity_claims_upn_s)\r\n        | project-rename\r\n            KeyVaultName=Resource,\r\n            UserPrincipalName=identity_claim_http_schemas_xmlsoap_org_ws_2005_05_identity_claims_upn_s\r\n        | distinct KeyVaultName, UserPrincipalName)\r\n        on KeyVaultName, UserPrincipalName;\r\nAzureDiagnostics\r\n| where TimeGenerated > ago(endtime)\r\n| where ResourceType == \"VAULTS\"\r\n| where ResultType == \"Success\"\r\n| project-rename\r\n    KeyVaultName=Resource,\r\n    UserPrincipalName=identity_claim_http_schemas_xmlsoap_org_ws_2005_05_identity_claims_upn_s\r\n| join kind=inner detection on KeyVaultName, UserPrincipalName\r\n| project\r\n    TimeGenerated,\r\n    UserPrincipalName,\r\n    ResourceGroup,\r\n    SubscriptionId,\r\n    KeyVaultName,\r\n    KeyVaultTarget=id_s,\r\n    OperationName",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure Key Vault"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/f73dcf0d-5d80-4413-b980-e40bf93b9e0d')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Find potential network recon",
                "description": "Find potential network recon on one of your devices by detecting when it connects to more than 10 common ports used to map your network and 10 distinct endpoints within an hour",
                "body": "//Find potential network recon on one of your devices by detecting when it connects to more than 10 common ports used to map your network and 10 distinct endpoints within an hour\r\n//Use that data to then return more details on each IP that device attempted to connect to\r\n//First look for devices connecting to 10 or more common ports and 10 or more devices within an hour\r\nlet devices=\r\n    DeviceNetworkEvents\r\n    | where ActionType in (\"ConnectionSuccess\", \"ConnectionFailed\")\r\n    | where RemotePort in (\"21\", \"22\", \"25\", \"53\", \"80\", \"110\", \"123\", \"139\", \"389\", \"443\", \"445\", \"636\", \"993\", \"995\", \"8080\")\r\n    | where RemoteIPType == \"Private\"\r\n    | summarize\r\n        ['Total connection count']=count(),\r\n        ['Count of distinct ports']=dcount(RemotePort),\r\n        ['List of ports']=make_set(RemotePort),\r\n        ['Count of remote IPs']=dcount(RemoteIP),\r\n        ['List of remote IPs']=make_set(RemoteIP)\r\n        by DeviceName, bin(TimeGenerated, 1h)\r\n    | where ['Count of distinct ports'] >= 10 and ['Count of remote IPs'] >= 10\r\n    | distinct DeviceName;\r\n//Take those devices and return more detail on each attempt\r\nDeviceNetworkEvents\r\n| where ActionType in (\"ConnectionSuccess\", \"ConnectionFailed\")\r\n| where RemotePort in (\"21\", \"22\", \"25\", \"53\", \"80\", \"110\", \"123\", \"139\", \"389\", \"443\", \"445\", \"636\", \"993\", \"995\", \"8080\")\r\n| where DeviceName in (devices)\r\n| where RemoteIPType == \"Private\"\r\n| summarize\r\n    ['Total connection count']=count(),\r\n    ['Count of distinct ports']=dcount(RemotePort),\r\n    ['List of ports']=make_set(RemotePort)\r\n    by DeviceName, RemoteIP, ActionType\r\n| project-reorder\r\n    DeviceName,\r\n    ActionType,\r\n    RemoteIP,\r\n    ['Total connection count'],\r\n    ['Count of distinct ports'],\r\n    ['List of ports']\r\n| sort by DeviceName desc",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/f8500bd7-91f2-4920-bab3-2df7755ff35f')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Incidents - Visualize incident trend over time",
                "description": "Create a visualization showing the total Sentinel incidents and the trend of incidents over tim",
                "body": "//Create a visualization showing the total Sentinel incidents and the trend of incidents over time\r\nSecurityIncident\r\n| summarize arg_min(TimeGenerated, *) by IncidentNumber\r\n| make-series TotalIncidents=count() default=0 on TimeGenerated in range(ago(90d), now(), 1d)\r\n| extend (RSquare, SplitIdx, Variance, RVariance, TrendLine)=series_fit_2lines(TotalIncidents)\r\n| project TimeGenerated, TotalIncidents, TrendLine\r\n| render timechart with (title=\"Microsoft Sentinel incidents over time with trend\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Microsoft Sentinel Incidents"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/fb5444d2-be3b-459b-a458-306a439c0d3d')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Find top 20 random stats",
                "description": "Find the top 20 of a collection of varied data sets, no real detections in here just interesting data that is captured",
                "body": "//Find the top 20 of a collection of varied data sets, no real detections in here just interesting data that is capture\r\n\r\n//Top 20 users signing into your tenant\r\nSigninLogs\r\n| where TimeGenerated > ago (30d)\r\n| where ResultType == 0\r\n| where UserType == \"Member\"\r\n| summarize Count=count() by UserPrincipalName\r\n| top 20 by Count\r\n\r\n//Top 20 locations signing into your tenant\r\nSigninLogs\r\n| where TimeGenerated > ago (30d)\r\n| where ResultType == 0\r\n| where UserType == \"Member\"\r\n| summarize Count=count() by Location\r\n| where isnotempty(Location)\r\n| top 20 by Count\r\n\r\n//Top 20 users by MFA prompts\r\nSigninLogs\r\n| where TimeGenerated > ago (30d)\r\n| where ResultType == 0\r\n| where UserType == \"Member\"\r\n| where AuthenticationRequirement == \"multiFactorAuthentication\"\r\n| mv-expand todynamic(AuthenticationDetails)\r\n| project TimeGenerated, AuthenticationDetails, UserPrincipalName\r\n| extend AuthenticationMethod = tostring(AuthenticationDetails.authenticationMethod)\r\n| where AuthenticationMethod in (\"Mobile app notification\",\"Text message\",\"OATH verification code\")\r\n| summarize Count=count()by UserPrincipalName\r\n| top 20 by Count\r\n\r\n//Top 20 users by distinct applications accessed\r\nSigninLogs\r\n| where TimeGenerated > ago (30d)\r\n| where ResultType == 0\r\n| where UserType == \"Member\"\r\n| summarize Count=dcount(AppDisplayName) by UserPrincipalName\r\n| top 20 by Count\r\n\r\n//Top 20 users accessing distinct locations accessed\r\nSigninLogs\r\n| where TimeGenerated > ago (30d)\r\n| where ResultType == 0\r\n| where UserType == \"Member\"\r\n| summarize Count=dcount(Location) by UserPrincipalName\r\n| top 20 by Count\r\n\r\n//Top 20 applications by distinct users accessing them\r\nSigninLogs\r\n| where TimeGenerated > ago (30d)\r\n| where ResultType == 0\r\n| where UserType == \"Member\"\r\n| summarize Count=dcount(UserPrincipalName) by AppDisplayName\r\n| where AppDisplayName != \"Windows Sign In\"\r\n| top 20 by Count\r\n\r\n//Top 20 applications by distinct guests accessing them\r\nSigninLogs\r\n| where TimeGenerated > ago (30d)\r\n| where ResultType == 0\r\n| where UserType == \"Guest\"\r\n| summarize Count=dcount(UserPrincipalName) by AppDisplayName\r\n| top 20 by Count\r\n\r\n//Top 20 guests by distinct applications accessed by them\r\nSigninLogs\r\n| where TimeGenerated > ago (30d)\r\n| where ResultType == 0\r\n| where UserType == \"Guest\"\r\n| summarize Count=dcount(AppDisplayName) by UserPrincipalName\r\n| top 20 by Count\r\n\r\n//Top 20 guest domains accessing your tenant\r\nSigninLogs\r\n| where TimeGenerated > ago (30d)\r\n| where ResultType == 0\r\n| where UserType == \"Guest\"\r\n| where AADTenantId != HomeTenantId and HomeTenantId != ResourceTenantId\r\n| extend ['User Domain'] = tostring(split(UserPrincipalName, \"@\")[1])\r\n| summarize Count=count() by ['User Domain']\r\n| top 20 by Count\r\n\r\n//Top 20 guest domains accessing your tenant by distinct applications accessed\r\nSigninLogs\r\n| where TimeGenerated > ago (30d)\r\n| where ResultType == 0\r\n| where UserType == \"Guest\"\r\n| where AADTenantId != HomeTenantId and HomeTenantId != ResourceTenantId\r\n| extend ['User Domain'] = tostring(split(UserPrincipalName, \"@\")[1])\r\n| summarize Count=dcount(AppDisplayName) by ['User Domain']\r\n| top 20 by Count",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/fb771eb6-2dda-470f-901a-9536a526e413')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Detect new exchange role created",
                "description": "Detect when a new Exchange admin role is created and parse the permissions",
                "body": "//Detect when a new Exchange admin role is created and parse the permissions\nOfficeActivity\n| where Operation == \"New-RoleGroup\"\n| where RecordType == \"ExchangeAdmin\"\n| parse Parameters with * 'Name\",\"Value\":\"' ['Role Name'] '\"' *\n| parse Parameters with * 'Roles\",\"Value\":\"' ['Permissions Added'] '\"' *\n| project TimeGenerated, Actor=UserId, ['Role Name'], ['Permissions Added']",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/fbc52c2d-eccb-44c2-9fc5-c006c327ef93')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect potential MFA spam",
                "description": "Detect when a user denies MFA several times within a single sign in attempt and then completes MFA.",
                "body": "//Detect when a user denies MFA several times within a single sign in attempt and then completes MFA.\r\n//This could be a sign of someone trying to spam your users with MFA prompts until they accept.\r\n//Select your threshold of how many times a user denies MFA before accepting\r\nlet threshold=2;\r\nSigninLogs\r\n| project\r\n    TimeGenerated,\r\n    AuthenticationRequirement,\r\n    AuthenticationDetails,\r\n    UserPrincipalName,\r\n    CorrelationId\r\n//Include only authentications that require MFA\r\n| where AuthenticationRequirement == \"multiFactorAuthentication\"\r\n//Extend authentication result description\r\n| extend AuthResult = tostring(parse_json(AuthenticationDetails)[1].authenticationStepResultDetail)\r\n//Find results that include both denined and completed MFA\r\n| where AuthResult in (\"MFA completed in Azure AD\", \"MFA denied; user declined the authentication\",\"MFA denied; user did not respond to mobile app notification\")\r\n//Create a list of completed and denied MFA challenges per correlation id\r\n| summarize ['Result Types']=make_list(AuthResult) by CorrelationId, UserPrincipalName\r\n//Ensure the list includes both completed and denied MFA challenges\r\n| where ['Result Types'] has (\"MFA completed in Azure AD\") and ['Result Types'] has_any (\"MFA denied; user declined the authentication\", \"MFA denied; user did not respond to mobile app notification\")\r\n| mv-expand ['Result Types'] to typeof(string)\r\n//Expand and count all the denied challenges and then return CorrelationId's where the MFA denied count is greater or equal to your threshold\r\n| where ['Result Types'] has_any (\"MFA denied; user declined the authentication\",\"MFA denied; user did not respond to mobile app notification\")\r\n| summarize ['Denied MFA Count']=count()by ['Result Types'], CorrelationId, UserPrincipalName\r\n| where ['Denied MFA Count'] >= threshold\r\n\r\n//Alternate query, instead of grouping signins by CorrelationId we group them by UserPrincipalName and 10 minute blocks of time.\r\n//In case the bad actor is starting a whole new sign in each time and generating a new CorrelationId for each attempt.\r\n//Select your threshold of how many times a user denies MFA before accepting\r\nlet threshold=2;\r\nSigninLogs\r\n| project\r\n    TimeGenerated,\r\n    AuthenticationRequirement,\r\n    AuthenticationDetails,\r\n    UserPrincipalName,\r\n    CorrelationId\r\n//Include only authentications that require MFA\r\n| where AuthenticationRequirement == \"multiFactorAuthentication\"\r\n//Extend authentication result description\r\n| extend AuthResult = tostring(parse_json(AuthenticationDetails)[1].authenticationStepResultDetail)\r\n//Find results that include both denined and completed MFA\r\n| where AuthResult in (\"MFA completed in Azure AD\", \"MFA denied; user declined the authentication\",\"MFA denied; user did not respond to mobile app notification\")\r\n//Create a list of completed and denied MFA challenges per user principal name over 10 minute periods\r\n| summarize ['Result Types']=make_list(AuthResult) by UserPrincipalName, bin(TimeGenerated, 10m)\r\n//Ensure the list includes both completed and denied MFA challenges\r\n| where ['Result Types'] has (\"MFA completed in Azure AD\") and ['Result Types'] has_any (\"MFA denied; user declined the authentication\", \"MFA denied; user did not respond to mobile app notification\")\r\n| mv-expand ['Result Types'] to typeof(string)\r\n//Expand and count all the denied challenges and then return UserPrincipalNames where the MFA denied count is greater or equal to your threshold\r\n| where ['Result Types'] has_any (\"MFA denied; user declined the authentication\",\"MFA denied; user did not respond to mobile app notification\")\r\n| summarize ['Denied MFA Count']=count()by ['Result Types'], UserPrincipalName\r\n| where ['Denied MFA Count'] >= threshold\r\n\r\n//Simple query to count users being spammed with denies or not responding in one hour time windows\r\nSigninLogs\r\n| project\r\n    TimeGenerated,\r\n    AuthenticationRequirement,\r\n    AuthenticationDetails,\r\n    UserPrincipalName,\r\n    CorrelationId\r\n| where AuthenticationRequirement == \"multiFactorAuthentication\"\r\n| extend AuthResult = tostring(parse_json(AuthenticationDetails)[1].authenticationStepResultDetail)\r\n| where AuthResult in (\"MFA denied; user declined the authentication\",\"MFA denied; user did not respond to mobile app notification\")\r\n| summarize ['Result Types']=make_list(AuthResult), ['Result Count']=count() by UserPrincipalName, bin(TimeGenerated, 60m)\r\n//Find hits with greater than 3 failures in an hour\r\n| where ['Result Count'] > 3",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/fc1b44d2-c443-4437-bf97-6474420a605c')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Visualize guest domains with files shared",
                "description": "Visualize the guest domains that have had the most files shares to them from your Office 365 tenant",
                "body": "//Visualize the guest domains that have had the most files shares to them from your Office 365 tenant\r\nOfficeActivity\r\n| where TimeGenerated > ago(30d)\r\n| where Operation in~ (\"AddedToSecureLink\", \"SecureLinkCreated\", \"SecureLinkUpdated\")\r\n| where TargetUserOrGroupType == \"Guest\" and TargetUserOrGroupName contains \"#ext#\"\r\n| extend ['Guest UserPrincipalName'] = tostring(split(TargetUserOrGroupName, \"#\")[0])\r\n| extend ['Guest Domain'] = tostring(split(['Guest UserPrincipalName'], \"_\")[-1])\r\n| summarize Count=count() by ['Guest Domain']\r\n| top 20 by Count\r\n| render barchart with (title=\"Top guest domains with files shared to\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/feb4c5b9-273d-4487-b6ac-1853c88e82b8')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Visualize conditional access policy failures",
                "description": "Visualizes conditional access policy failures over time by policy name",
                "body": "//Visualizes conditional access policy failures over time by policy name\nlet start = now(-90d);\nlet end = now();\nlet timeframe= 12h;\nSigninLogs\n| project TimeGenerated, ResultType, ConditionalAccessPolicies\n| where ResultType == 53003\n| mv-expand ConditionalAccessPolicies\n| where ConditionalAccessPolicies.result == \"failure\"\n| extend ['CA Policy Name'] = tostring(ConditionalAccessPolicies.displayName)\n| make-series ['Failure Count'] = count() default=0 on TimeGenerated in range(start, end, timeframe) by ['CA Policy Name']\n| render timechart with (title=\"Conditional access policy failure over time\")\n",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/fecbfc22-cf80-40e8-9a92-aa34c4742911')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Detect when shared channel created",
                "description": "Detect when a shared Teams channel is created",
                "body": "//Detect when a shared Teams channel is created\r\nOfficeActivity\r\n| where Operation == \"ChannelAdded\"\r\n| where ChannelType == \"Shared\"\r\n| project TimeGenerated, Actor=UserId, TeamName, ChannelType, ChannelName",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/fef4b581-c6b5-4788-a28a-556b41342d5d')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect changes to conditional access outside of working hours",
                "description": "Detect changes to Azure AD Conditional Access policies on weekends or outside of business hours",
                "body": "//Detect changes to Azure AD Conditional Access policies on weekends or outside of business hours\nlet Saturday = time(6.00:00:00);\nlet Sunday = time(0.00:00:00);\nAuditLogs\n| where OperationName has \"conditional access\"\n// extend LocalTime to your time zone\n| extend LocalTime=TimeGenerated + 8h\n// Change hours of the day to suit your company, i.e this would find activations between 6pm and 6am\n| where dayofweek(LocalTime) in (Saturday, Sunday) or hourofday(LocalTime) !between (6 .. 18)\n| extend ['Conditional Access Policy Name'] = tostring(TargetResources[0].displayName)\n| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\n| project LocalTime, OperationName, ['Conditional Access Policy Name'], Actor\n| sort by LocalTime desc \n",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/fefbeacc-bff8-4b90-b70f-5dbd849f6231')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Office 365 - Summarize Teams guest additions",
                "description": "Find any of your Teams that have had guests added to them in the last week and arrange by the Teams with the most guests added.",
                "body": "//Find any of your Teams that have had guests added to them in the last week and arrange by the Teams with the most guests added.\r\nOfficeActivity\r\n| where TimeGenerated > ago(7d)\r\n| where Operation == \"MemberAdded\"\r\n| mv-expand Members\r\n| extend UserAdded = tostring(Members.UPN)\r\n| where UserAdded contains \"#EXT#\"\r\n| where CommunicationType == \"Team\"\r\n| summarize\r\n    ['Number of Guests Added']=dcount(UserAdded),\r\n    ['List of Guests Added']=make_set(UserAdded)\r\n    by TeamName\r\n| sort by ['Number of Guests Added'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Office 365"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/ff47c385-c565-40d6-ab4b-a368274db869')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Summarize LDAP and LDAPS traffic",
                "description": "Create a summary of the devices with inbound LDAP and LDAPS connections, sorted by the devices with the most inbound LDAP",
                "body": "//Create a summary of the devices with inbound LDAP and LDAPS connections, sorted by the devices with the most inbound LDAP\r\nDeviceNetworkEvents\r\n| where ActionType == \"InboundConnectionAccepted\"\r\n| where LocalPort in (\"389\", \"636\", \"3269\")\r\n| summarize\r\n    ['Count of Inbound LDAP Connections']=countif(LocalPort == 389),\r\n    ['Count of Distinct Inbound LDAP Connections']=dcountif(RemoteIP, LocalPort == 389),\r\n    ['List of Inbound LDAP Connections']=make_set_if(RemoteIP, LocalPort == 389),\r\n    ['Count of Inbound LDAPS Connections']=countif(LocalPort in (\"636\", \"3269\")),\r\n    ['Count of Distinct Inbound LDAPS Connections']=dcountif(RemoteIP, LocalPort in (\"636\", \"3269\")),\r\n    ['List of Inbound LDAPS Connections']=make_set_if(RemoteIP, LocalPort in (\"636\", \"3269\"))\r\n    by DeviceName\r\n| sort by ['Count of Distinct Inbound LDAP Connections'] desc ",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/ffc88910-8930-4b7a-9914-c90fe461cd3d')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure AD - Detect first time access to Azure AD management interfaces",
                "description": "Detects users who have accessed Azure AD Management interfaces, such as Azure AD PowerShell or Graph Explorer, who have not accessed in the previous timeframe. Add additional applications to include them in the same query, i.e Defender for Cloud Apps portal.",
                "body": "//Detects users who have accessed Azure AD Management interfaces who have not accessed in the previous timeframe\r\n//Select a time frame to look back on, i.e find users logging on for the first time today not seen in the prior 60 days\r\nlet timeframe = startofday(ago(60d));\r\nlet applications = dynamic([\"Azure Active Directory PowerShell\", \"Microsoft Azure PowerShell\", \"Graph Explorer\", \"ACOM Azure Website\"]);\r\nSigninLogs\r\n| where TimeGenerated > timeframe and TimeGenerated < startofday(now())\r\n| where AppDisplayName in (applications)\r\n| project UserPrincipalName, AppDisplayName\r\n| join kind=rightanti\r\n    (\r\n    SigninLogs\r\n    | where TimeGenerated > startofday(now())\r\n    | where AppDisplayName in (applications)\r\n    )\r\n    on UserPrincipalName, AppDisplayName\r\n| where ResultType == 0\r\n| project TimeGenerated, UserPrincipalName, ResultType, AppDisplayName, IPAddress, Location, UserAgent",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure AD Audit",
                        "Azure AD Signins"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/ffd96347-002e-47cd-b94f-a0c1247c89e8')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "Azure - Visualize WAF traffic over time",
                "description": "Visualize WAF rule actions such as allowed, blocked, detected and matched over time\n",
                "body": "//Visualize WAF rule actions such as allowed, blocked, detected and matched over time\r\nAzureDiagnostics\r\n| where TimeGenerated > ago(30d)\r\n| where ResourceType == \"APPLICATIONGATEWAYS\"\r\n| summarize count()by action_s, bin(TimeGenerated, 1h)\r\n| where isnotempty(action_s)\r\n| render timechart with (ytitle=\"WAF Hit Count\", title=\"Web application firewall traffic over time\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Azure Resources"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/querypacks/queries",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('resourceName'), '/fff39b3c-e152-42ef-b2d9-77dab9064def')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/querypacks', parameters('resourceName'))]"
            ],
            "properties": {
                "displayName": "MDE - Visualize volume of data copied to USB",
                "description": "Visualize how much data is being copied to USB drives per day in your environment over the time range.",
                "body": "//Visualize how much data is being copied to USB drives per day in your environment over the time range.\r\nDeviceEvents\r\n| where TimeGenerated > ago (21d)\r\n| project TimeGenerated, ActionType, AdditionalFields, DeviceId, FileName\r\n| where ActionType == \"UsbDriveMounted\"\r\n| extend DriveLetter = tostring(todynamic(AdditionalFields).DriveLetter)\r\n| join kind=inner (DeviceFileEvents\r\n    | where TimeGenerated > ago (21d)\r\n    | project TimeGenerated, ActionType, FolderPath, DeviceId, FileName, FileSize\r\n    | extend FileCopyTime = TimeGenerated\r\n    | where ActionType == \"FileCreated\"\r\n    | parse FolderPath with DriveLetter '\\\\' *\r\n    | extend DriveLetter = tostring(DriveLetter)\r\n    )\r\n    on DeviceId, DriveLetter\r\n| distinct FileCopyTime, FileName1, FileSize\r\n| summarize DataCopiedinGB=sum(FileSize / 1024 / 1024 / 1024) by startofday(FileCopyTime)\r\n| render columnchart\r\n    with (\r\n    kind=unstacked,\r\n    xtitle=\"Data Copied in GB\",\r\n    ytitle=\"Day\",\r\n    title=\"Data Copied to USB per day\")",
                "related": {
                    "categories": [
                        "security"
                    ],
                    "resourceTypes": [
                        "microsoft.operationalinsights/workspaces"
                    ]
                },
                "tags": {
                    "labels": [
                        "Defender for Endpoint"
                    ]
                }
            }
        }
    ]
}